{"version":3,"sources":["utils/apollo-client.js","store/message.js","store/auth.js","store/store.js","theme.js","components/App/GlobalStyles.js","graphql/post.js","graphql/user.js","graphql/messages.js","graphql/notification.js","components/icons/UserIcon.js","components/icons/CloseIcon.js","components/icons/UploadImageIcon.js","components/icons/LikeIcon.js","components/icons/PostCommentIcon.js","components/icons/ExploreIcon.js","components/icons/NotificationIcon.js","components/icons/MenuIcon.js","components/icons/HomeIcon.js","components/icons/PeopleIcon.js","components/icons/SearchIcon.js","components/icons/DotsIcon.js","components/icons/InfoIcon.js","components/icons/WarningIcon.js","components/icons/ErrorIcon.js","components/icons/SuccessIcon.js","components/icons/EmptyIcon.js","components/icons/NotFoundIcon.js","components/icons/EnvelopeIcon.js","components/icons/EnvelopeOpenIcon.js","components/icons/SendIcon.js","components/icons/PencilIcon.js","components/Layout.js","components/Form.js","constants/MessageType.js","components/Message.js","components/Loading.js","components/Text.js","routes.js","pages/Auth/SignIn.js","pages/Auth/AuthHeader.js","hooks/useDebounce.js","hooks/useClickOutside.js","graphql/location.js","components/Select/SelectOption.js","components/Head.js","pages/Auth/SignUp.js","pages/Auth/ForgotPassword.js","pages/Auth/ResetPassword.js","pages/Auth/AuthLayout.js","components/NotFound.js","components/Avatar.js","components/Search/SearchInput.js","components/Search/SearchResult.js","components/Search/Search.js","components/App/SignOut.js","components/App/Header/HeaderUserDropDown.js","components/App/Notification.js","components/App/Header/HeaderNotificationDropDown.js","utils/date.js","components/App/Header/HeaderMessageDropdown.js","components/App/Header/HeaderDropDowns.js","components/App/Header/Header.js","constants/Layout.js","components/App/Navigation.js","components/App/SideBar.js","components/App/UserSuggestions.js","graphql/comment.js","constants/NotificationType.js","hooks/useNotifications.js","components/CreateComment.js","graphql/follow.js","components/Follow.js","constants/DataLimit.js","components/PostPopup/PostPopupInfo.js","components/Comment.js","components/PostPopup/PostPopupComments.js","graphql/like.js","components/Like.js","components/PostPopup/PostPopupOptions.js","components/PostPopup/PostPopup.js","components/Confirm.js","components/Modal.js","components/PostCard/PostCardOption.js","components/PostCard/PostCard.js","components/InfiniteScroll.js","components/Skeleton.js","pages/Home/PostImageUpload.js","hooks/useGlobalMessage.js","components/CreatePost.js","constants/ImageSize.js","pages/Home/Home.js","pages/Profile/ProfileImageUpload.js","pages/Profile/ProfileCoverUpload.js","pages/Profile/ProfileInfo.js","components/Empty.js","pages/Profile/ProfilePosts.js","pages/Profile/Profile.js","pages/Explore/ExploreCard.js","pages/Explore/Explore.js","graphql/discount.js","pages/Discounts/Discount.js","pages/People/PeopleCard.js","pages/People/People.js","pages/Notifications/Notifications.js","pages/Post/Post.js","pages/Messages/MessagesUsers.js","pages/Messages/MessagesChatConversation.js","pages/Messages/MessagesChatHeading.js","pages/Messages/MessagesChat.js","pages/Messages/Messages.js","components/App/AppLayout.js","hooks/useWindowSize.js","components/App/ScrollToTop.js","components/App/App.js","index.js","pages/Auth/background.jpeg","pages/Profile/background.jpg"],"names":["createAuthLink","ApolloLink","operation","forward","Observable","observer","handle","Promise","resolve","then","oper","token","localStorage","getItem","setContext","headers","authorization","request","subscribe","next","bind","error","complete","catch","unsubscribe","messageInitialState","content","type","text","autoClose","messageReducer","state","action","payload","authInitialState","user","authReducer","StoreContext","createContext","store","message","auth","reducers","StoreProvider","children","Provider","value","useReducer","useStore","useContext","font","family","weight","light","normal","bold","size","tiny","xxs","xs","sm","md","lg","xl","colors","black","white","success","body","button","primary","main","dark","contrastText","secondary","disabled","hint","border","warning","info","grey","50","100","200","300","400","500","600","700","800","900","shadows","screen","spacing","none","radius","zIndex","GlobalStyle","createGlobalStyle","theme","postCommentsPayload","postAuthorPayload","postLikesPayload","CREATE_POST","gql","GET_FOLLOWED_POSTS","GET_POSTS","GET_POST","DELETE_POST","userPayload","GET_USER","GET_USER_POSTS","GET_AUTH_USER","GET_USERS","SEARCH_USERS","UPLOAD_PHOTO","SIGN_UP","SIGN_IN","REQUEST_PASSWORD_RESET","VERIFY_RESET_PASSWORD_TOKEN","RESET_PASSWORD","USER_SUGGESTIONS","GET_CONVERSATIONS","IS_USER_ONLINE_SUBSCRIPTION","GET_MESSAGES","GET_MESSAGES_SUBSCRIPTION","CREATE_MESSAGE","GET_NEW_CONVERSATIONS_SUBSCRIPTION","UPDATE_MESSAGE_SEEN","notificationPayload","CREATE_NOTIFICATION","DELETE_NOTIFICATION","GET_USER_NOTIFICATION","UPDATE_NOTIFICATION_SEEN","NOTIFICATION_CREATED_OR_DELETED","UserIcon","width","color","DEFAULT_COLOR","xmlns","viewBox","d","fill","CloseIcon","UploadImageIcon","LikeIcon","get","PostCommentIcon","ExploreIcon","NotificationIcon","MenuIcon","HomeIcon","PeopleIcon","SearchIcon","DotsIcon","cx","cy","r","InfoIcon","WarningIcon","ErrorIcon","SuccessIcon","EmptyIcon","height","fillRule","transform","fillOpacity","rx","ry","NotFoundIcon","EnvelopeIcon","EnvelopeOpenIcon","SendIcon","PencilIcon","Container","styled","div","p","marginTop","maxWidth","padding","Content","Spacing","top","right","bottom","left","inline","hideOnSm","Overlay","transparency","Button","ghost","fullWidth","InputText","input","borderColor","Textarea","textarea","MessageType","form","SUCCESS","INFO","WARNING","ERROR","Object","keys","fade","keyframes","Root","Close","Message","dispatch","useEffect","timer","setTimeout","clearTimeout","Colors","onClick","defaultProps","Load","Round","Loading","LoadingDots","A","Link","Error","getHeadingStyles","css","H1","h1","H2","h2","H3","h3","MESSAGES","POST","InputContainer","ErrorMessage","ForgotPassword","withRouter","history","location","refetch","useState","emailOrUsername","password","values","setValues","setError","useMutation","signin","loading","pathname","handleChange","e","target","name","handleSubmit","a","preventDefault","variables","response","setItem","data","push","graphQLErrors","onSubmit","autoFocus","onChange","placeholder","to","StyledContainer","Logo","SignInContainer","AuthHeader","SiteInfo","useDebounce","delay","debouncedValue","setDebouncedValue","handler","useClickOutside","ref","document","addEventListener","handleClickOutside","removeEventListener","event","current","contains","backgroundColor","Head","title","description","Helmet","Welcome","Heading","Form","fullName","username","email","signup","validate","length","test","String","toLowerCase","Text","setEmail","setMessage","requestResetPassword","requestPasswordReset","confirmPassword","mutationError","setMutationError","url","URLSearchParams","search","useQuery","queryLoading","queryError","resetPassword","mutationLoading","backgroundImage","Pages","AuthLayout","exact","path","render","component","NotFound","showHomePageLink","Image","img","Avatar","image","src","IconContainer","Input","hideIcon","SearchInput","onFocus","inputRef","StyledA","Item","Name","UserName","NoSearchResult","SearchResult","users","forMessage","map","key","id","generatePath","Routes","userId","StyledLoading","Search","others","client","useApolloClient","isOpenSearchResult","setIsOpenSearchResult","searchQuery","setSearchQuery","setUsers","setLoading","useRef","debounceSearchQuery","query","searchUsers","handleInputChange","replace","removeItem","resetStore","CSS","HeaderUserDropDown","userRef","NotificationItem","LeftSide","Action","PostImage","Notification","notification","close","React","mutate","mutation","refetchQueries","updateNotificationSeen","newNotifications","follow","like","comment","author","post","Empty","HeaderNotificationDropDown","notificationRef","dropdownData","closeDropDown","timeAgo","unixTimestamp","date","Date","parseInt","seconds","Math","floor","interval","User","NavLink","Info","FullName","LastMessage","CreatedAt","HeaderMessageDropdown","messageRef","lastMessage","lastMessageCreatedAt","HeaderDropDowns","dropdownOpen","USER","NOTIFICATION","MESSAGE","Wrapper","Hamburger","RightSide","countCSS","NotificationCount","span","MessageCount","toggleSideBar","setDropdownOpen","setDropdownData","closeOnClickOutside","handleIconClick","dropdownType","newConversations","List","ul","ListItem","li","Navigation","activeClassName","HEADER_HEIGHT","isOpen","active","sideBarRef","isAuthUsersProfilePage","substring","UserSuggestions","matchPath","suggestPeople","CREATE_COMMENT","DELETE_COMMENT","NotificationType","useNotifications","console","create","postId","notificationType","notificationTypeId","authorId","remove","notificationId","toggle","hasDone","isNotified","notifications","find","n","options","delete","CreateComment","focus","setComment","buttonEl","TextareaEl","authUserId","createComment","onKeyDown","keyCode","click","CREATE_FOLLOW","DELETE_FOLLOW","isFollowing","Follow","following","f","followerId","skip","limit","handleClickFollow","createFollow","Author","PostPopupInfo","DeleteButton","CommentSection","Comment","postAuthor","deleteComment","handleDeleteComment","Comments","usedInModal","PostPopupComments","comments","CREATE_LIKE","DELETE_LIKE","StyledButton","Like","likes","withText","hasLiked","l","handleButtonClick","createLike","Icons","Count","PostPopupOptions","postLikes","Left","Right","CloseModal","Title","PostPopup","closeModal","getPost","ButtonContainer","Confirm","onCancel","onOk","cancelText","okText","Modal","open","onClose","otherProps","FollowItem","PostCardOption","closeOption","deletePost","navigator","clipboard","writeText","process","TopRow","Poster","BottomRow","CountAndIcons","CommentLine","PostCard","imagePublicId","createdAt","openModal","isCommentOpen","setIsCommentOpen","isOptionOpen","setIsOptionOpen","InfiniteScroll","dataKey","fetchMore","count","handleScroll","useMemo","loadMore","updateQuery","prev","fetchMoreResult","previousData","fetchMoreData","setWith","clone","uniqBy","windowHeight","window","innerHeight","scrollTop","documentElement","offsetHeight","scrolled","propTypes","PropTypes","array","isRequired","string","number","func","object","Skeleton","skeleton","i","loopSkeleton","Label","label","PostImageUpload","accept","htmlFor","useGlobalMessage","dispatchAction","messageType","ImagePreviewContainer","ImagePreview","Options","Buttons","CreatePost","setTitle","setImage","isFocused","setIsFocused","apiError","setApiError","createPost","handleReset","handlePostImageUpload","file","files","MAX_POST_IMAGE_SIZE","isShareDisabled","URL","createObjectURL","Home","modalPostId","setModalPostId","notifyOnNetworkStatusChange","networkStatus","pushState","getFollowedPosts","posts","showNextLoading","renderContent","authUser","ProfileImageUpload","handleImageChange","MAX_USER_PROFILE_IMAGE_SIZE","alt","defaultBackgroundImage","ProfileCoverUpload","coverImagePublicId","coverImage","MAX_USER_COVER_IMAGE_SIZE","isCover","ProfileImage","FollowAndMessage","Online","ProfileInfo","useSubscription","isUserOnline","isOnline","followers","ProfilePosts","isPostPopupOpen","setIsPostPopupOpen","getUserPosts","match","params","getUser","GET_DISCOUNTS","PostsContainer","Explore","getDiscounts","discounts","log","discount","ImageContainer","InitialLetters","PeopleCard","setColor","randomColor","random","split","slice","join","charAt","PeopleContainer","People","getUsers","Notifications","getUserNotifications","HeadingContainer","NewMessage","SearchContainer","UserContainer","seen","FullNameUnSeen","UnSeen","subscribeToMore","subscriptionData","newConversation","oldConversations","getConversations","some","u","unseen","lastMessageSender","Conversation","MessageDate","userMessage","MessageWrapper","StyledTextarea","SendButton","MessagesChatConversation","messages","chatUser","bottomRef","messageText","setMessageText","createMessage","scrollIntoView","sendMessage","sender","receiver","isFirstMessage","isAuthUserReceiver","month","getMonth","day","getDay","year","getFullYear","time","toLocaleString","hour","minute","hour12","currentDate","shiftKey","To","MessagesChat","fetchPolicy","messagesLoading","updateMessageSeen","useCallback","newMessage","messageCreated","getMessages","Messages","isDesktop","isClient","getSize","innerWidth","undefined","windowSize","setWindowSize","handleResize","useWindowSize","isSideBarOpen","setIsSidebarOpen","Discount","Profile","Post","scrollTo","App","oldNotifications","getAuthUser","notificationCreatedOrDeleted","href","index","findIndex","splice","mergeConversations","API_URL","apolloClient","apiUrl","websocketApiUrl","cache","InMemoryCache","errorLink","onError","networkError","locations","authLink","uploadLink","createUploadLink","uri","authToken","wsLink","WebSocketLink","timeout","reconnect","connectionParams","subscriptionClient","maxConnectTimeGenerator","duration","max","terminatingLink","getMainDefinition","kind","ApolloClient","link","from","createApolloClient","getElementById","module","exports"],"mappings":"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","file":"static/js/main.dfefb80a.chunk.js","sourcesContent":["import { ApolloClient, ApolloLink, Observable, split, InMemoryCache } from '@apollo/client';\nimport { getMainDefinition } from '@apollo/client/utilities';\nimport { onError } from '@apollo/client/link/error';\nimport { WebSocketLink } from '@apollo/client/link/ws';\nimport { createUploadLink } from 'apollo-upload-client';\n\n/**\n * Creates a Apollo Link, that adds authentication token to request\n */\nconst createAuthLink = () => {\n  const request = (operation) => {\n    const token = localStorage.getItem('token');\n    operation.setContext({\n      headers: {\n        authorization: token,\n      },\n    });\n  };\n\n  return new ApolloLink(\n    (operation, forward) =>\n      new Observable((observer) => {\n        let handle;\n        Promise.resolve(operation)\n          .then((oper) => request(oper))\n          .then(() => {\n            handle = forward(operation).subscribe({\n              next: observer.next.bind(observer),\n              error: observer.error.bind(observer),\n              complete: observer.complete.bind(observer),\n            });\n          })\n          .catch(observer.error.bind(observer));\n\n        return () => {\n          if (handle) handle.unsubscribe();\n        };\n      })\n  );\n};\n\n/**\n * Helper functions that handles error cases\n */\nconst handleErrors = () => {\n  return onError(({ graphQLErrors, networkError }) => {\n    if (graphQLErrors) {\n      graphQLErrors.map(({ message, locations, path }) =>\n        console.log(`[GraphQL error]: Message: ${message}, Location: ${locations}, Path: ${path}`)\n      );\n    }\n\n    if (networkError) {\n      console.log(`[Network error]: ${networkError}`);\n    }\n  });\n};\n\n/**\n * Creates a Apollo Client\n *\n * @param {string} apiUrl, GraphQL api url\n * @param {string} websocketApiUrl, GraphQL WebSocket api url\n */\nexport const createApolloClient = (apiUrl, websocketApiUrl) => {\n  const cache = new InMemoryCache();\n\n  const errorLink = handleErrors();\n  const authLink = createAuthLink();\n  const uploadLink = createUploadLink({ uri: apiUrl }); // Upload link also creates an HTTP link\n\n  // Create WebSocket link\n  const authToken = localStorage.getItem('token');\n  const wsLink = new WebSocketLink({\n    uri: websocketApiUrl,\n    options: {\n      timeout: 60000,\n      reconnect: true,\n      connectionParams: {\n        authorization: authToken,\n      },\n    },\n  });\n\n  // Temporary fix for early websocket closure resulting in websocket connections not being instantiated\n  // https://github.com/apollographql/subscriptions-transport-ws/issues/377\n  wsLink.subscriptionClient.maxConnectTimeGenerator.duration = () =>\n    wsLink.subscriptionClient.maxConnectTimeGenerator.max;\n\n  // Split links, so we can send data to each link\n  // depending on what kind of operation is being sent\n  const terminatingLink = split(\n    ({ query }) => {\n      const { kind, operation } = getMainDefinition(query);\n      return kind === 'OperationDefinition' && operation === 'subscription';\n    },\n    wsLink,\n    uploadLink\n  );\n\n  return new ApolloClient({\n    link: ApolloLink.from([errorLink, authLink, terminatingLink]),\n    cache,\n  });\n};\n","/**\n * Actions types\n */\nexport const SET_MESSAGE = 'SET_MESSAGE';\nexport const CLEAR_MESSAGE = 'CLEAR_MESSAGE';\n\n/**\n * Initial State\n */\nexport const messageInitialState = {\n  content: {\n    type: '',\n    text: '',\n    autoClose: true,\n  },\n};\n\n/**\n * Message Reducer\n */\nexport const messageReducer = (state = messageInitialState, action) => {\n  switch (action.type) {\n    case SET_MESSAGE:\n      return {\n        ...state,\n        content: {\n          type: action.payload.type,\n          text: action.payload.text,\n          autoClose: action.payload.autoClose,\n        },\n      };\n    case CLEAR_MESSAGE: {\n      return {\n        ...state,\n        ...messageInitialState,\n      };\n    }\n\n    default:\n      return state;\n  }\n};\n","/**\n * Actions types\n */\nexport const SET_AUTH_USER = 'SET_AUTH_USER';\nexport const CLEAR_AUTH_USER = 'CLEAR_AUTH_USER';\n\n/**\n * Initial State\n */\nexport const authInitialState = {\n  user: null,\n};\n\n/**\n * User Reducer\n */\nexport const authReducer = (state = authInitialState, action) => {\n  switch (action.type) {\n    case SET_AUTH_USER:\n      return {\n        ...state,\n        user: action.payload,\n      };\n    case CLEAR_AUTH_USER: {\n      return {\n        ...state,\n        ...authInitialState,\n      };\n    }\n\n    default:\n      return state;\n  }\n};\n","import React, { createContext, useContext, useReducer } from 'react';\nimport { messageReducer, messageInitialState } from './message';\nimport { authReducer, authInitialState } from './auth';\n\n/**\n * React context for store\n */\nconst StoreContext = createContext();\n\n/**\n * Combine initial states\n */\nconst store = {\n  message: messageInitialState,\n  auth: authInitialState,\n};\n\n/**\n * Combine reducers\n */\nconst reducers = (store, action) => ({\n  message: messageReducer(store.message, action),\n  auth: authReducer(store.auth, action),\n});\n\n/**\n * Store context provider\n */\nexport const StoreProvider = ({ children }) => (\n  <StoreContext.Provider value={useReducer(reducers, store)}>{children}</StoreContext.Provider>\n);\n\n/**\n * React hook for consuming store\n */\nexport const useStore = () => useContext(StoreContext);\n","/**\n * Theme for applying consistent styling to the app\n */\n\nexport default {\n  /**\n   * Font\n   */\n  font: {\n    family: \"'Open Sans', sans-serif\",\n    weight: {\n      light: '300',\n      normal: '400',\n      bold: '600',\n    },\n    size: {\n      tiny: '11px',\n      xxs: '13px',\n      xs: '14px',\n      sm: '16px',\n      md: '18px',\n      lg: '20px',\n      xl: '34px',\n    },\n  },\n\n  /**\n   * Colors\n   */\n  colors: {\n    black: '#000000',\n    white: '#fff',\n    success: '#34a853',\n    body: '#fcfbfe',\n    button: '#ed6966',\n\n    primary: {\n      light: '#7986cb',\n      main: '#ed6966',\n      dark: '#303f9f',\n      contrastText: '#fff',\n    },\n\n    secondary: {\n      light: '#ff4081',\n      main: '#f50057',\n      dark: '#c51162',\n      contrastText: '#fff',\n    },\n\n    text: {\n      primary: 'rgba(0, 0, 0, 0.87)',\n      secondary: 'rgba(0, 0, 0, 0.54)',\n      disabled: 'rgba(0, 0, 0, 0.38)',\n      hint: 'rgba(0, 0, 0, 0.38)',\n    },\n\n    border: {\n      light: '#f5f5f5',\n      main: '#e0e0e0',\n      dark: '#bdbdbd',\n    },\n\n    error: {\n      light: '#e57373',\n      main: '#f44336',\n      dark: '#d32f2f',\n      contrastText: '#fff',\n    },\n\n    warning: '#FFB818',\n\n    info: '#4169E1',\n\n    grey: {\n      50: '#fafafa',\n      100: '#f5f5f5',\n      200: '#eeeeee',\n      300: '#e0e0e0',\n      400: '#bdbdbd',\n      500: '#9e9e9e',\n      600: '#757575',\n      700: '#616161',\n      800: '#424242',\n      900: '#212121',\n    },\n  },\n\n  /**\n   * Shadows\n   */\n  shadows: {\n    sm: '0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24)',\n    md: 'rgba(0, 0, 0, 0.3) 0px 1px 8px 0px',\n    lg: '0 3px 6px rgba(0,0,0,0.16), 0 3px 6px rgba(0,0,0,0.23)',\n    xl: '0 10px 20px rgba(0,0,0,0.19), 0 6px 6px rgba(0,0,0,0.23)',\n  },\n\n  /**\n   * Breakpoints\n   */\n  screen: {\n    xs: '540px',\n    sm: '640px',\n    md: '1007px',\n    lg: '1100px',\n    xl: '1230px',\n  },\n\n  /**\n   * Spacing\n   */\n  spacing: {\n    none: 0,\n    xxs: '5px',\n    xs: '10px',\n    sm: '20px',\n    md: '30px',\n    lg: '40px',\n    xl: '60px',\n  },\n\n  /**\n   * Radius\n   */\n  radius: {\n    sm: '3px',\n    md: '6px',\n    lg: '12px',\n  },\n\n  /**\n   * zIndex\n   */\n  zIndex: {\n    xs: 10,\n    sm: 20,\n    md: 30,\n    lg: 40,\n    xl: 50,\n  },\n};\n","import { createGlobalStyle } from 'styled-components';\nimport theme from 'theme';\n\n/**\n * Global styles for the application\n */\nexport const GlobalStyle = createGlobalStyle`\n  html {\n    box-sizing: border-box;\n  }\n\n  *,\n  *:before,\n  *:after {\n    box-sizing: inherit;\n  }\n\n  body {\n    font-family: open sans;\n    color: ${theme.colors.text.primary};\n    background-color: ${theme.colors.body};\n  }\n\n  #root {\n    position: relative;\n    min-height: 100vh;\n  }\n`;\n","import { gql } from '@apollo/client';\n\n/**\n * Records to select from post comments\n */\nexport const postCommentsPayload = `\n  comments {\n    id\n    comment\n    author {\n      id\n      username\n      fullName\n      image\n    }\n  }\n`;\n\n/**\n * Records to select from post author\n */\nexport const postAuthorPayload = `\n  author {\n    id\n    username\n    fullName\n    image\n    following {\n      id\n      user\n    }\n    followers {\n      id\n      user\n    }\n    notifications {\n      id\n      author {\n        id\n        username\n      }\n      follow {\n        id\n      }\n      like {\n        id\n      }\n      comment {\n        id\n      }\n    }\n  }\n`;\n\n/**\n * Records to select from post likes\n */\nexport const postLikesPayload = `\n  likes {\n    id\n    user\n    post\n  }\n`;\n\n/**\n * Creates a post\n */\nexport const CREATE_POST = gql`\n  mutation($input: CreatePostInput!) {\n    createPost(input: $input) {\n      id\n    }\n  }\n`;\n\n/**\n * Gets all posts from followed users\n */\nexport const GET_FOLLOWED_POSTS = gql`\n  query($userId: String!, $skip: Int, $limit: Int) {\n    getFollowedPosts(userId: $userId, skip: $skip, limit: $limit) {\n      count\n      posts {\n        id\n        title\n        image\n        imagePublicId\n        createdAt\n        ${postAuthorPayload}\n        ${postCommentsPayload}\n        ${postLikesPayload}\n      }\n    }\n  }\n`;\n\n/**\n * Gets all available posts\n */\nexport const GET_POSTS = gql`\n  query($authUserId: ID!, $skip: Int, $limit: Int) {\n    getPosts(authUserId: $authUserId, skip: $skip, limit: $limit) {\n      count\n      posts {\n        id\n        title\n        image\n        ${postAuthorPayload}\n        ${postCommentsPayload}\n        ${postLikesPayload}\n      }\n    }\n  }\n`;\n\n/**\n * Gets specific post by id\n */\nexport const GET_POST = gql`\n  query($id: ID!) {\n    getPost(id: $id) {\n      id\n      title\n      image\n      createdAt\n      ${postAuthorPayload}\n      ${postCommentsPayload}\n      ${postLikesPayload}\n    }\n  }\n`;\n\n/**\n * Deletes a post\n */\nexport const DELETE_POST = gql`\n  mutation($input: DeletePostInput!) {\n    deletePost(input: $input) {\n      id\n    }\n  }\n`;\n","import { gql } from '@apollo/client';\nimport { postCommentsPayload, postAuthorPayload, postLikesPayload } from './post';\n\n/**\n * Records to select from user\n */\nconst userPayload = `\n  id\n  username\n  email\n  fullName\n  image\n  imagePublicId\n  coverImage\n  coverImagePublicId\n  createdAt\n`;\n\n/**\n * Gets specific user by username\n */\nexport const GET_USER = gql`\n  query($username: String, $id: ID) {\n    getUser(username: $username, id: $id) {\n      ${userPayload}\n      isOnline\n      posts {\n        id\n      }\n      following {\n        id\n      }\n      followers {\n        id\n      }\n      notifications {\n        id\n        author {\n          id\n          username\n        }\n        follow {\n          id\n        }\n        like {\n          id\n        }\n        comment {\n          id\n        }\n      }\n    }\n  }\n`;\n\n/**\n * Gets user posts\n */\nexport const GET_USER_POSTS = gql`\n  query($username: String!, $skip: Int, $limit: Int) {\n    getUserPosts(username: $username, skip: $skip, limit: $limit) {\n      count\n      posts {\n        id\n        title\n        image\n        imagePublicId\n        createdAt\n        ${postAuthorPayload}\n        ${postCommentsPayload}\n        ${postLikesPayload}\n      }\n    }\n  }\n`;\n\n/**\n * Gets authenticated user\n */\nexport const GET_AUTH_USER = gql`\n  query {\n    getAuthUser {\n      ${userPayload}\n      newNotifications {\n        id\n        createdAt\n        author {\n          id\n          fullName\n          username\n          image\n        }\n        follow {\n          id\n        }\n        comment {\n          id\n          post {\n            id\n            image\n          }\n        }\n        like {\n          id\n          post {\n            id\n            image\n          }\n        }\n      }\n      newConversations {\n        id\n        username\n        fullName\n        image\n        lastMessage\n        lastMessageCreatedAt\n      }\n      likes {\n        id\n        user\n        post\n      }\n      posts {\n        id\n      }\n      following {\n        id\n        user\n      }\n      followers {\n        id\n      }\n    }\n  }\n`;\n\n/**\n * Gets all available users\n */\nexport const GET_USERS = gql`\n  query($userId: String!, $skip: Int, $limit: Int) {\n    getUsers(userId: $userId, skip: $skip, limit: $limit) {\n      count\n      users {\n        id\n        fullName\n        username\n        image\n        following {\n          id\n          user\n        }\n        followers {\n          id\n        }\n        notifications {\n          id\n          author {\n            id\n            username\n          }\n          follow {\n            id\n          }\n        }\n      }\n    }\n  }\n`;\n\n/**\n * Searches users by username or fullName\n */\nexport const SEARCH_USERS = gql`\n  query($searchQuery: String!) {\n    searchUsers(searchQuery: $searchQuery) {\n      id\n      fullName\n      username\n      image\n    }\n  }\n`;\n\n/**\n * Uploads user photo\n */\nexport const UPLOAD_PHOTO = gql`\n  mutation($input: UploadUserPhotoInput!) {\n    uploadUserPhoto(input: $input) {\n      id\n    }\n  }\n`;\n\n/**\n * Sign up user\n */\nexport const SIGN_UP = gql`\n  mutation($input: SignUpInput!) {\n    signup(input: $input) {\n      token\n    }\n  }\n`;\n\n/**\n * Sign in user\n */\nexport const SIGN_IN = gql`\n  mutation($input: SignInInput!) {\n    signin(input: $input) {\n      token\n    }\n  }\n`;\n\n/**\n * Request reset password\n */\nexport const REQUEST_PASSWORD_RESET = gql`\n  mutation($input: RequestPasswordResetInput!) {\n    requestPasswordReset(input: $input) {\n      message\n    }\n  }\n`;\n\n/**\n * Verify reset password token\n */\nexport const VERIFY_RESET_PASSWORD_TOKEN = gql`\n  query($email: String!, $token: String!) {\n    verifyResetPasswordToken(email: $email, token: $token) {\n      message\n    }\n  }\n`;\n\n/**\n * Reset password\n */\nexport const RESET_PASSWORD = gql`\n  mutation($input: ResetPasswordInput!) {\n    resetPassword(input: $input) {\n      token\n    }\n  }\n`;\n\n/**\n * People suggestions for auth user\n */\nexport const USER_SUGGESTIONS = gql`\n  query($userId: String!) {\n    suggestPeople(userId: $userId) {\n      id\n      fullName\n      username\n      image\n    }\n  }\n`;\n\n/**\n * Get users with whom authUser had a conversation\n */\nexport const GET_CONVERSATIONS = gql`\n  query($authUserId: ID!) {\n    getConversations(authUserId: $authUserId) {\n      id\n      username\n      fullName\n      image\n      isOnline\n      seen\n      lastMessage\n      lastMessageSender\n      lastMessageCreatedAt\n    }\n  }\n`;\n\n/**\n * Checks if user is online in real time\n */\nexport const IS_USER_ONLINE_SUBSCRIPTION = gql`\n  subscription($authUserId: ID!, $userId: ID!) {\n    isUserOnline(authUserId: $authUserId, userId: $userId) {\n      userId\n      isOnline\n    }\n  }\n`;\n","import { gql } from '@apollo/client';\n\n/**\n * Gets user's specific conversation\n */\nexport const GET_MESSAGES = gql`\n  query($authUserId: ID!, $userId: ID!) {\n    getMessages(authUserId: $authUserId, userId: $userId) {\n      id\n      receiver {\n        id\n        username\n        fullName\n        image\n        createdAt\n      }\n      sender {\n        id\n        username\n        fullName\n        image\n        createdAt\n      }\n      message\n      createdAt\n    }\n  }\n`;\n\n/**\n * Gets user's specific conversation in real time\n */\nexport const GET_MESSAGES_SUBSCRIPTION = gql`\n  subscription($authUserId: ID!, $userId: ID!) {\n    messageCreated(authUserId: $authUserId, userId: $userId) {\n      id\n      receiver {\n        id\n        username\n        fullName\n        image\n        createdAt\n      }\n      sender {\n        id\n        username\n        fullName\n        image\n        createdAt\n      }\n      message\n      createdAt\n    }\n  }\n`;\n\n/**\n * Creates a message\n */\nexport const CREATE_MESSAGE = gql`\n  mutation($input: CreateMessageInput!) {\n    createMessage(input: $input) {\n      id\n      isFirstMessage\n    }\n  }\n`;\n\n/**\n * Get user's new conversation in real time\n */\nexport const GET_NEW_CONVERSATIONS_SUBSCRIPTION = gql`\n  subscription {\n    newConversation {\n      id\n      username\n      fullName\n      image\n      isOnline\n      seen\n      lastMessage\n      lastMessageSender\n      lastMessageCreatedAt\n    }\n  }\n`;\n\n/**\n * Updates message seen property\n */\nexport const UPDATE_MESSAGE_SEEN = gql`\n  mutation($input: UpdateMessageSeenInput!) {\n    updateMessageSeen(input: $input)\n  }\n`;\n","import { gql } from '@apollo/client';\n\n/**\n * Records to select from notifications\n */\nconst notificationPayload = `\n  id\n  createdAt\n  author {\n    id\n    fullName\n    username\n    image\n  }\n  follow {\n    id\n  }\n  comment {\n    id\n    post {\n      id\n      image\n    }\n  }\n  like {\n    id\n    post {\n      id\n      image\n    }\n  }\n`;\n\n/**\n * Creates a notification for user\n */\nexport const CREATE_NOTIFICATION = gql`\n  mutation($input: CreateNotificationInput!) {\n    createNotification(input: $input) {\n      id\n    }\n  }\n`;\n\n/**\n * Deletes a notification\n */\nexport const DELETE_NOTIFICATION = gql`\n  mutation($input: DeleteNotificationInput!) {\n    deleteNotification(input: $input) {\n      id\n    }\n  }\n`;\n\n/**\n * Gets notifications for user\n */\nexport const GET_USER_NOTIFICATION = gql`\n  query($userId: ID!, $skip: Int, $limit: Int) {\n    getUserNotifications(userId: $userId, skip: $skip, limit: $limit) {\n      count\n      notifications {\n        ${notificationPayload}\n      }\n    }\n  }\n`;\n\n/**\n * Updates notification seen property\n */\nexport const UPDATE_NOTIFICATION_SEEN = gql`\n  mutation($input: UpdateNotificationSeenInput!) {\n    updateNotificationSeen(input: $input)\n  }\n`;\n\n/**\n * Get user's notifications in real time\n */\nexport const NOTIFICATION_CREATED_OR_DELETED = gql`\n  subscription {\n    notificationCreatedOrDeleted {\n      operation\n      notification {\n        ${notificationPayload}\n      }\n    }\n  }\n`;\n","import React from 'react';\nimport theme from 'theme';\n\n/**\n * User icon, that uses theme color options\n *\n * @param {string} width\n * @param {string} color\n */\nexport const UserIcon = ({ width, color }) => {\n  const DEFAULT_WIDTH = '24';\n  const DEFAULT_COLOR = theme.colors.grey[600];\n\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width={width || DEFAULT_WIDTH} viewBox=\"0 0 53 53\">\n      <path\n        d=\"M18.613 41.552l-7.907 4.313a7.106 7.106 0 0 0-1.269.903A26.377 26.377 0 0 0 26.5 53c6.454 0 12.367-2.31 16.964-6.144a7.015 7.015 0 0 0-1.394-.934l-8.467-4.233a3.229 3.229 0 0 1-1.785-2.888v-3.322c.238-.271.51-.619.801-1.03a19.482 19.482 0 0 0 2.632-5.304c1.086-.335 1.886-1.338 1.886-2.53v-3.546c0-.78-.347-1.477-.886-1.965v-5.126s1.053-7.977-9.75-7.977-9.75 7.977-9.75 7.977v5.126a2.644 2.644 0 0 0-.886 1.965v3.546c0 .934.491 1.756 1.226 2.231.886 3.857 3.206 6.633 3.206 6.633v3.24a3.232 3.232 0 0 1-1.684 2.833z\"\n        fill=\"#e7eced\"\n      />\n      <path\n        d=\"M26.953.004C12.32-.246.254 11.414.004 26.047-.138 34.344 3.56 41.801 9.448 46.76a7.041 7.041 0 0 1 1.257-.894l7.907-4.313a3.23 3.23 0 0 0 1.683-2.835v-3.24s-2.321-2.776-3.206-6.633a2.66 2.66 0 0 1-1.226-2.231v-3.546c0-.78.347-1.477.886-1.965v-5.126S15.696 8 26.499 8s9.75 7.977 9.75 7.977v5.126c.54.488.886 1.185.886 1.965v3.546c0 1.192-.8 2.195-1.886 2.53a19.482 19.482 0 0 1-2.632 5.304c-.291.411-.563.759-.801 1.03V38.8c0 1.223.691 2.342 1.785 2.888l8.467 4.233a7.05 7.05 0 0 1 1.39.932c5.71-4.762 9.399-11.882 9.536-19.9C53.246 12.32 41.587.254 26.953.004z\"\n        fill={theme.colors[color] || DEFAULT_COLOR}\n      />\n    </svg>\n  );\n};\n","import React from 'react';\nimport theme from 'theme';\n\n/**\n * Close (X) icon\n *\n * @param {string} width\n * @param {string} color\n */\nexport const CloseIcon = ({ width, color }) => {\n  const DEFAULT_WIDTH = '12';\n  const DEFAULT_COLOR = theme.colors.text.secondary;\n\n  return (\n    <svg\n      width={width || DEFAULT_WIDTH}\n      fill={theme.colors[color] || DEFAULT_COLOR}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 47.971 47.971\"\n    >\n      <path d=\"M28.228 23.986L47.092 5.122a2.998 2.998 0 0 0 0-4.242 2.998 2.998 0 0 0-4.242 0L23.986 19.744 5.121.88a2.998 2.998 0 0 0-4.242 0 2.998 2.998 0 0 0 0 4.242l18.865 18.864L.879 42.85a2.998 2.998 0 1 0 4.242 4.241l18.865-18.864L42.85 47.091c.586.586 1.354.879 2.121.879s1.535-.293 2.121-.879a2.998 2.998 0 0 0 0-4.242L28.228 23.986z\" />\n    </svg>\n  );\n};\n","import React from 'react';\nimport theme from 'theme';\n\n/**\n * Upload image icon\n *\n * @param {string} width\n * @param {string} color\n */\nexport const UploadImageIcon = ({ width, color }) => {\n  const DEFAULT_WIDTH = '20';\n  const DEFAULT_COLOR = theme.colors.text.secondary;\n\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 100 100\" width={width || DEFAULT_WIDTH}>\n      <path\n        d=\"M50 40c-8.285 0-15 6.718-15 15 0 8.285 6.715 15 15 15 8.283 0 15-6.715 15-15 0-8.282-6.717-15-15-15zm40-15H78c-1.65 0-3.428-1.28-3.949-2.846l-3.102-9.309C70.426 11.28 68.65 10 67 10H33c-1.65 0-3.428 1.28-3.949 2.846l-3.102 9.309C25.426 23.72 23.65 25 22 25H10C4.5 25 0 29.5 0 35v45c0 5.5 4.5 10 10 10h80c5.5 0 10-4.5 10-10V35c0-5.5-4.5-10-10-10zM50 80c-13.807 0-25-11.193-25-25 0-13.806 11.193-25 25-25 13.805 0 25 11.194 25 25 0 13.807-11.195 25-25 25zm36.5-38.007a3.5 3.5 0 1 1 0-7 3.5 3.5 0 0 1 0 7z\"\n        fill={theme.colors[color] || DEFAULT_COLOR}\n      />\n    </svg>\n  );\n};\n","import React from 'react';\nimport theme from 'theme';\nimport { get } from 'lodash';\n\n/**\n * Post like icon\n *\n * @param {string} width\n * @param {string} color\n */\nexport const LikeIcon = ({ width, color }) => {\n  const DEFAULT_WIDTH = '18';\n  const DEFAULT_COLOR = theme.colors.text.secondary;\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width={width || DEFAULT_WIDTH}\n      fill={get(theme.colors, color) || DEFAULT_COLOR}\n      viewBox=\"0 0 511.999 511.999\"\n    >\n      <path d=\"M83.578 167.256H16.716C7.524 167.256 0 174.742 0 183.971v300.881c0 9.225 7.491 16.713 16.716 16.713h66.862c9.225 0 16.716-7.489 16.716-16.713V183.971c0-9.229-7.525-16.715-16.716-16.715zM470.266 167.256c-2.692-.456-128.739 0-128.739 0l17.606-48.032c12.148-33.174 4.283-83.827-29.424-101.835-10.975-5.864-26.309-8.809-38.672-5.697-7.09 1.784-13.321 6.478-17.035 12.767-4.271 7.233-3.83 15.676-5.351 23.696-3.857 20.342-13.469 39.683-28.354 54.2-25.952 25.311-106.571 98.331-106.571 98.331v267.45h278.593c37.592.022 62.228-41.958 43.687-74.749 22.101-14.155 29.66-43.97 16.716-66.862 22.102-14.155 29.66-43.97 16.716-66.862 38.134-24.423 25.385-84.871-19.172-92.407z\" />\n    </svg>\n  );\n};\n","import React from 'react';\nimport theme from 'theme';\n\n/**\n * Post comment icon\n *\n * @param {string} width\n * @param {string} color\n */\nexport const PostCommentIcon = ({ width, color }) => {\n  const DEFAULT_WIDTH = '18';\n  const DEFAULT_COLOR = theme.colors.text.secondary;\n\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 58 58\" width={width || DEFAULT_WIDTH}>\n      <path\n        d=\"M29 1.5c-16.016 0-29 11.641-29 26 0 5.292 1.768 10.211 4.796 14.318C4.398 46.563 3.254 53.246 0 56.5c0 0 9.943-1.395 16.677-5.462l.022.009c2.764-1.801 5.532-3.656 6.105-4.126.3-.421.879-.548 1.33-.277.296.178.483.503.489.848.01.622-.005.784-5.585 4.421A31.914 31.914 0 0 0 29 53.5c16.016 0 29-11.641 29-26s-12.984-26-29-26z\"\n        fill={theme.colors[color] || DEFAULT_COLOR}\n      />\n    </svg>\n  );\n};\n","import React from 'react';\nimport theme from 'theme';\n\n/**\n * Explore page icon\n *\n * @param {string} width\n * @param {string} color\n */\nexport const ExploreIcon = ({ width, color }) => {\n  const DEFAULT_WIDTH = '28';\n  const DEFAULT_COLOR = theme.colors.text.secondary;\n\n  return (\n    <svg\n      width={width || DEFAULT_WIDTH}\n      fill={theme.colors[color] || DEFAULT_COLOR}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 487.601 487.601\"\n    >\n      <path d=\"M379 229.65c-25.6 0-46.3 20.8-46.3 46.3 0 6.1 5 11.1 11.1 11.1s11.1-5 11.1-11.1c0-13.3 10.9-24.2 24.2-24.2 6.1 0 11.1-5 11.1-11.1-.1-6.1-5.1-11-11.2-11z\" />\n      <path d=\"M454.5 197.75c-2.7-2.6-5.6-5.1-8.6-7.5l-41-34.8c-15.8-11.2-34.6-18.3-55-19.7l2.2 2.2-24.9-25h-.2c-6.9-6.3-16.2-10.2-26.3-10.2-17.4 0-32.1 11.3-37.1 27-5-3.2-10.8-5.1-17.1-5.5-1-.1-2.1-.1-3.1-.1-7.1 0-13.7 2.1-19.3 5.6-5.1-15.6-19.8-26.9-37.1-26.9-10.1 0-19.3 3.8-26.3 10.2h-.2l-24.9 25 2.2-2.2c-20.4 1.4-39.3 8.6-55 19.7l-41 34.8c-3 2.3-5.9 4.8-8.6 7.5-20.5 19.8-33.2 47.5-33.2 78.2 0 60 48.8 108.8 108.8 108.8 55.4 0 101.3-41.7 107.9-95.4 8 4.6 17.3 7.2 27.1 7.2 9.9 0 19.1-2.6 27.1-7.2 6.7 53.6 52.5 95.3 107.9 95.3 60 0 108.8-48.8 108.8-108.8.1-30.7-12.6-58.4-33.1-78.2zm-345.7 152.5c-41 0-74.2-33.2-74.2-74.2s33.2-74.2 74.2-74.2 74.2 33.2 74.2 74.2c.1 40.9-33.2 74.2-74.2 74.2zm135.1-84.4c-13.3 0-24.1-10.8-24.1-24.1s10.8-24.1 24.1-24.1 24.1 10.8 24.1 24.1-10.8 24.1-24.1 24.1zm135.1 84.4c-41 0-74.2-33.2-74.2-74.2s33.2-74.2 74.2-74.2 74.2 33.2 74.2 74.2c0 40.9-33.2 74.2-74.2 74.2z\" />\n      <path d=\"M108.8 229.65c-25.6 0-46.3 20.8-46.3 46.3 0 6.1 5 11.1 11.1 11.1s11.1-5 11.1-11.1c0-13.3 10.9-24.2 24.2-24.2 6.1 0 11.1-5 11.1-11.1-.1-6.1-5.1-11-11.2-11z\" />\n    </svg>\n  );\n};\n","import React from 'react';\nimport theme from 'theme';\n\n/**\n * Notifications icon\n *\n * @param {string} width\n * @param {string} color\n */\nexport const NotificationIcon = ({ width, color }) => {\n  const DEFAULT_WIDTH = '23';\n  const DEFAULT_COLOR = theme.colors.text.secondary;\n\n  return (\n    <svg\n      width={width || DEFAULT_WIDTH}\n      fill={theme.colors[color] || DEFAULT_COLOR}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 611.999 611.999\"\n    >\n      <path d=\"M570.107 500.254c-65.037-29.371-67.511-155.441-67.559-158.622v-84.578c0-81.402-49.742-151.399-120.427-181.203C381.969 34 347.883 0 306.001 0c-41.883 0-75.968 34.002-76.121 75.849-70.682 29.804-120.425 99.801-120.425 181.203v84.578c-.046 3.181-2.522 129.251-67.561 158.622a17.257 17.257 0 0 0 7.103 32.986h164.88c3.38 18.594 12.172 35.892 25.619 49.903 17.86 18.608 41.479 28.856 66.502 28.856 25.025 0 48.644-10.248 66.502-28.856 13.449-14.012 22.241-31.311 25.619-49.903h164.88a17.26 17.26 0 0 0 16.872-13.626 17.25 17.25 0 0 0-9.764-19.358zm-85.673-60.395c6.837 20.728 16.518 41.544 30.246 58.866H97.32c13.726-17.32 23.407-38.135 30.244-58.866h356.87zM306.001 34.515c18.945 0 34.963 12.73 39.975 30.082-12.912-2.678-26.282-4.09-39.975-4.09s-27.063 1.411-39.975 4.09c5.013-17.351 21.031-30.082 39.975-30.082zM143.97 341.736v-84.685c0-89.343 72.686-162.029 162.031-162.029s162.031 72.686 162.031 162.029v84.826c.023 2.596.427 29.879 7.303 63.465H136.663c6.88-33.618 7.286-60.949 7.307-63.606zm162.031 235.749c-26.341 0-49.33-18.992-56.709-44.246h113.416c-7.379 25.254-30.364 44.246-56.707 44.246z\" />\n      <path d=\"M306.001 119.235c-74.25 0-134.657 60.405-134.657 134.654 0 9.531 7.727 17.258 17.258 17.258 9.531 0 17.258-7.727 17.258-17.258 0-55.217 44.923-100.139 100.142-100.139 9.531 0 17.258-7.727 17.258-17.258-.001-9.532-7.728-17.257-17.259-17.257z\" />\n    </svg>\n  );\n};\n","import React from 'react';\nimport theme from 'theme';\n\n/**\n * Menu icon\n *\n * @param {string} width\n * @param {string} color\n */\nexport const MenuIcon = ({ width, color }) => {\n  const DEFAULT_WIDTH = '18';\n  const DEFAULT_COLOR = theme.colors.text.secondary;\n\n  return (\n    <svg\n      width={width || DEFAULT_WIDTH}\n      fill={theme.colors[color] || DEFAULT_COLOR}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 512 512\"\n    >\n      <path d=\"M491.318 235.318H20.682C9.26 235.318 0 244.577 0 256s9.26 20.682 20.682 20.682h470.636c11.423 0 20.682-9.259 20.682-20.682 0-11.422-9.259-20.682-20.682-20.682zM491.318 78.439H20.682C9.26 78.439 0 87.699 0 99.121c0 11.422 9.26 20.682 20.682 20.682h470.636c11.423 0 20.682-9.26 20.682-20.682 0-11.422-9.259-20.682-20.682-20.682zM491.318 392.197H20.682C9.26 392.197 0 401.456 0 412.879s9.26 20.682 20.682 20.682h470.636c11.423 0 20.682-9.259 20.682-20.682s-9.259-20.682-20.682-20.682z\" />\n    </svg>\n  );\n};\n","import React from 'react';\nimport theme from 'theme';\n\n/**\n * Home icon\n *\n * @param {string} width\n * @param {string} color\n */\nexport const HomeIcon = ({ width, color }) => {\n  const DEFAULT_WIDTH = '18';\n  const DEFAULT_COLOR = theme.colors.text.secondary;\n\n  return (\n    <svg\n      width={width || DEFAULT_WIDTH}\n      fill={theme.colors[color] || DEFAULT_COLOR}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 512 512\"\n    >\n      <path d=\"M506.555 208.064L263.859 30.367a13.3 13.3 0 0 0-15.716 0L5.445 208.064c-5.928 4.341-7.216 12.665-2.875 18.593s12.666 7.214 18.593 2.875L256 57.588l234.837 171.943a13.236 13.236 0 0 0 7.848 2.57c4.096 0 8.138-1.885 10.744-5.445 4.342-5.927 3.054-14.251-2.874-18.592z\" />\n      <path d=\"M442.246 232.543c-7.346 0-13.303 5.956-13.303 13.303v211.749H322.521V342.009c0-36.68-29.842-66.52-66.52-66.52s-66.52 29.842-66.52 66.52v115.587H83.058V245.847c0-7.347-5.957-13.303-13.303-13.303s-13.303 5.956-13.303 13.303V470.9c0 7.347 5.957 13.303 13.303 13.303h133.029c6.996 0 12.721-5.405 13.251-12.267.032-.311.052-.651.052-1.036V342.01c0-22.009 17.905-39.914 39.914-39.914s39.914 17.906 39.914 39.914V470.9c0 .383.02.717.052 1.024.524 6.867 6.251 12.279 13.251 12.279h133.029c7.347 0 13.303-5.956 13.303-13.303V245.847c-.001-7.348-5.957-13.304-13.304-13.304z\" />\n    </svg>\n  );\n};\n","import React from 'react';\nimport theme from 'theme';\n\n/**\n * People icon\n *\n * @param {string} width\n * @param {string} color\n */\nexport const PeopleIcon = ({ width, color }) => {\n  const DEFAULT_WIDTH = '20';\n  const DEFAULT_COLOR = theme.colors.text.secondary;\n\n  return (\n    <svg\n      width={width || DEFAULT_WIDTH}\n      fill={theme.colors[color] || DEFAULT_COLOR}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 505.4 505.4\"\n    >\n      <path d=\"M437.1 233.45c14.8-10.4 24.6-27.7 24.6-47.2 0-31.9-25.8-57.7-57.7-57.7-31.9 0-57.7 25.8-57.7 57.7 0 19.5 9.7 36.8 24.6 47.2-12.7 4.4-24.3 11.2-34.1 20-13.5-11.5-29.4-20.3-46.8-25.5 21.1-12.8 35.3-36.1 35.3-62.6 0-40.4-32.7-73.1-73.1-73.1-40.4 0-73.1 32.8-73.1 73.1 0 26.5 14.1 49.8 35.3 62.6-17.2 5.2-32.9 13.9-46.3 25.2-9.8-8.6-21.2-15.3-33.7-19.6 14.8-10.4 24.6-27.7 24.6-47.2 0-31.9-25.8-57.7-57.7-57.7s-57.7 25.8-57.7 57.7c0 19.5 9.7 36.8 24.6 47.2-39.7 13.7-68.2 51.4-68.2 95.7v6.6c0 .2.2.4.4.4h122.3c-.7 5.5-1.1 11.2-1.1 16.9v6.8c0 29.4 23.8 53.2 53.2 53.2h155c29.4 0 53.2-23.8 53.2-53.2v-6.8c0-5.7-.4-11.4-1.1-16.9H505c.2 0 .4-.2.4-.4v-6.6c-.2-44.4-28.6-82.1-68.3-95.8zm-74.8-47.3c0-23 18.7-41.7 41.7-41.7s41.7 18.7 41.7 41.7c0 22.7-18.3 41.2-40.9 41.7h-1.6c-22.7-.4-40.9-18.9-40.9-41.7zm-167.4-20.8c0-31.5 25.6-57.1 57.1-57.1s57.1 25.6 57.1 57.1c0 30.4-23.9 55.3-53.8 57h-6.6c-29.9-1.7-53.8-26.6-53.8-57zm-135.6 20.8c0-23 18.7-41.7 41.7-41.7s41.7 18.7 41.7 41.7c0 22.7-18.3 41.2-40.9 41.7h-1.6c-22.6-.4-40.9-18.9-40.9-41.7zm66.2 134H16.2c4.5-42.6 40.5-76 84.2-76.3h1.2c20.8.1 39.8 7.8 54.5 20.3-14.4 15.6-25.1 34.8-30.6 56zm241.3 39.8c0 20.5-16.7 37.2-37.2 37.2h-155c-20.5 0-37.2-16.7-37.2-37.2v-6.8c0-62.1 49.6-112.9 111.3-114.7 1.1.1 2.3.1 3.4.1s2.3 0 3.4-.1c61.7 1.8 111.3 52.6 111.3 114.7v6.8zm11.9-39.8c-5.5-21.1-16-40-30.3-55.6 14.8-12.8 34-20.5 55-20.7h1.2c43.7.3 79.7 33.7 84.2 76.3H378.7z\" />\n    </svg>\n  );\n};\n","import React from 'react';\nimport theme from 'theme';\n\n/**\n * Search icon\n *\n * @param {string} width\n * @param {string} color\n */\nexport const SearchIcon = ({ width, color }) => {\n  const DEFAULT_WIDTH = '16';\n  const DEFAULT_COLOR = theme.colors.text.secondary;\n\n  return (\n    <svg\n      width={width || DEFAULT_WIDTH}\n      fill={theme.colors[color] || DEFAULT_COLOR}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 56.966 56.966\"\n    >\n      <path d=\"M55.146 51.887L41.588 37.786A22.926 22.926 0 0 0 46.984 23c0-12.682-10.318-23-23-23s-23 10.318-23 23 10.318 23 23 23c4.761 0 9.298-1.436 13.177-4.162l13.661 14.208c.571.593 1.339.92 2.162.92.779 0 1.518-.297 2.079-.837a3.004 3.004 0 0 0 .083-4.242zM23.984 6c9.374 0 17 7.626 17 17s-7.626 17-17 17-17-7.626-17-17 7.626-17 17-17z\" />\n    </svg>\n  );\n};\n","import React from 'react';\nimport theme from 'theme';\n\n/**\n * Dots icon\n *\n * @param {string} width\n * @param {string} color\n */\nexport const DotsIcon = ({ width, color }) => {\n  const DEFAULT_WIDTH = '17';\n  const DEFAULT_COLOR = theme.colors.text.primary;\n\n  return (\n    <svg\n      width={width || DEFAULT_WIDTH}\n      fill={theme.colors[color] || DEFAULT_COLOR}\n      viewBox=\"0 0 612 612\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <circle cx=\"69.545\" cy=\"306\" r=\"69.545\" />\n      <circle cx=\"306\" cy=\"306\" r=\"69.545\" />\n      <circle cx=\"542.455\" cy=\"306\" r=\"69.545\" />\n    </svg>\n  );\n};\n","import React from 'react';\nimport theme from 'theme';\n\n/**\n * Post like icon\n *\n * @param {string} width\n * @param {string} color\n */\nexport const InfoIcon = ({ width, color }) => {\n  const DEFAULT_WIDTH = '22';\n  const DEFAULT_COLOR = theme.colors.white;\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width={width || DEFAULT_WIDTH}\n      fill={theme.colors[color] || DEFAULT_COLOR}\n      viewBox=\"0 0 330 330\"\n    >\n      <path d=\"M165 0C74.019 0 0 74.02 0 165.001 0 255.982 74.019 330 165 330s165-74.018 165-164.999S255.981 0 165 0zm0 300c-74.44 0-135-60.56-135-134.999S90.56 30 165 30s135 60.562 135 135.001C300 239.44 239.439 300 165 300z\" />\n      <path d=\"M164.998 70c-11.026 0-19.996 8.976-19.996 20.009 0 11.023 8.97 19.991 19.996 19.991 11.026 0 19.996-8.968 19.996-19.991 0-11.033-8.97-20.009-19.996-20.009zM165 140c-8.284 0-15 6.716-15 15v90c0 8.284 6.716 15 15 15 8.284 0 15-6.716 15-15v-90c0-8.284-6.716-15-15-15z\" />\n    </svg>\n  );\n};\n","import React from 'react';\nimport theme from 'theme';\n\n/**\n * Post like icon\n *\n * @param {string} width\n * @param {string} color\n */\nexport const WarningIcon = ({ width, color }) => {\n  const DEFAULT_WIDTH = '22';\n  const DEFAULT_COLOR = theme.colors.white;\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width={width || DEFAULT_WIDTH}\n      fill={theme.colors[color] || DEFAULT_COLOR}\n      viewBox=\"0 0 512 512\"\n    >\n      <path d=\"M256 0C114.497 0 0 114.507 0 256c0 141.503 114.507 256 256 256 141.503 0 256-114.507 256-256C512 114.497 397.493 0 256 0zm0 472c-119.393 0-216-96.615-216-216 0-119.393 96.615-216 216-216 119.393 0 216 96.615 216 216 0 119.393-96.615 216-216 216z\" />\n      <path d=\"M256 128.877c-11.046 0-20 8.954-20 20V277.67c0 11.046 8.954 20 20 20s20-8.954 20-20V148.877c0-11.046-8.954-20-20-20z\" />\n      <circle cx=\"256\" cy=\"349.16\" r=\"27\" />\n    </svg>\n  );\n};\n","import React from 'react';\nimport theme from 'theme';\n\n/**\n * Post like icon\n *\n * @param {string} width\n * @param {string} color\n */\nexport const ErrorIcon = ({ width, color }) => {\n  const DEFAULT_WIDTH = '22';\n  const DEFAULT_COLOR = theme.colors.white;\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 486.463 486.463\"\n      width={width || DEFAULT_WIDTH}\n      fill={theme.colors[color] || DEFAULT_COLOR}\n    >\n      <path d=\"M243.225 333.382c-13.6 0-25 11.4-25 25s11.4 25 25 25c13.1 0 25-11.4 24.4-24.4.6-14.3-10.7-25.6-24.4-25.6z\" />\n      <path d=\"M474.625 421.982c15.7-27.1 15.8-59.4.2-86.4l-156.6-271.2c-15.5-27.3-43.5-43.5-74.9-43.5s-59.4 16.3-74.9 43.4l-156.8 271.5c-15.6 27.3-15.5 59.8.3 86.9 15.6 26.8 43.5 42.9 74.7 42.9h312.8c31.3 0 59.4-16.3 75.2-43.6zm-34-19.6c-8.7 15-24.1 23.9-41.3 23.9h-312.8c-17 0-32.3-8.7-40.8-23.4-8.6-14.9-8.7-32.7-.1-47.7l156.8-271.4c8.5-14.9 23.7-23.7 40.9-23.7 17.1 0 32.4 8.9 40.9 23.8l156.7 271.4c8.4 14.6 8.3 32.2-.3 47.1z\" />\n      <path d=\"M237.025 157.882c-11.9 3.4-19.3 14.2-19.3 27.3.6 7.9 1.1 15.9 1.7 23.8 1.7 30.1 3.4 59.6 5.1 89.7.6 10.2 8.5 17.6 18.7 17.6s18.2-7.9 18.7-18.2c0-6.2 0-11.9.6-18.2 1.1-19.3 2.3-38.6 3.4-57.9.6-12.5 1.7-25 2.3-37.5 0-4.5-.6-8.5-2.3-12.5-5.1-11.2-17-16.9-28.9-14.1z\" />\n    </svg>\n  );\n};\n","import React from 'react';\nimport theme from 'theme';\n\n/**\n * Post like icon\n *\n * @param {string} width\n * @param {string} color\n */\nexport const SuccessIcon = ({ width, color }) => {\n  const DEFAULT_WIDTH = '22';\n  const DEFAULT_COLOR = theme.colors.white;\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width={width || DEFAULT_WIDTH}\n      fill={theme.colors[color] || DEFAULT_COLOR}\n      viewBox=\"0 0 512 512\"\n    >\n      <path d=\"M468.907 214.604c-11.423 0-20.682 9.26-20.682 20.682v20.831c-.031 54.338-21.221 105.412-59.666 143.812-38.417 38.372-89.467 59.5-143.761 59.5h-.12C132.506 459.365 41.3 368.056 41.364 255.883c.031-54.337 21.221-105.411 59.667-143.813 38.417-38.372 89.468-59.5 143.761-59.5h.12c28.672.016 56.49 5.942 82.68 17.611 10.436 4.65 22.659-.041 27.309-10.474 4.648-10.433-.04-22.659-10.474-27.309-31.516-14.043-64.989-21.173-99.492-21.192h-.144c-65.329 0-126.767 25.428-172.993 71.6C25.536 129.014.038 190.473 0 255.861c-.037 65.386 25.389 126.874 71.599 173.136 46.21 46.262 107.668 71.76 173.055 71.798h.144c65.329 0 126.767-25.427 172.993-71.6 46.262-46.209 71.76-107.668 71.798-173.066v-20.842c0-11.423-9.259-20.683-20.682-20.683z\" />\n      <path d=\"M505.942 39.803c-8.077-8.076-21.172-8.076-29.249 0L244.794 271.701l-52.609-52.609c-8.076-8.077-21.172-8.077-29.248 0-8.077 8.077-8.077 21.172 0 29.249l67.234 67.234a20.616 20.616 0 0 0 14.625 6.058 20.618 20.618 0 0 0 14.625-6.058L505.942 69.052c8.077-8.077 8.077-21.172 0-29.249z\" />\n    </svg>\n  );\n};\n","import React from 'react';\n\n/**\n * Delete (trash) icon\n *\n * @param {string} width\n * @param {string} color\n */\nexport const EmptyIcon = () => {\n  return (\n    <svg width=\"100\" height=\"100\" viewBox=\"0 0 184 152\" xmlns=\"http://www.w3.org/2000/svg\">\n      <g fill=\"none\" fillRule=\"evenodd\">\n        <g transform=\"translate(24 31.67)\">\n          <ellipse fillOpacity=\".8\" fill=\"#f5f5f7\" cx=\"67.797\" cy=\"106.89\" rx=\"67.797\" ry=\"12.668\" />\n          <path\n            d=\"M122.034 69.674L98.109 40.229c-1.148-1.386-2.826-2.225-4.593-2.225h-51.44c-1.766 0-3.444.839-4.592 2.225L13.56 69.674v15.383h108.475V69.674z\"\n            fill=\"#aeb8c2\"\n          />\n          <path\n            d=\"M101.537 86.214L80.63 61.102c-1.001-1.207-2.507-1.867-4.048-1.867H31.724c-1.54 0-3.047.66-4.048 1.867L6.769 86.214v13.792h94.768V86.214z\"\n            fill='url(\"#linearGradient-1\")'\n            transform=\"translate(13.56)\"\n          />\n          <path\n            d=\"M33.83 0h67.933a4 4 0 0 1 4 4v93.344a4 4 0 0 1-4 4H33.83a4 4 0 0 1-4-4V4a4 4 0 0 1 4-4z\"\n            fill=\"#f5f5f7\"\n          />\n          <path\n            d=\"M42.678 9.953h50.237a2 2 0 0 1 2 2V36.91a2 2 0 0 1-2 2H42.678a2 2 0 0 1-2-2V11.953a2 2 0 0 1 2-2zm.262 39.814h49.713a2.262 2.262 0 1 1 0 4.524H42.94a2.262 2.262 0 0 1 0-4.524zm0 11.763h49.713a2.262 2.262 0 1 1 0 4.525H42.94a2.262 2.262 0 0 1 0-4.525zm78.873 43.502c-.775 3.071-3.497 5.36-6.735 5.36H20.515c-3.238 0-5.96-2.29-6.734-5.36a7.309 7.309 0 0 1-.222-1.79V69.675h26.318c2.907 0 5.25 2.448 5.25 5.42v.04c0 2.971 2.37 5.37 5.277 5.37h34.785c2.907 0 5.277-2.421 5.277-5.393V75.1c0-2.972 2.343-5.426 5.25-5.426h26.318v33.569a7.33 7.33 0 0 1-.221 1.789z\"\n            fill=\"#dce0e6\"\n          />\n        </g>\n        <path\n          d=\"M149.121 33.292l-6.83 2.65a1 1 0 0 1-1.317-1.23l1.937-6.207c-2.589-2.944-4.109-6.534-4.109-10.408C138.802 8.102 148.92 0 161.402 0 173.881 0 184 8.102 184 18.097c0 9.995-10.118 18.097-22.599 18.097-4.528 0-8.744-1.066-12.28-2.902z\"\n          fill=\"#dce0e6\"\n        />\n        <g transform=\"translate(149.65 15.383)\" fill=\"#fff\">\n          <ellipse cx=\"20.654\" cy=\"3.167\" rx=\"2.849\" ry=\"2.815\" />\n          <path d=\"M5.698 5.63H0L2.898.704zM9.259.704h4.985V5.63H9.259z\" />\n        </g>\n      </g>\n    </svg>\n  );\n};\n","import React from 'react';\n\nexport const NotFoundIcon = () => {\n  return (\n    <svg width=\"100\" height=\"130\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\">\n      <path\n        d=\"M86.071 441.452a18.896 18.896 0 0 1 4.213 15.326l-6.891 41.43a8.091 8.091 0 0 1-9.304 6.659c-4.404-.736-7.379-4.91-6.645-9.323l6.891-41.431a2.673 2.673 0 0 0-.601-2.189 2.66 2.66 0 0 0-2.057-.955H32.452a2.66 2.66 0 0 0-2.057.955 2.675 2.675 0 0 0-.603 2.189l6.891 41.431c.734 4.414-2.241 8.587-6.645 9.323-4.401.734-8.569-2.246-9.303-6.659l-6.891-41.431a18.9 18.9 0 0 1 4.215-15.327 18.814 18.814 0 0 1 14.393-6.684H45.81v-83.172c0-4.474 3.62-8.101 8.084-8.101h118.568c4.465 0 8.084 3.627 8.084 8.101s-3.62 8.101-8.084 8.101H61.979v75.071h9.699a18.811 18.811 0 0 1 14.393 6.686zm245.382 39.221H180.547c-4.465 0-8.084 3.627-8.084 8.101 0 4.474 3.62 8.101 8.084 8.101h150.905c4.465 0 8.084-3.627 8.084-8.101.001-4.474-3.619-8.101-8.083-8.101z\"\n        fill=\"#84a7b7\"\n      />\n      <path\n        d=\"M378.65 300.935l-28.255 113.257c-4.799 19.234-22.044 32.727-41.829 32.727H203.431c-19.785 0-37.03-13.493-41.829-32.727l-28.255-113.257c-3.402-13.635 6.889-26.843 20.914-26.843h203.473c14.028 0 24.318 13.209 20.916 26.843z\"\n        fill=\"#547d87\"\n      />\n      <path\n        d=\"M481.302 356.408a8.081 8.081 0 0 1-7.028 4.097H319.97c-10.419 25.812-35.553 43.206-63.97 43.206-31.674 0-59.284-21.602-66.966-52.395l-5.872-23.538c-6.804-27.27 13.779-53.686 41.829-53.686h117.242l-17.516 70.211h135.338L385.263 218.39a42.827 42.827 0 0 1-21.473 5.746H148.212c-23.812 0-43.116-19.344-43.116-43.206v-21.603c0-83.519 67.562-151.223 150.905-151.223s150.905 67.705 150.905 151.223v21.603a43.069 43.069 0 0 1-9.224 26.691l83.539 140.642a8.116 8.116 0 0 1 .081 8.145z\"\n        fill=\"#6b95a0\"\n      />\n      <path\n        d=\"M503.916 328.1c0 17.896-14.477 32.405-32.337 32.405-17.86 0-32.337-14.508-32.337-32.405 0-17.896 14.477-32.405 32.337-32.405 17.86 0 32.337 14.509 32.337 32.405zM40.421 295.695c-17.86 0-32.337 14.508-32.337 32.405s14.477 32.405 32.337 32.405 32.337-14.508 32.337-32.405c0-17.896-14.477-32.405-32.337-32.405z\"\n        fill=\"#547d87\"\n      />\n      <path\n        d=\"M51.2 328.1c0 5.966-4.826 10.802-10.779 10.802s-10.779-4.835-10.779-10.802 4.826-10.802 10.779-10.802S51.2 322.135 51.2 328.1zm420.379-10.801c-5.953 0-10.779 4.835-10.779 10.802s4.826 10.802 10.779 10.802 10.779-4.835 10.779-10.802c0-5.966-4.826-10.802-10.779-10.802z\"\n        fill=\"#6b95a0\"\n      />\n      <path\n        d=\"M199.411 381.029v1.08c0 4.474-3.62 8.101-8.084 8.101-4.465 0-8.084-3.627-8.084-8.101v-1.08c0-4.474 3.62-8.101 8.084-8.101 4.464 0 8.084 3.627 8.084 8.101z\"\n        fill=\"#fc8059\"\n      />\n      <path\n        d=\"M231.747 381.029v1.08c0 4.474-3.62 8.101-8.084 8.101-4.465 0-8.084-3.627-8.084-8.101v-1.08c0-4.474 3.62-8.101 8.084-8.101 4.465 0 8.084 3.627 8.084 8.101z\"\n        fill=\"#ffd880\"\n      />\n      <path\n        d=\"M317.979 381.029v1.08c0 4.474-3.62 8.101-8.084 8.101-4.465 0-8.084-3.627-8.084-8.101v-1.08c0-4.474 3.62-8.101 8.084-8.101 4.464 0 8.084 3.627 8.084 8.101z\"\n        fill=\"#b5e5bc\"\n      />\n      <path\n        d=\"M212.884 349.703h-21.558c-5.953 0-10.779-4.826-10.779-10.779v-21.648c0-5.953 4.826-10.779 10.779-10.779h21.558c5.953 0 10.779 4.826 10.779 10.779v21.648c0 5.954-4.826 10.779-10.779 10.779z\"\n        fill=\"#cfdfe2\"\n      />\n      <path\n        d=\"M158.989 121.519c0-29.827 24.13-54.008 53.895-54.008s53.895 24.18 53.895 54.008-24.13 54.008-53.895 54.008-53.895-24.18-53.895-54.008z\"\n        fill=\"#547d87\"\n      />\n      <path\n        d=\"M180.547 121.519c0-17.896 14.477-32.405 32.337-32.405s32.337 14.508 32.337 32.405-14.477 32.405-32.337 32.405-32.337-14.508-32.337-32.405z\"\n        fill=\"#cfdfe2\"\n      />\n      <path\n        d=\"M212.884 121.519c0-8.949 7.239-16.203 16.168-16.203s16.168 7.254 16.168 16.203-7.239 16.203-16.168 16.203-16.168-7.254-16.168-16.203z\"\n        fill=\"#fff\"\n      />\n      <path\n        d=\"M427.65 41.321c44.199 44.292 44.199 116.104 0 160.396s-115.86 44.292-160.059 0-44.199-116.104 0-160.396 115.86-44.292 160.059 0z\"\n        fill=\"#84a7b7\"\n      />\n      <path\n        d=\"M423.074 121.519c0 41.759-33.781 75.611-75.453 75.611s-75.453-33.852-75.453-75.611 33.781-75.611 75.453-75.611 75.453 33.853 75.453 75.611z\"\n        fill=\"#c3e4ed\"\n      />\n      <path\n        d=\"M392.807 60.962a75.77 75.77 0 0 1 25.89 35.159l-96.422 96.625c-14.102-5.04-26.274-14.155-35.084-25.945L392.807 60.962zm-116.262 85.956a75.226 75.226 0 0 0 4.534 10.256L383.201 54.836a74.936 74.936 0 0 0-10.235-4.542l-96.421 96.624z\"\n        fill=\"#dcf3f9\"\n      />\n      <path\n        d=\"M347.957 64.98c11.906 0 21.558 9.672 21.558 21.603s-9.651 21.603-21.558 21.603c-11.906 0-21.558-9.672-21.558-21.603s9.653-21.603 21.558-21.603z\"\n        fill=\"#fff\"\n      />\n      <path\n        d=\"M339.537 500.928c0 4.474-3.618 8.101-8.084 8.101H180.547c-4.466 0-8.084-3.627-8.084-8.101 0-4.474 3.618-8.101 8.084-8.101h150.905c4.466-.001 8.085 3.626 8.085 8.101zM512 328.101c0 22.335-18.132 40.506-40.421 40.506-15.48 0-28.955-8.765-35.743-21.603H369.36a10.21 10.21 0 0 1-.35 0h-91.452c-4.466 0-8.084-3.626-8.084-8.101s3.618-8.101 8.084-8.101h85.31l7.94-31.831a13.442 13.442 0 0 0-2.45-11.583 13.38 13.38 0 0 0-10.62-5.193H154.263a13.38 13.38 0 0 0-10.62 5.193 13.436 13.436 0 0 0-2.45 11.583l28.255 113.255c3.905 15.658 17.881 26.592 33.985 26.592h105.135c16.104 0 30.08-10.934 33.985-26.592l13.394-53.686a8.09 8.09 0 0 1 9.805-5.895c4.332 1.085 6.965 5.484 5.882 9.825l-13.394 53.686c-5.709 22.882-26.134 38.863-49.672 38.863H203.432c-23.538 0-43.963-15.982-49.672-38.865l-16.51-66.182H76.164c-5.574 10.541-15.659 18.338-27.659 20.79v71.024h11.528a18.815 18.815 0 0 1 14.393 6.685 18.894 18.894 0 0 1 4.215 15.324l-6.892 41.432a8.09 8.09 0 0 1-7.965 6.77c-.441 0-.888-.036-1.339-.112-4.403-.735-7.379-4.909-6.645-9.323l6.891-41.431a2.673 2.673 0 0 0-.601-2.189 2.66 2.66 0 0 0-2.057-.955H20.809a2.66 2.66 0 0 0-2.057.955 2.673 2.673 0 0 0-.601 2.19l6.891 41.43c.734 4.414-2.242 8.588-6.645 9.323-4.42.739-8.569-2.245-9.303-6.658l-6.892-41.431a18.895 18.895 0 0 1 4.215-15.326 18.812 18.812 0 0 1 14.393-6.685h11.528v-71.023C13.909 366.999 0 350.632 0 331.072c0-22.335 18.132-40.506 40.421-40.506s40.421 18.17 40.421 40.506c0 .909-.029 1.807-.088 2.7h52.455l-7.703-30.871c-2.229-8.936-.264-18.225 5.393-25.485 5.657-7.26 14.172-11.424 23.364-11.424h203.474c9.191 0 17.708 4.165 23.364 11.424 5.657 7.261 7.622 16.55 5.393 25.485l-6.961 27.9h51.714a40.969 40.969 0 0 1-.088-2.7c0-13.215 6.348-24.973 16.148-32.37l-40.478-68.148c-33.636 18.839-74.394 20.393-109.202 4.653H148.211c-28.231 0-51.2-23.016-51.2-51.308v-21.603C97.011 71.473 168.333.001 256 .001c16.758 0 33.244 2.602 49.054 7.738 43.144-16.134 93.68-6.852 128.314 27.853 47.28 47.381 47.28 124.473 0 171.854a121.792 121.792 0 0 1-12.977 11.291l41.585 70.013a40.22 40.22 0 0 1 9.603-1.155c22.289 0 40.421 18.171 40.421 40.506zM271.391 216.034a122.731 122.731 0 0 1-9.517-8.588c-15.088-15.122-25.712-33.525-31.204-53.605a40.302 40.302 0 0 1-17.786 4.134c-22.289 0-40.421-18.171-40.421-40.506s18.132-40.506 40.421-40.506a40.408 40.408 0 0 1 19.918 5.276c5.901-17.371 15.745-33.29 29.073-46.647a121.31 121.31 0 0 1 21.024-16.852A143.114 143.114 0 0 0 256 16.203c-78.752 0-142.821 64.205-142.821 143.122v21.603c0 19.358 15.715 35.105 35.032 35.105h123.18v.001zm-45.033-94.515c0-7.695.709-15.282 2.097-22.684-4.351-3.676-9.779-5.67-15.57-5.67-13.372 0-24.253 10.903-24.253 24.303s10.88 24.303 24.253 24.303a24.175 24.175 0 0 0 14.441-4.784 123.37 123.37 0 0 1-.968-15.468zm195.575 74.47c19.851-19.891 30.783-46.339 30.783-74.47s-10.932-54.578-30.783-74.47c-19.849-19.893-46.241-30.847-74.312-30.847-13.492 0-26.594 2.531-38.769 7.367-.401.202-.818.37-1.247.504-12.676 5.227-24.313 12.97-34.296 22.975-19.85 19.891-30.783 46.339-30.783 74.47s10.932 54.578 30.783 74.47c40.974 41.063 107.65 41.063 148.624.001zM64.674 331.072c0-13.4-10.88-24.303-24.253-24.303s-24.253 10.902-24.253 24.303c0 13.4 10.88 24.303 24.253 24.303s24.253-10.903 24.253-24.303zm431.158-2.971c0-13.4-10.88-24.303-24.253-24.303a24.078 24.078 0 0 0-10.018 2.17c-8.388 3.828-14.235 12.308-14.235 22.132a24.293 24.293 0 0 0 1.434 8.24c3.376 9.357 12.33 16.064 22.818 16.064 13.373.001 24.254-10.902 24.254-24.303zm-64.674-206.582c0 22.361-8.69 43.383-24.467 59.194-15.778 15.812-36.756 24.519-59.07 24.519s-43.291-8.708-59.07-24.519c-15.777-15.811-24.467-36.833-24.467-59.194s8.69-43.383 24.467-59.194 36.756-24.519 59.07-24.519 43.291 8.708 59.07 24.519 24.467 36.834 24.467 59.194zm-16.169 0c0-18.032-7.007-34.986-19.733-47.736-12.722-12.753-29.641-19.775-47.635-19.775s-34.913 7.022-47.635 19.774c-12.726 12.75-19.733 29.704-19.733 47.737s7.007 34.986 19.733 47.736c12.723 12.753 29.641 19.774 47.635 19.774s34.913-7.022 47.635-19.774c12.726-12.749 19.733-29.703 19.733-47.736zM212.884 298.397c10.401 0 18.863 8.48 18.863 18.903v21.603c0 10.423-8.463 18.903-18.863 18.903h-21.558c-10.401 0-18.863-8.48-18.863-18.903V317.3c0-10.423 8.463-18.903 18.863-18.903h21.558zm0 16.201h-21.558a2.7 2.7 0 0 0-2.695 2.7v21.603a2.7 2.7 0 0 0 2.695 2.7h21.558a2.7 2.7 0 0 0 2.695-2.7v-21.603a2.7 2.7 0 0 0-2.695-2.7z\"\n        fill=\"#4c4c4c\"\n      />\n    </svg>\n  );\n};\n","import React from 'react';\nimport theme from 'theme';\n\n/**\n * Envelope (message) icon\n *\n * @param {string} width\n * @param {string} color\n */\nexport const EnvelopeIcon = ({ width, color }) => {\n  const DEFAULT_WIDTH = '18';\n  const DEFAULT_COLOR = theme.colors.text.secondary;\n\n  return (\n    <svg\n      width={width || DEFAULT_WIDTH}\n      fill={theme.colors[color] || DEFAULT_COLOR}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 512.001 512.001\"\n    >\n      <path d=\"M511.646 126.634c-.021-14.449-11.782-26.189-26.227-26.189h-.034l-459.195.631c-7.005.009-13.588 2.746-18.535 7.706C2.709 113.743-.009 120.334 0 127.337l.355 258.029c.009 7.005 2.746 13.588 7.706 18.535 4.951 4.938 11.526 7.655 18.519 7.655h.035l459.194-.631c14.458-.02 26.207-11.799 26.19-26.261l-.353-258.03zm-55.035.076L256.02 266.154 55.04 127.262l401.571-.552zM340.846 292.471l118.971 92.265-407.972.56 119.696-92.825c5.722-4.439 6.764-12.675 2.326-18.399-4.439-5.722-12.675-6.764-18.399-2.326L26.561 371.715l-.32-232.475 222.344 153.657a13.093 13.093 0 0 0 7.455 2.325c2.617 0 5.236-.783 7.485-2.346l221.912-154.264.336 233.066-128.856-99.931c-5.719-4.437-13.959-3.396-18.397 2.326-4.439 5.722-3.398 13.96 2.326 18.398z\" />\n    </svg>\n  );\n};\n","import React from 'react';\nimport theme from 'theme';\n\n/**\n * Envelope open (message) icon\n *\n * @param {string} width\n * @param {string} color\n */\nexport const EnvelopeOpenIcon = ({ width, color }) => {\n  const DEFAULT_WIDTH = '23';\n  const DEFAULT_COLOR = theme.colors.text.secondary;\n\n  return (\n    <svg\n      width={width || DEFAULT_WIDTH}\n      fill={theme.colors[color] || DEFAULT_COLOR}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 512 512\"\n    >\n      <path d=\"M494.2 488V187c0-3.1-3.9-7-7.7-9.9L407.8 120V56.9c0-6.2-5.2-10.4-10.4-10.4h-89.7L262 13.2c-3.1-2.1-8.3-2.1-11.5 0l-45.7 33.3h-89.7c-6.2 0-10.4 5.2-10.4 10.4v62.4L25 177.2c-4.7 2.9-7.7 6.7-7.7 9.9v303c0 5.9 4.7 10 9.6 10.4h456.8c6.7-.1 10.5-5.3 10.5-12.5zm-19.8-282.3v263.6L302.3 331.5l172.1-125.8zm-7.7-18.3l-58.9 42.9v-86.2l58.9 43.3zM255.8 32.9l18.3 13.5h-36.7l18.4-13.5zM387 67.3v178.2l-131.2 95.6-131.2-95.6V67.3H387zM37.2 205.7l172.1 125.8L37.2 470.1V205.7zm67.6 25.4l-60.4-44 60.4-43.9v87.9zM55.9 480.6L226 343.7l23.5 17.2c4.5 3.4 7.9 3.4 12.5 0l23.5-17.2 171.1 136.9H55.9z\" />\n      <path d=\"M186.1 118.3h140.5v19.8H186.1zM186.1 181.8h140.5v19.8H186.1zM186.1 245.3h140.5v19.8H186.1z\" />\n    </svg>\n  );\n};\n","import React from 'react';\nimport theme from 'theme';\n\n/**\n * Close (X) icon\n *\n * @param {string} width\n * @param {string} color\n */\nexport const SendIcon = ({ width, color }) => {\n  const DEFAULT_WIDTH = '12';\n  const DEFAULT_COLOR = theme.colors.primary.main;\n\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width={width || DEFAULT_WIDTH}\n      fill={theme.colors[color] || DEFAULT_COLOR}\n      viewBox=\"0 0 448.011 448.011\"\n    >\n      <path d=\"M438.731 209.463l-416-192c-6.624-3.008-14.528-1.216-19.136 4.48a15.911 15.911 0 00-.384 19.648l136.8 182.4-136.8 182.4c-4.416 5.856-4.256 13.984.352 19.648 3.104 3.872 7.744 5.952 12.448 5.952 2.272 0 4.544-.48 6.688-1.472l416-192c5.696-2.624 9.312-8.288 9.312-14.528s-3.616-11.904-9.28-14.528z\" />\n    </svg>\n  );\n};\n","import React from 'react';\nimport theme from 'theme';\n\n/**\n * Pencil icon\n *\n * @param {string} width\n * @param {string} color\n */\nexport const PencilIcon = ({ width, color }) => {\n  const DEFAULT_WIDTH = '20';\n  const DEFAULT_COLOR = theme.colors.text.primary;\n\n  return (\n    <svg\n      width={width || DEFAULT_WIDTH}\n      fill={theme.colors[color] || DEFAULT_COLOR}\n      viewBox=\"0 -1 401.523 401\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path d=\"M370.59 250.973c-5.524 0-10 4.476-10 10v88.789c-.02 16.562-13.438 29.984-30 30H50c-16.563-.016-29.98-13.438-30-30V89.172c.02-16.559 13.438-29.98 30-30h88.79c5.523 0 10-4.477 10-10 0-5.52-4.477-10-10-10H50c-27.602.031-49.969 22.398-50 50v260.594c.031 27.601 22.398 49.968 50 50h280.59c27.601-.032 49.969-22.399 50-50v-88.793c0-5.524-4.477-10-10-10zm0 0\" />\n      <path d=\"M376.629 13.441c-17.574-17.574-46.067-17.574-63.64 0L134.581 191.848a9.997 9.997 0 00-2.566 4.402l-23.461 84.7a9.997 9.997 0 0012.304 12.308l84.7-23.465a9.997 9.997 0 004.402-2.566l178.402-178.41c17.547-17.587 17.547-46.055 0-63.641zM156.37 198.348L302.383 52.332l47.09 47.09-146.016 146.016zm-9.406 18.875l37.62 37.625-52.038 14.418zM374.223 74.676L363.617 85.28l-47.094-47.094 10.61-10.605c9.762-9.762 25.59-9.762 35.351 0l11.739 11.734c9.746 9.774 9.746 25.59 0 35.36zm0 0\" />\n    </svg>\n  );\n};\n","import styled from 'styled-components';\n\n// prettier-ignore\n\n/**\n * Container div for holding UI, using theme screen options\n *\n * @param {string} maxWidth\n * @param {string} padding\n * @param {boolean} bordered\n * @param {boolean} color\n */\nexport const Container = styled.div`\n  position: relative;\n  margin: 0 auto;\n  margin-top: ${p => p.marginTop ? p.theme.spacing[p.marginTop] : 0};\n  width: 100%;\n  max-width: ${p => (p.maxWidth && p.theme.screen[p.maxWidth])};\n  padding: ${p => p.padding ? `0 ${p.theme.spacing[p.padding]}` : `0 ${p.theme.spacing.sm}`};\n  z-index: ${p => p.zIndex && p.theme.zIndex[p.zIndex]};\n  background-color: ${p => p.color && p.theme.colors[p.color]};\n  border-radius: ${p => p.radius && p.theme.radius[p.radius]};\n`;\n\nexport const Content = styled.div`\n  position: relative;\n  margin: 0 auto;\n  width: 100%;\n  z-index: ${(p) => p.zIndex && p.theme.zIndex[p.zIndex]};\n  min-height: 500px;\n\n  @media (min-width: ${(p) => p.theme.screen.md}) {\n    width: ${(p) => p.theme.screen.xs};\n  }\n\n  @media (min-width: ${(p) => p.theme.screen.lg}) {\n    width: ${(p) => p.theme.screen.sm};\n  }\n`;\n\n/**\n * Adds margins to UI, using theme spacing options\n *\n * @param {string} top\n * @param {string} right\n * @param {string} bottom\n * @param {string} left\n * @param {boolean} inline, converts block element to inline block\n */\nexport const Spacing = styled.div`\n  ${(p) => p.top && `margin-top: ${p.theme.spacing[p.top]}`};\n  ${(p) => p.right && `margin-right: ${p.theme.spacing[p.right]}`};\n  ${(p) => p.bottom && `margin-bottom: ${p.theme.spacing[p.bottom]}`};\n  ${(p) => p.left && `margin-left: ${p.theme.spacing[p.left]}`};\n  ${(p) => p.inline && `display: inline-block;`}\n\n  @media (max-width: ${(p) => p.theme.screen.sm}) {\n    ${(p) =>\n      p.hideOnSm &&\n      `\n      display: none;\n    `}\n  }\n`;\n\n/**\n * Overlay, on top of the whole UI\n */\nexport const Overlay = styled.div`\n  position: fixed;\n  width: 100%;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  z-index: ${(p) => p.theme.zIndex.md};\n  background-color: rgba(0, 0, 0, ${(p) => (p.transparency ? p.transparency : '0.8')});\n`;\n","import styled from 'styled-components';\nimport { get } from 'lodash';\n\n// prettier-ignore\n\n/**\n * Button\n *\n * @param {string} size\n * @param {string} color\n * @param {boolean} disabled\n * @param {boolean} text, style button as a text\n */\nexport const Button = styled.button`\n  letter-spacing: 0.5px;\n  outline: 0;\n  transition: opacity 0.1s;\n  border: 0;\n  color: ${p => p.theme.colors.white};\n  font-size: ${p => p.size ? p.theme.font.size[p.size] : p.theme.font.size.xs};\n  border-radius: ${p => p.theme.radius.sm};\n  padding: ${p => p.theme.spacing.xs} ${p => p.theme.spacing.sm};\n  background-color: ${p => p.color ? p.theme.colors[p.color] : p.theme.colors.button};\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  font-weight: ${p => (p.weight ? p.theme.font.weight[p.weight] : p.theme.font.weight.normal)};\n  white-space: nowrap;\n  align-self: flex-start;\n\n  ${p => p.disabled && `\n    background-color: ${p.theme.colors.grey[500]};\n    cursor: not-allowed;\n  `};\n\n  ${p => !p.disabled && `\n    &:hover {\n      opacity .9;\n      cursor: pointer;\n    }\n  `};\n\n  ${p => p.text && `\n    color: ${p.color ? get(p.theme.colors, p.color) : p.theme.colors.text.secondary};\n    border-radius: 0;\n    background-color: transparent;\n  `};\n\n${p => p.ghost && `\n    color: ${p.color ? get(p.theme.colors[p.color]) : p.theme.colors.text.secondary};\n    border-radius: 0;\n    background-color: transparent;\n    padding: 0;\n    text-align: left;\n  `};\n\n  ${p => p.fullWidth && `\n    width: 100%;\n  `}\n`;\n\n/**\n * Input type text\n */\nexport const InputText = styled.input`\n  outline: 0;\n  height: 36px;\n  width: 100%;\n  transition: border 0.1s;\n  border-radius: ${(p) => p.theme.radius.sm};\n  padding-left: ${(p) => p.theme.spacing.xs};\n  border: 1px solid ${(p) => (p.borderColor ? p.theme.colors[p.borderColor] : p.theme.colors.border.main)};\n  color: ${(p) => p.theme.colors.text.secondary};\n\n  &:focus {\n    border-color: ${(p) => p.theme.colors.border.main};\n  }\n`;\n\n/**\n * Textarea\n */\nexport const Textarea = styled.textarea`\n  outline: 0;\n  height: 50px;\n  width: 100%;\n  resize: none;\n  border: 0;\n  padding-left: ${(p) => p.theme.spacing.sm};\n  padding-top: ${(p) => p.theme.spacing.xs};\n  color: ${(p) => p.theme.colors.text.main};\n  font-size: ${(p) => p.theme.font.size.xs};\n\n  &::placeholder {\n    color: ${(p) => p.theme.colors.text.secondary};\n  }\n`;\n\n/**\n * Form component\n */\nexport const Form = styled.form`\n  display: block;\n  border-radius: ${(p) => p.theme.radius.sm};\n  padding: ${(p) => p.theme.spacing.lg} ${(p) => p.theme.spacing.sm};\n  background-color: ${(p) => p.theme.colors.white};\n  border: 1px solid ${(p) => p.theme.colors.border.main};\n`;\n","/**\n * Available Message types\n */\n\nexport const MessageType = {\n  SUCCESS: 'SUCCESS',\n  INFO: 'INFO',\n  WARNING: 'WARNING',\n  ERROR: 'ERROR',\n};\n\nexport const allMessageTypes = Object.keys(MessageType);\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport styled, { keyframes } from 'styled-components';\n\nimport { SuccessIcon, InfoIcon, WarningIcon, ErrorIcon, CloseIcon } from 'components/icons';\nimport { Spacing } from './Layout';\nimport { Button } from 'components/Form';\n\nimport theme from 'theme';\n\nimport { allMessageTypes } from 'constants/MessageType';\n\nimport { useStore } from 'store';\nimport { CLEAR_MESSAGE } from 'store/message';\n\nconst fade = keyframes`\n  from {\n    bottom: -60px;\n    opacity: 0;\n  }\n  to {\n    bottom: 0;\n    opacity: 1;\n  }\n`;\n\n/**\n * Default styles for message\n */\nconst Root = styled.div`\n  position: fixed;\n  width: 100%;\n  box-shadow: ${(p) => p.theme.shadows.md};\n  padding: ${(p) => p.theme.spacing.sm};\n  z-index: ${(p) => p.theme.zIndex.xl};\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  background-color: ${(p) => p.color && p.color};\n  animation: ${fade} 0.3s ease-out forwards;\n  color: ${(p) => p.theme.colors.white};\n`;\n\nconst Close = styled(Button)`\n  position: absolute;\n  right: 20px;\n  top: 24px;\n`;\n\n/**\n * Displays global message as feedback in response to user operations\n */\nconst Message = ({ children, type, autoClose }) => {\n  const [, dispatch] = useStore();\n\n  useEffect(() => {\n    if (autoClose) {\n      const timer = setTimeout(() => {\n        dispatch({ type: CLEAR_MESSAGE });\n      }, 5000);\n\n      return () => {\n        clearTimeout(timer);\n      };\n    }\n  }, [dispatch, autoClose]);\n\n  const { success, info, warning, error } = theme.colors;\n\n  const Colors = {\n    SUCCESS: success,\n    INFO: info,\n    WARNING: warning,\n    ERROR: error.main,\n  };\n\n  const MessageType = (type) => {\n    const icons = {\n      SUCCESS: <SuccessIcon />,\n      INFO: <InfoIcon />,\n      WARNING: <WarningIcon />,\n      ERROR: <ErrorIcon />,\n    };\n\n    return icons[type];\n  };\n\n  return (\n    <Root color={Colors[type]}>\n      {MessageType(type)}\n      <Spacing left={type && 'xs'}>{children}</Spacing>\n      <Close ghost onClick={() => dispatch({ type: CLEAR_MESSAGE })}>\n        <CloseIcon color=\"white\" />\n      </Close>\n    </Root>\n  );\n};\n\nMessage.defaultProps = {\n  autoClose: true,\n};\n\nMessage.propTypes = {\n  children: PropTypes.any.isRequired,\n  type: PropTypes.oneOf(allMessageTypes),\n  autoClose: PropTypes.bool,\n};\n\nexport default Message;\n","import styled, { keyframes } from 'styled-components';\n\n// prettier-ignore\n\nconst Load = keyframes`\n  0% {\n    box-shadow: 0 -0.83em 0 -0.4em, 0 -0.83em 0 -0.42em, 0 -0.83em 0 -0.44em, 0 -0.83em 0 -0.46em, 0 -0.83em 0 -0.477em;\n  }\n  5%,\n  95% {\n    box-shadow: 0 -0.83em 0 -0.4em, 0 -0.83em 0 -0.42em, 0 -0.83em 0 -0.44em, 0 -0.83em 0 -0.46em, 0 -0.83em 0 -0.477em;\n  }\n  10%,\n  59% {\n    box-shadow: 0 -0.83em 0 -0.4em, -0.087em -0.825em 0 -0.42em, -0.173em -0.812em 0 -0.44em, -0.256em -0.789em 0 -0.46em, -0.297em -0.775em 0 -0.477em;\n  }\n  20% {\n    box-shadow: 0 -0.83em 0 -0.4em, -0.338em -0.758em 0 -0.42em, -0.555em -0.617em 0 -0.44em, -0.671em -0.488em 0 -0.46em, -0.749em -0.34em 0 -0.477em;\n  }\n  38% {\n    box-shadow: 0 -0.83em 0 -0.4em, -0.377em -0.74em 0 -0.42em, -0.645em -0.522em 0 -0.44em, -0.775em -0.297em 0 -0.46em, -0.82em -0.09em 0 -0.477em;\n  }\n  100% {\n    box-shadow: 0 -0.83em 0 -0.4em, 0 -0.83em 0 -0.42em, 0 -0.83em 0 -0.44em, 0 -0.83em 0 -0.46em, 0 -0.83em 0 -0.477em;\n  }\n`;\n\nconst Round = keyframes`\n  0% {\n    transform: rotate(0deg);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n`;\n\n/**\n * Displays loading spinner\n */\nexport const Loading = styled.div`\n  text-indent: -9999em;\n  overflow: hidden;\n  width: 1em;\n  height: 1em;\n  border-radius: 50%;\n  position: relative;\n  transform: translateZ(0);\n  animation: ${Load} 1.7s infinite ease, ${Round} 1.7s infinite ease;\n  margin: 0 auto;\n  margin-top: ${(p) => p.top && p.theme.spacing[p.top]};\n  margin-bottom: ${(p) => p.bottom && p.theme.spacing[p.bottom]};\n  color: ${(p) => (p.color ? p.theme.colors[p.color] : p.theme.colors.text.secondary)};\n  font-size: ${(p) => (p.size ? p.theme.font.size[p.size] : p.theme.font.size.sm)};\n`;\n\n/**\n * Displays loading dots\n */\nexport const LoadingDots = styled.div`\n  &::after {\n    display: block;\n    animation: ellipsis 1s infinite;\n    content: '.';\n    text-align: center;\n    color: ${(p) => (p.color ? p.theme.colors[p.color] : p.theme.colors.text.secondary)};\n    font-size: ${(p) => p.theme.font.size.xl};\n  }\n\n  @keyframes ellipsis {\n    0% {\n      content: '.';\n    }\n    33% {\n      content: '..';\n    }\n    66% {\n      content: '...';\n    }\n  }\n`;\n","import styled from 'styled-components';\nimport { css } from 'styled-components';\nimport { Link } from 'react-router-dom';\n\n/**\n * Wrapper around React Router's Link component, that uses theme styling\n *\n * @param {string} color\n * @param {string} weight\n * @param {string} size\n */\nexport const A = styled(Link)`\n  text-decoration: none;\n  transition: color 0.1s;\n  display: inline-block;\n  color: ${(p) => (p.color ? p.theme.colors[p.color] : p.theme.colors.text.secondary)};\n  font-weight: ${(p) => (p.weight ? p.theme.font.weight[p.weight] : p.theme.font.weight.normal)};\n  font-size: ${(p) => (p.size ? p.theme.font.size[p.size] : p.theme.font.size.xs)};\n\n  &:hover {\n    color: ${(p) => p.theme.colors.text.primary};\n  }\n`;\n\n/**\n * Component for wrapping error messages\n */\nexport const Error = styled.div`\n  color: ${(p) => (p.color ? p.theme.colors[p.color] : p.theme.colors.error.main)};\n  font-size: ${(p) => (p.size ? p.theme.font.size[p.size] : p.theme.font.size.sm)};\n`;\n\n/**\n * Helper function for adding styles to Heading components\n *\n * @param {string} size, size of text\n */\nconst getHeadingStyles = (size) => css`\n  margin: 0;\n  font-size: ${size};\n  font-weight: ${(p) => p.theme.font.weight.normal};\n  color: ${(p) => (p.color ? p.theme.colors[p.color] : p.theme.colors.text.primary)};\n`;\n\nexport const H1 = styled.h1`\n  ${getHeadingStyles((p) => p.theme.font.size.xl)};\n`;\n\nexport const H2 = styled.h2`\n  ${getHeadingStyles((p) => p.theme.font.size.lg)};\n`;\n\nexport const H3 = styled.h3`\n  ${getHeadingStyles((p) => p.theme.font.size.xs)};\n`;\n","/**\n * All available routes for the app\n */\n\n// export const LANDING = '/home';\n \nexport const HOME = '/';\n\nexport const FORGOT_PASSWORD = '/forgot-password';\n\nexport const RESET_PASSWORD = '/reset-password';\n\nexport const USER_PROFILE = '/:username';\n\nexport const PEOPLE = '/people';\n\nexport const NOTIFICATIONS = '/notifications';\n\nexport const MESSAGES = '/messages/:userId';\n\nexport const POST = '/post/:id';\n\nexport const ALERTS = '/alerts';\n\nexport const ANNOUNCEMENTS = '/announcements';\n\nexport const DISCOUNTS = '/discounts';\n\n\n\n/**\n * Value that's used in place of id when creating something new.\n */\nexport const NEW_ID_VALUE = 'new';\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\nimport styled from 'styled-components';\n\nimport { A } from 'components/Text';\nimport { Spacing } from 'components/Layout';\nimport { Error } from 'components/Text';\nimport { InputText, Button } from 'components/Form';\n\nimport { SIGN_IN } from 'graphql/user';\n\nimport * as Routes from 'routes';\n\nconst Root = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: space-between;\n  font-size: ${(p) => p.theme.font.size.xxs};\n  margin-top: ${(p) => p.theme.spacing.sm};\n`;\n\nconst InputContainer = styled(Spacing)`\n  width: 100%;\n`;\n\nconst ErrorMessage = styled.div`\n  position: absolute;\n  top: 1px;\n`;\n\nconst ForgotPassword = styled.div`\n  font-size: ${(p) => p.theme.font.size.xxs};\n  margin-top: ${(p) => p.theme.spacing.xxs};\n  color: ${(p) => p.theme.colors.white};\n`;\n\n/**\n * Sign In page\n */\nconst SignIn = ({ history, location, refetch }) => {\n  const [values, setValues] = useState({ emailOrUsername: '', password: '' });\n  const [error, setError] = useState('');\n  const [signin, { loading }] = useMutation(SIGN_IN);\n\n  useEffect(() => {\n    setError('');\n  }, [location.pathname]);\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setValues({ ...values, [name]: value });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    if (!emailOrUsername || !password) {\n      setError('All fields are required');\n      return;\n    }\n\n    setError('');\n    try {\n      const response = await signin({\n        variables: { input: { emailOrUsername, password } },\n      });\n      localStorage.setItem('token', response.data.signin.token);\n      await refetch();\n      history.push(Routes.HOME);\n    } catch (error) {\n      setError(error.graphQLErrors[0].message);\n    }\n  };\n\n  const { emailOrUsername, password } = values;\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <Root>\n        <InputContainer>\n          {error && (\n            <ErrorMessage>\n              <Error size=\"xxs\" color=\"white\">\n                {error}\n              </Error>\n            </ErrorMessage>\n          )}\n\n          <InputText\n            autoFocus\n            type=\"text\"\n            name=\"emailOrUsername\"\n            values={emailOrUsername}\n            onChange={handleChange}\n            placeholder=\"Email or Username\"\n            borderColor=\"white\"\n          />\n        </InputContainer>\n\n        <InputContainer left=\"xs\" right=\"xs\">\n          <InputText\n            type=\"password\"\n            name=\"password\"\n            values={password}\n            onChange={handleChange}\n            placeholder=\"Password\"\n            borderColor=\"white\"\n          />\n          <A to={Routes.FORGOT_PASSWORD}>\n            <ForgotPassword>Forgot password?</ForgotPassword>\n          </A>\n        </InputContainer>\n\n        <Button disabled={loading}>Log in</Button>\n      </Root>\n    </form>\n  );\n};\n\nSignIn.propTypes = {\n  history: PropTypes.object.isRequired,\n  refetch: PropTypes.func.isRequired,\n};\n\nexport default withRouter(SignIn);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport { A } from 'components/Text';\nimport { Container } from 'components/Layout';\nimport SignIn from './SignIn';\n\nimport * as Routes from 'routes';\n\nimport SiteInfo from 'constants/SiteInfo.json';\n\nconst Root = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  height: 80px;\n  background-color: transparent;\n`;\n\nconst StyledContainer = styled(Container)`\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  padding: 0 ${(p) => p.theme.spacing.sm};\n\n  @media (min-width: ${(p) => p.theme.screen.md}) {\n    justify-content: space-between;\n  }\n`;\n\nconst Logo = styled(A)`\n  display: none;\n  color: ${(p) => p.theme.colors.white};\n  font-size: ${(p) => p.theme.font.size.sm};\n  font-weight: ${(p) => p.theme.font.weight.bold};\n\n  &:hover {\n    color: ${(p) => p.theme.colors.white};\n  }\n\n  @media (min-width: ${(p) => p.theme.screen.md}) {\n    display: block;\n  }\n`;\n\nconst SignInContainer = styled.div`\n  width: 500px;\n`;\n\n/**\n * Header of the App when user isn't authenticated\n */\nconst AuthHeader = ({ refetch }) => {\n  return (\n    <Root>\n      <StyledContainer maxWidth=\"lg\">\n        <Logo to={Routes.HOME}>{SiteInfo.name}</Logo>\n\n        <SignInContainer>\n          <SignIn refetch={refetch} />\n        </SignInContainer>\n      </StyledContainer>\n    </Root>\n  );\n};\n\nAuthHeader.propTypes = {\n  refetch: PropTypes.func.isRequired,\n};\n\nexport default AuthHeader;\n","import { useState, useEffect } from 'react';\n\n/**\n * React hook for debouncing\n */\nexport const useDebounce = (value, delay) => {\n  const [debouncedValue, setDebouncedValue] = useState(value);\n\n  useEffect(() => {\n    const handler = setTimeout(() => {\n      setDebouncedValue(value);\n    }, delay);\n\n    return () => {\n      clearTimeout(handler);\n    };\n  }, [value, delay]);\n\n  return debouncedValue;\n};\n","import { useEffect } from 'react';\n\n/**\n * React hook that detects click outside an element\n *\n * @param {node} ref, element to detect click outside\n * @param {func} handler, function for invoking when click outside element is detected\n */\nexport const useClickOutside = (ref, handler) => {\n  useEffect(() => {\n    document.addEventListener('click', handleClickOutside, false);\n\n    return () => {\n      document.removeEventListener('click', handleClickOutside, false);\n    };\n  });\n\n  const handleClickOutside = (event) => {\n    if (ref.current && !ref.current.contains(event.target)) {\n      handler();\n    }\n  };\n};\n","import { gql } from '@apollo/client';\n\nexport const SEARCH_LOCATIONS = gql`\nquery($searchQuery: String!){\n    searchLocations(searchQuery: $searchQuery){\n        name\n        city\n        id\n    }\n  } \n`;\n\n// export const GET_LOCATIONS = gql`\n// query\n// `\n","import React, { Fragment, useState, useEffect, useRef } from 'react';\nimport { useApolloClient } from '@apollo/client';\nimport PropTypes from 'prop-types';\nimport Select, { components } from 'react-select';\nimport styled from 'styled-components';\nimport { useDebounce } from 'hooks/useDebounce';\nimport { useClickOutside } from 'hooks/useClickOutside';\nimport { SEARCH_LOCATIONS } from 'graphql/location';\n// import { colourOptions, groupedOptions } from '../data';\n\n// function getLength(options) {\n//   return options.reduce((acc, curr) => {\n//     if (curr.options) return acc + getLength(curr.options);\n//     return acc + 1;\n//   }, 0);\n// }\n\nconst NoSearchResult = styled.div`\n  text-align: center;\n  padding: ${(p) => p.theme.spacing.xs};\n  color: ${(p) => p.theme.colors.text.main};\n`;\n\nconst Root = styled.div`\n  width: 100%;\n  position: relative;\n  z-index: ${(p) => p.theme.zIndex.xl};\n`;\n\nconst SelectInput = styled.input`\n  outline: 0;\n  height: 40px;\n  width: 100%;\n  border: 0;\n  border-radius: ${(p) => p.theme.radius.sm};\n  padding-left: ${(p) => p.theme.spacing.xs};\n  border: 1px solid ${(p) => (p.borderColor ? p.theme.colors[p.borderColor] : p.theme.colors.border.main)};\n  color: ${(p) => p.theme.colors.text.secondary};\n  background-color: ${(p) => (p.backgroundColor ? p.theme.colors[p.backgroundColor] : p.theme.colors.grey[200])};\n  transition: border-color 0.1s;\n\n  &:focus {\n    &::placeholder {\n      color: ${(p) => p.theme.colors.grey[500]};\n    }\n  }\n`;\n\n// const SelectOption =({ location, props }) => {\n//   // const optionsLength = getLength(props.options);\n//   // console.log(optionsLength);\n//   console.log(...props);\n//   const client = useApolloClient();\n//   const [isOpenSearchResult, setIsOpenSearchResult] = useState(false);\n//   const [searchQuery, setSearchQuery] = useState('');\n//   const [locations, setLocations] = useState([]);\n//   const [loading, setLoading] = useState(false);\n//   const inputRef = useRef(null);\n//   useClickOutside(inputRef, () => setIsOpenSearchResult(false));\n\n//   // Debounce search query value\n//   const debounceSearchQuery = useDebounce(searchQuery, 500);\n//   useEffect(() => {\n//     // Clear search input value, after location change\n//     setSearchQuery('');\n//   }, [location.pathname]);\n//   useEffect(() => {\n//     const search = async () => {\n//       const { data } = await client.query({\n//         query: SEARCH_LOCATIONS,\n//         variables: { searchQuery: debounceSearchQuery },\n//       });\n\n//       setLocations(data.searchLocations);\n//       setLoading(false);\n\n//       const openSearchResult = debounceSearchQuery !== '';\n//       setIsOpenSearchResult(openSearchResult);\n//     };\n\n//     debounceSearchQuery ? search() : setIsOpenSearchResult(false);\n\n//     return () => setLoading(false);\n//   }, [debounceSearchQuery, client]);\n//   const handleInputChange = async (e) => {\n//     // Trim white space only from beginning\n//     const value = e.target.value.replace(/^\\s+/g, '');\n//     setSearchQuery(value);\n//     if (value) {\n//       setLoading(true);\n//     }\n//   };\n\n//   const handleInputFocus = () => searchQuery && setIsOpenSearchResult(true);\n\n//   return (\n//     <Root>\n//     <Fragment>\n//       <components.SelectOption {...props}>{props.children}</components.SelectOption>\n//     </Fragment>\n//     </Root>\n//   );\n  \n// };\n\n// export default () => (\n//   <Select\n//     // defaultValue={colourOptions[1]}\n//     //  options={groupedOptions}\n//     components={{ SelectOption }}\n//     placeholder=\"Area You live in\"\n//   />\n// );\n// export default SelectOption;\n\n\nconst SelectOption = ({ location, props }) =>  {\n\n   const client = useApolloClient();\n  const [isOpenSearchResult, setIsOpenSearchResult] = useState(false);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [locations, setLocations] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const inputRef = useRef(null);\n  useClickOutside(inputRef, () => setIsOpenSearchResult(false));\n\n  // Debounce search query value\n  const debounceSearchQuery = useDebounce(searchQuery, 500);\n  // useEffect(() => {\n  //   // Clear search input value, after location change\n  //   setSearchQuery('');\n  // }, [location.pathname]);\n  useEffect(() => {\n    const search = async () => {\n      const { data } = await client.query({\n        query: SEARCH_LOCATIONS,\n        variables: { searchQuery: debounceSearchQuery },\n      });\n      console.log(data);\n      setLocations(data.searchLocations);\n      setLoading(false);\n\n      const openSearchResult = debounceSearchQuery !== '';\n      setIsOpenSearchResult(openSearchResult);\n    };\n\n    debounceSearchQuery ? search() : setIsOpenSearchResult(false);\n\n    return () => setLoading(false);\n  }, [debounceSearchQuery, client]);\n  const handleInputChange = async (e) => {\n    // Trim white space only from beginning\n    const value = e.target.value.replace(/^\\s+/g, '');\n    setSearchQuery(value);\n    if (value) {\n      setLoading(true);\n    }\n  };\n\n  const handleInputFocus = () => searchQuery && setIsOpenSearchResult(true);\n  \n  return (\n  <Root>{locations.map((area)=>{\n    console.log(area.name)\n  })}</Root>\n  // <p>{console.log(locations)}</p>\n  //       //   <div>\n            \n  //       // <select id=\"lang\" onChange={this.handleChange.bind(this)} value={location}>\n  //       //   <option value=\"select\">Select a technology</option>\n  //       //   <option value=\"Angular\">Angular</option>\n  //       //   <option value=\"Bootstrap\">Bootstrap</option>\n  //       //   <option value=\"React\">React</option>\n  //       // </select>\n  //       // <h2>{this.state.tech}</h2>\n  //     // </div>\n  );\n  // render(){\n  //   return (\n  //     <div>\n  //       <select id=\"lang\" onChange={this.handleChange.bind(this)} value={this.state.tech}>\n  //         <option value=\"select\">Select a technology</option>\n  //         <option value=\"Angular\">Angular</option>\n  //         <option value=\"Bootstrap\">Bootstrap</option>\n  //         <option value=\"React\">React</option>\n  //       </select>\n  //       <h2>{this.state.tech}</h2>\n  //     </div>\n  //   )\n  // }\n}\n\nexport default SelectOption;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Helmet } from 'react-helmet';\n\nimport SiteInfo from 'constants/SiteInfo.json';\n\n/**\n * Component that manages changes to document head\n * currently we are editing only title, but you can add meta description, image ...\n */\nconst Head = ({ title, description }) => (\n  <Helmet>\n    <title>{title}</title>\n<description>{description}</description>\n  </Helmet>\n);\n\nHead.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n};\n\nHead.defaultProps = {\n  title: SiteInfo.name,\n  description: SiteInfo.description,\n};\n\nexport default Head;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { withRouter } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\n\nimport { Spacing, Container } from 'components/Layout';\nimport { H1, Error } from 'components/Text';\nimport { InputText, Button } from 'components/Form';\nimport SelectOption from 'components/Select';\nimport Head from 'components/Head';\n\nimport { SIGN_UP } from 'graphql/user';\n\nimport * as Routes from 'routes';\n\nconst Root = styled(Container)`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  margin-top: 60px;\n\n  @media (min-width: ${(p) => p.theme.screen.md}) {\n    justify-content: space-between;\n    margin-top: 120px;\n  }\n`;\n\nconst Welcome = styled.div`\n  display: none;\n  flex-direction: column;\n  color: ${(p) => p.theme.colors.white};\n  max-width: ${(p) => p.theme.screen.xs};\n\n  @media (min-width: ${(p) => p.theme.screen.md}) {\n    display: flex;\n  }\n`;\n\nconst Heading = styled(H1)`\n  margin-bottom: ${(p) => p.theme.spacing.sm};\n`;\n\nconst Form = styled.div`\n  padding: ${(p) => p.theme.spacing.md};\n  border-radius: ${(p) => p.theme.radius.sm};\n  background-color: rgba(255, 255, 255, 0.8);\n  width: 100%;\n\n  @media (min-width: ${(p) => p.theme.screen.sm}) {\n    width: 450px;\n  }\n`;\n\n/**\n * Sign Up page\n */\nconst SignUp = ({ history, refetch }) => {\n  const [error, setError] = useState('');\n  const [values, setValues] = useState({\n    fullName: '',\n    username: '',\n    email: '',\n    password: '',\n    // location: '',\n  });\n  const [signup, { loading }] = useMutation(SIGN_UP);\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setValues({ ...values, [name]: value });\n  };\n\n  const validate = () => {\n    if (!fullName || !email || !username || !password ) {\n      return 'All fields are required';\n    }\n\n    if (fullName.length > 50) {\n      return 'Full name no more than 50 characters';\n    }\n\n    const emailRegex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    if (!emailRegex.test(String(email).toLowerCase())) {\n      return 'Enter a valid email address.';\n    }\n\n    const usernameRegex = /^(?!.*\\.\\.)(?!.*\\.$)[^\\W][\\w.]{0,29}$/;\n    if (!usernameRegex.test(username)) {\n      return 'Usernames can only use letters, numbers, underscores and periods';\n    } else if (username.length > 20) {\n      return 'Username no more than 50 characters';\n    }\n\n    if (password.length < 6) {\n      return 'Password min 6 characters';\n    }\n\n    return false;\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    const error = validate();\n    if (error) {\n      setError(error);\n      return false;\n    }\n\n    try {\n      const response = await signup({\n        variables: { input: { fullName, email, password, username } },\n      });\n      localStorage.setItem('token', response.data.signup.token);\n      await refetch();\n      history.push(Routes.HOME);\n    } catch (error) {\n      setError(error.graphQLErrors[0].message);\n    }\n  };\n\n  const { fullName, email, password, username } = values;\n  return (\n    <Root maxWidth=\"lg\">\n      <Head />\n\n      <Welcome>\n        <div>\n          <Heading color=\"white\">Connect with neighbours and community.</Heading>\n        </div>\n\n        <p>See photos and updates from your neighbours.</p>\n        <p>Follow your neighbours.</p>\n        <p>Know the community update immediately.</p>\n        <p>Find the government alert.</p>\n      </Welcome>\n\n      <Form>\n        <Spacing bottom=\"md\">\n          <H1>Create Account</H1>\n        </Spacing>\n\n        <form onSubmit={(e) => handleSubmit(e, signup)}>\n          <InputText\n            type=\"text\"\n            name=\"fullName\"\n            values={fullName}\n            onChange={handleChange}\n            placeholder=\"Full name\"\n            borderColor=\"white\"\n          />\n          <Spacing top=\"xs\" bottom=\"xs\">\n            <InputText\n              type=\"text\"\n              name=\"email\"\n              values={email}\n              onChange={handleChange}\n              placeholder=\"Email\"\n              borderColor=\"white\"\n            />\n          </Spacing>\n          <InputText\n            type=\"text\"\n            name=\"username\"\n            values={username}\n            onChange={handleChange}\n            placeholder=\"Username\"\n            borderColor=\"white\"\n          />\n          <Spacing top=\"xs\" bottom=\"xs\">\n            <InputText\n              type=\"password\"\n              name=\"password\"\n              values={password}\n              onChange={handleChange}\n              placeholder=\"Password\"\n              borderColor=\"white\"\n            />\n          </Spacing>\n          {/* <Spacing top=\"xs\" bottom=\"xs\">\n            <SelectOption\n              type=\"location\"\n              name=\"location\"\n              values={location}\n              onChange={handleChange}\n              placeholder=\"Location\"\n              borderColor=\"white\"\n            />\n          </Spacing> */}\n          {error && (\n            <Spacing bottom=\"sm\" top=\"sm\">\n              <Error>{error}</Error>\n            </Spacing>\n          )}\n          <Spacing top=\"sm\" />\n          <Button size=\"large\" disabled={loading}>\n            Sign up\n          </Button>\n        </form>\n      </Form>\n    </Root>\n  );\n};\n\nSignUp.propTypes = {\n  history: PropTypes.object.isRequired,\n  refetch: PropTypes.func.isRequired,\n};\n\nexport default withRouter(SignUp);\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { useMutation } from '@apollo/client';\n\nimport { Spacing } from 'components/Layout';\nimport { H1, A, Error } from 'components/Text';\nimport { InputText, Button } from 'components/Form';\nimport Head from 'components/Head';\n\nimport { REQUEST_PASSWORD_RESET } from 'graphql/user';\n\nimport * as Routes from 'routes';\n\nconst Root = styled.div`\n  padding: 0 ${(p) => p.theme.spacing.sm};\n`;\n\nconst Container = styled.div`\n  width: 450px;\n  margin: 0 auto;\n  background-color: ${(p) => p.theme.colors.white};\n  padding: ${(p) => p.theme.spacing.md};\n  border-radius: ${(p) => p.theme.radius.sm};\n  width: 100%;\n  margin-top: 80px;\n\n  @media (min-width: ${(p) => p.theme.screen.sm}) {\n    width: 450px;\n  }\n\n  @media (min-width: ${(p) => p.theme.screen.md}) {\n    margin-top: auto;\n  }\n`;\n\nconst Text = styled.p`\n  font-size: ${(p) => p.theme.font.size.xs};\n  line-height: 22px;\n`;\n\n/**\n * Forgot password page\n */\nconst ForgotPassword = () => {\n  const [email, setEmail] = useState('');\n  const [error, setError] = useState('');\n  const [message, setMessage] = useState('');\n  const [requestResetPassword, { loading }] = useMutation(REQUEST_PASSWORD_RESET);\n\n  const handleEmailChange = (e) => {\n    setEmail(e.target.value);\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    const emailRegex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    if (!emailRegex.test(String(email).toLowerCase())) {\n      setError('Enter a valid email address.');\n      return;\n    }\n\n    setError('');\n    setEmail('');\n    try {\n      const response = await requestResetPassword({\n        variables: { input: { email } },\n      });\n      setMessage(response.data.requestPasswordReset.message);\n    } catch (error) {\n      setError(error.graphQLErrors[0].message);\n    }\n  };\n\n  if (message) {\n    return (\n      <Root>\n        <Container>\n          <Spacing bottom=\"sm\">\n            <H1>{message}</H1>\n          </Spacing>\n        </Container>\n      </Root>\n    );\n  }\n\n  return (\n    <Root>\n      <Head title=\"Forgot Password\" />\n\n      <Container>\n        <Spacing bottom=\"sm\">\n          <H1>Reset Password</H1>\n          <Text>\n            Enter the email address associated with your account, and we’ll email you a link to reset your password.\n          </Text>\n        </Spacing>\n\n        <form onSubmit={(e) => handleSubmit(e, requestResetPassword)}>\n          <InputText type=\"text\" name=\"email\" values={email} onChange={handleEmailChange} placeholder=\"Email\" />\n\n          {error && (\n            <Spacing bottom=\"sm\" top=\"sm\">\n              <Error>{error}</Error>\n            </Spacing>\n          )}\n\n          <Spacing top=\"xs\" />\n\n          <Button disabled={loading}>Send reset link</Button>\n\n          <Spacing top=\"sm\">\n            <A to={Routes.HOME}>&larr; Back to Sign Up</A>\n          </Spacing>\n        </form>\n      </Container>\n    </Root>\n  );\n};\n\nForgotPassword.propTypes = {\n  history: PropTypes.object.isRequired,\n};\n\nexport default ForgotPassword;\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { useQuery, useMutation } from '@apollo/client';\nimport { Spacing } from 'components/Layout';\nimport { H1, Error } from 'components/Text';\nimport { Loading } from 'components/Loading';\nimport { InputText, Button } from 'components/Form';\nimport Head from 'components/Head';\n\nimport { VERIFY_RESET_PASSWORD_TOKEN, RESET_PASSWORD } from 'graphql/user';\n\nimport * as Routes from 'routes';\n\nconst Root = styled.div`\n  padding: 0 ${(p) => p.theme.spacing.sm};\n`;\n\nconst Container = styled.div`\n  width: 100%;\n  margin: 0 auto;\n  background-color: ${(p) => p.theme.colors.white};\n  padding: ${(p) => p.theme.spacing.md};\n  border-radius: ${(p) => p.theme.radius.sm};\n  margin-top: 80px;\n\n  @media (min-width: ${(p) => p.theme.screen.sm}) {\n    width: 450px;\n  }\n\n  @media (min-width: ${(p) => p.theme.screen.md}) {\n    margin-top: auto;\n  }\n`;\n\n/**\n * Reset password page\n */\nconst ResetPassword = ({ history, location, refetch }) => {\n  const [values, setValues] = useState({ password: '', confirmPassword: '' });\n  const [error, setError] = useState('');\n  const [mutationError, setMutationError] = useState('');\n  const url = new URLSearchParams(location.search);\n  const email = url.get('email');\n  const token = url.get('token');\n  const { queryLoading, error: queryError } = useQuery(VERIFY_RESET_PASSWORD_TOKEN, {\n    variables: { email, token },\n  });\n  const { password, confirmPassword } = values;\n  const [resetPassword, { loading: mutationLoading }] = useMutation(RESET_PASSWORD);\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setValues({ ...values, [name]: value });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    if (!password || !confirmPassword) {\n      setError('Enter password and Confirm password.');\n      return;\n    } else if (password.length < 6) {\n      setError('Password min 6 characters');\n      return;\n    } else if (password !== confirmPassword) {\n      setError(\"Passwords don't match.\");\n      return;\n    }\n\n    setError('');\n    setMutationError('');\n    try {\n      const response = await resetPassword({\n        variables: { input: { email, password, token } },\n      });\n      localStorage.setItem('token', response.data.resetPassword.token);\n      await refetch();\n      history.push(Routes.HOME);\n    } catch (error) {\n      setMutationError(error.graphQLErrors[0].message);\n    }\n  };\n\n  return (\n    <Root>\n      <Head title=\"Reset Password\" />\n\n      <Container>\n        <>\n          {queryLoading && <Loading top=\"lg\" />}\n          {mutationError || queryError ? (\n            <Spacing bottom=\"md\">\n              <Error>{mutationError ? mutationError : queryError.graphQLErrors[0].message}</Error>\n            </Spacing>\n          ) : (\n            ''\n          )}\n\n          <Spacing bottom=\"md\">\n            <H1>Password Reset</H1>\n          </Spacing>\n\n          <form onSubmit={(e) => handleSubmit(e, resetPassword)}>\n            <InputText\n              type=\"password\"\n              name=\"password\"\n              values={password}\n              onChange={handleChange}\n              placeholder=\"Password\"\n            />\n\n            <Spacing top=\"xs\" bottom=\"sm\">\n              <InputText\n                type=\"password\"\n                name=\"confirmPassword\"\n                values={confirmPassword}\n                onChange={handleChange}\n                placeholder=\"Confirm Password\"\n              />\n            </Spacing>\n\n            {error && (\n              <Spacing bottom=\"sm\" top=\"sm\">\n                <Error>{error}</Error>\n              </Spacing>\n            )}\n\n            <Button disabled={mutationLoading}>Reset Password</Button>\n          </form>\n        </>\n      </Container>\n    </Root>\n  );\n};\n\nResetPassword.propTypes = {\n  location: PropTypes.object.isRequired,\n  history: PropTypes.object.isRequired,\n  refetch: PropTypes.func.isRequired,\n};\n\nexport default withRouter(ResetPassword);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport styled from 'styled-components';\n\nimport { Overlay } from 'components/Layout';\nimport { AuthHeader, SignUp, ForgotPassword, ResetPassword } from 'pages/Auth';\n// import { LandingPage } from 'pages/Landing';\n\nimport * as Routes from 'routes';\n\nimport backgroundImage from './background.jpeg';\n\nconst Root = styled.div`\n  background: url(${backgroundImage}) no-repeat top / cover;\n  width: 100%;\n  height: 100vh;\n`;\n\nconst Container = styled.div`\n  width: 100%;\n  height: 100%;\n  position: relative;\n  z-index: ${(p) => p.theme.zIndex.lg};\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n\n  @media (min-width: ${(p) => p.theme.screen.md}) {\n    justify-content: center;\n  }\n`;\n\nconst Pages = styled.div`\n  margin-top: 80px;\n\n  @media (min-width: ${(p) => p.theme.screen.md}) {\n    margin-top: -120px;\n  }\n`;\n\n/**\n * Main Layout for the app, when user isn't authenticated\n */\nconst AuthLayout = ({ refetch }) => {\n  return (\n    <Root>\n      <Overlay transparency=\"0.5\" />\n\n      <Container>\n        <AuthHeader refetch={refetch} />\n\n        <Pages>\n          <Switch>\n            {/* <Route exact path={Routes.LANDING} component={LandingPage} /> */}\n            <Route exact path={Routes.HOME} render={() => <SignUp refetch={refetch} />} />\n            <Route exact path={Routes.FORGOT_PASSWORD} component={ForgotPassword} />\n            <Route exact path={Routes.RESET_PASSWORD} render={() => <ResetPassword refetch={refetch} />} />\n            <Redirect to={Routes.HOME} />\n          </Switch>\n        </Pages>\n      </Container>\n    </Root>\n  );\n};\n\nAuthLayout.propTypes = {\n  refetch: PropTypes.func.isRequired,\n};\n\nexport default AuthLayout;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport { A, H1, H2 } from 'components/Text';\nimport { Spacing } from 'components/Layout';\nimport { NotFoundIcon } from 'components/icons';\n\nimport * as Routes from 'routes';\n\nconst Root = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-top: ${(p) => p.theme.spacing.lg};\n  padding: 0 ${(p) => p.theme.spacing.sm};\n  text-align: center;\n`;\n\n/**\n * Component for displaying when we couldn't find the page\n */\nconst NotFound = ({ message, showHomePageLink }) => (\n  <Root>\n    <H1>Oops!</H1>\n\n    <Spacing top=\"sm\" bottom=\"md\">\n      <H2>{message}</H2>\n    </Spacing>\n\n    <NotFoundIcon width=\"100\" />\n\n    <Spacing bottom=\"md\" />\n\n    {showHomePageLink && <A to={Routes.HOME}>Go back to Home Page</A>}\n  </Root>\n);\n\nNotFound.propTypes = {\n  message: PropTypes.string,\n  showHomePageLink: PropTypes.bool,\n};\n\nNotFound.defaultProps = {\n  message: \"We can't seem to find the page you're looking for.\",\n  showHomePageLink: true,\n};\n\nexport default NotFound;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport { UserIcon } from './icons';\n\nconst Root = styled.div`\n  width: ${(p) => (p.size ? `${p.size}px` : '30px')};\n  height: ${(p) => (p.size ? `${p.size}px` : '30px')};\n  border-radius: 50%;\n  overflow: hidden;\n  flex-shrink: 0;\n`;\n\nconst Image = styled.img`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n`;\n\n/**\n * Component for rendering user's image\n */\nconst Avatar = ({ size, image }) => (\n  <Root size={size}>{image ? <Image src={image} /> : <UserIcon width={size ? `${size}px` : 30} />}</Root>\n);\n\nAvatar.propTypes = {\n  size: PropTypes.number,\n  image: PropTypes.string,\n};\n\nexport default Avatar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport { SearchIcon } from 'components/icons';\n\nconst Root = styled.div`\n  width: 100%;\n  position: relative;\n  z-index: ${(p) => p.theme.zIndex.xl};\n`;\n\nconst IconContainer = styled.div`\n  position: absolute;\n  top: 12px;\n  left: 10px;\n`;\n\nconst Input = styled.input`\n  outline: 0;\n  height: 40px;\n  width: 100%;\n  border: 0;\n  border-radius: ${(p) => p.theme.radius.md};\n  padding-left: ${(p) => (p.hideIcon ? p.theme.spacing.xs : p.theme.spacing.lg)};\n  padding-right: ${(p) => p.theme.spacing.lg};\n  color: ${(p) => p.theme.colors.text.main};\n  font-size: ${(p) => p.theme.font.size.xs};\n  background-color: ${(p) => (p.backgroundColor ? p.theme.colors[p.backgroundColor] : p.theme.colors.grey[200])};\n  transition: border-color 0.1s;\n\n  &:focus {\n    &::placeholder {\n      color: ${(p) => p.theme.colors.grey[500]};\n    }\n  }\n`;\n\n/**\n * Component for rendering search input\n */\nconst SearchInput = ({\n  onChange,\n  onFocus,\n  value,\n  inputRef,\n  backgroundColor,\n  placeholder,\n  hideIcon,\n  children,\n  autoFocus,\n}) => {\n  return (\n    <Root>\n      {!hideIcon && (\n        <IconContainer>\n          <SearchIcon />\n        </IconContainer>\n      )}\n\n      <Input\n        onChange={onChange}\n        onFocus={onFocus}\n        value={value}\n        ref={inputRef}\n        backgroundColor={backgroundColor}\n        type=\"text\"\n        placeholder={placeholder}\n        hideIcon={hideIcon}\n        autoFocus={autoFocus}\n      />\n\n      {children}\n    </Root>\n  );\n};\n\nSearchInput.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  onFocus: PropTypes.func,\n  value: PropTypes.string.isRequired,\n  ref: PropTypes.object,\n  backgroundColor: PropTypes.string,\n  placeholder: PropTypes.string,\n  hideIcon: PropTypes.bool,\n  children: PropTypes.node,\n  autoFocus: PropTypes.bool,\n};\n\nexport default SearchInput;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { generatePath } from 'react-router-dom';\n\nimport { Spacing } from 'components/Layout';\nimport { A } from 'components/Text';\nimport Avatar from 'components/Avatar';\n\nimport * as Routes from 'routes';\n\nconst Root = styled.div`\n  width: 100%;\n  max-height: 350px;\n  min-height: 40px;\n  overflow: auto;\n  position: absolute;\n  top: 50px;\n  font-size: ${(p) => p.theme.font.size.xs};\n  box-shadow: ${(p) => p.theme.shadows.sm};\n  background-color: ${(p) => p.theme.colors.white};\n`;\n\nconst StyledA = styled(A)`\n  display: block;\n\n  &:hover {\n    background-color: ${(p) => p.theme.colors.grey[100]};\n  }\n`;\n\nconst Item = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  padding: ${(p) => p.theme.spacing.xs};\n`;\n\nconst Name = styled.div`\n  font-weight: ${(p) => p.theme.font.weight.bold};\n`;\n\nconst UserName = styled.div`\n  font-size: ${(p) => p.theme.font.size.xxs};\n`;\n\nconst NoSearchResult = styled.div`\n  text-align: center;\n  padding: ${(p) => p.theme.spacing.xs};\n  color: ${(p) => p.theme.colors.text.main};\n`;\n\n/**\n * Displays search result, meant to be used in Search component\n */\nconst SearchResult = ({ users, forMessage }) => {\n  if (users.length < 1) {\n    return (\n      <Root>\n        <NoSearchResult>No search results.</NoSearchResult>\n      </Root>\n    );\n  }\n\n  return (\n    <Root>\n      {users.map((user) => (\n        <StyledA\n          key={user.id}\n          to={\n            forMessage\n              ? generatePath(Routes.MESSAGES, { userId: user.id })\n              : generatePath(Routes.USER_PROFILE, { username: user.username })\n          }\n        >\n          <Item>\n            <Avatar image={user.image} size={34} />\n\n            <Spacing left=\"xs\">\n              <Name>{user.fullName}</Name>\n              <UserName>@{user.username}</UserName>\n            </Spacing>\n          </Item>\n        </StyledA>\n      ))}\n    </Root>\n  );\n};\n\nSearchResult.propTypes = {\n  users: PropTypes.array.isRequired,\n  forMessage: PropTypes.bool,\n};\n\nexport default SearchResult;\n","import React, { useState, useEffect, useRef } from 'react';\nimport { useApolloClient } from '@apollo/client';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport { Loading } from 'components/Loading';\nimport SearchInput from './SearchInput';\nimport SearchResult from './SearchResult';\n\nimport { useClickOutside } from 'hooks/useClickOutside';\nimport { useDebounce } from 'hooks/useDebounce';\n\nimport { SEARCH_USERS } from 'graphql/user';\n\nconst StyledLoading = styled(Loading)`\n  position: absolute;\n  top: 14px;\n  right: 16px;\n`;\n\n/**\n * Renders search input\n */\nconst Search = ({ location, hideIcon, forMessage, backgroundColor, placeholder, autoFocus, ...others }) => {\n  const client = useApolloClient();\n\n  const [isOpenSearchResult, setIsOpenSearchResult] = useState(false);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [users, setUsers] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  // Close search result on click outside\n  const inputRef = useRef(null);\n  useClickOutside(inputRef, () => setIsOpenSearchResult(false));\n\n  // Debounce search query value\n  const debounceSearchQuery = useDebounce(searchQuery, 500);\n\n  useEffect(() => {\n    // Clear search input value, after location change\n    setSearchQuery('');\n  }, [location.pathname]);\n\n  useEffect(() => {\n    const search = async () => {\n      const { data } = await client.query({\n        query: SEARCH_USERS,\n        variables: { searchQuery: debounceSearchQuery },\n      });\n\n      setUsers(data.searchUsers);\n      setLoading(false);\n\n      const openSearchResult = debounceSearchQuery !== '';\n      setIsOpenSearchResult(openSearchResult);\n    };\n\n    debounceSearchQuery ? search() : setIsOpenSearchResult(false);\n\n    return () => setLoading(false);\n  }, [debounceSearchQuery, client]);\n\n  const handleInputChange = async (e) => {\n    // Trim white space only from beginning\n    const value = e.target.value.replace(/^\\s+/g, '');\n    setSearchQuery(value);\n    if (value) {\n      setLoading(true);\n    }\n  };\n\n  const handleInputFocus = () => searchQuery && setIsOpenSearchResult(true);\n\n  return (\n    <SearchInput\n      onChange={handleInputChange}\n      onFocus={handleInputFocus}\n      value={searchQuery}\n      inputRef={inputRef}\n      placeholder={placeholder}\n      hideIcon={hideIcon}\n      backgroundColor={backgroundColor}\n      autoFocus={autoFocus}\n      {...others}\n    >\n      {loading && <StyledLoading size=\"xxs\" />}\n\n      {isOpenSearchResult && <SearchResult users={users} forMessage={forMessage} />}\n    </SearchInput>\n  );\n};\n\nSearch.propTypes = {\n  location: PropTypes.object.isRequired,\n  hideIcon: PropTypes.bool,\n  forMessage: PropTypes.bool,\n  backgroundColor: PropTypes.string,\n  placeholder: PropTypes.string,\n  autoFocus: PropTypes.bool,\n};\n\nexport default Search;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useApolloClient } from '@apollo/client';\nimport { withRouter } from 'react-router-dom';\n\nimport { Button } from 'components/Form';\n\nimport * as Routes from 'routes';\n\nimport { useStore } from 'store';\nimport { CLEAR_AUTH_USER } from 'store/auth';\n\n/**\n * Component that signs out the user\n */\nconst SignOut = ({ history }) => {\n  const client = useApolloClient();\n  const [, dispatch] = useStore();\n\n  const handleSignOut = () => {\n    dispatch({ type: CLEAR_AUTH_USER });\n    localStorage.removeItem('token');\n    client.resetStore();\n    history.push(Routes.HOME);\n  };\n\n  return (\n    <Button text onClick={handleSignOut}>\n      Sign out\n    </Button>\n  );\n};\n\nSignOut.propTypes = {\n  history: PropTypes.object.isRequired,\n};\n\nexport default withRouter(SignOut);\n","import React from 'react';\nimport styled, { css } from 'styled-components';\nimport { generatePath } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport SignOut from 'components/App/SignOut';\nimport { A } from 'components/Text';\n\nimport * as Routes from 'routes';\n\nimport { useStore } from 'store';\n\nconst Root = styled.div`\n  text-align: center;\n  position: absolute;\n  background-color: white;\n  line-height: ${(p) => p.theme.spacing.md};\n  right: 0;\n  top: 60px;\n  z-index: ${(p) => p.theme.zIndex.xl};\n  box-shadow: ${(p) => p.theme.shadows.sm};\n`;\n\nconst CSS = css`\n  transition: background-color 0.1s;\n  display: block;\n  padding: ${(p) => p.theme.spacing.sm} ${(p) => p.theme.spacing.xl};\n\n  &:hover {\n    background-color: ${(p) => p.theme.colors.grey[100]};\n    color: ${(p) => p.theme.colors.text.secondary};\n  }\n`;\n\nconst Link = styled(A)`\n  ${CSS};\n`;\n\nconst Item = styled.div`\n  ${CSS};\n`;\n\n/**\n * Component that renders Header User's dropdown\n */\nconst HeaderUserDropDown = ({ userRef }) => {\n  const [{ auth }] = useStore();\n\n  return (\n    <Root ref={userRef}>\n      <Link\n        to={generatePath(Routes.USER_PROFILE, {\n          username: auth.user.username,\n        })}\n      >\n        My Profile\n      </Link>\n\n      <Item>\n        <SignOut />\n      </Item>\n    </Root>\n  );\n};\n\nHeaderUserDropDown.propTypes = {\n  userRef: PropTypes.object,\n};\n\nexport default HeaderUserDropDown;\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { generatePath } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { useApolloClient } from '@apollo/client';\n\nimport { A } from 'components/Text';\nimport { Spacing } from 'components/Layout';\nimport Avatar from 'components/Avatar';\n\nimport { useClickOutside } from 'hooks/useClickOutside';\n\nimport { GET_AUTH_USER } from 'graphql/user';\nimport { UPDATE_NOTIFICATION_SEEN } from 'graphql/notification';\n\nimport { useStore } from 'store';\n\nimport * as Routes from 'routes';\n\nconst NotificationItem = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n  padding: ${(p) => p.theme.spacing.xs};\n  border-bottom: 1px solid ${(p) => p.theme.colors.border.main};\n  font-size: ${(p) => p.theme.font.size.xxs};\n  background-color: ${(p) => p.theme.colors.white};\n\n  &:last-child {\n    border-bottom: 0;\n  }\n`;\n\nconst LeftSide = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`;\n\nconst Name = styled.div`\n  font-weight: ${(p) => p.theme.font.weight.bold};\n`;\n\nconst Action = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n  flex: 1;\n  margin-left: ${(p) => p.theme.spacing.xs};\n`;\n\nconst PostImage = styled.div`\n  width: 40px;\n  height: 40px;\n  overflow: hidden;\n`;\n\nconst Image = styled.img`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  display: block;\n`;\n\n/**\n * Renders user notifications\n */\nconst Notification = ({ notification, close }) => {\n  const [{ auth }] = useStore();\n  const client = useApolloClient();\n  const ref = React.useRef(null);\n\n  useClickOutside(ref, close);\n\n  useEffect(() => {\n    const updateNotificationSeen = async () => {\n      try {\n        await client.mutate({\n          mutation: UPDATE_NOTIFICATION_SEEN,\n          variables: {\n            input: {\n              userId: auth.user.id,\n            },\n          },\n          refetchQueries: () => [{ query: GET_AUTH_USER }],\n        });\n      } catch (err) {}\n    };\n\n    updateNotificationSeen();\n  }, [auth.user.id, auth.user.newNotifications.length, client]);\n\n  if (!notification.follow && !notification.like && !notification.comment) {\n    return null;\n  }\n\n  return (\n    <NotificationItem ref={ref}>\n      <A\n        to={generatePath(Routes.USER_PROFILE, {\n          username: notification.author.username,\n        })}\n      >\n        <LeftSide>\n          <Avatar image={notification.author.image} size={34} />\n\n          <Spacing left=\"xs\" />\n\n          <Name>{notification.author.fullName}</Name>\n        </LeftSide>\n      </A>\n\n      {notification.follow && <Action>started following you</Action>}\n\n      {notification.like && (\n        <Action>\n          likes your photo\n          <A to={generatePath(Routes.POST, { id: notification.like.post.id })}>\n            <PostImage>\n              <Image src={notification.like.post.image} />\n            </PostImage>\n          </A>\n        </Action>\n      )}\n\n      {notification.comment && (\n        <Action>\n          commented on your photo\n          <A to={generatePath(Routes.POST, { id: notification.comment.post.id })}>\n            <PostImage>\n              <Image src={notification.comment.post.image} />\n            </PostImage>\n          </A>\n        </Action>\n      )}\n    </NotificationItem>\n  );\n};\n\nNotification.propTypes = {\n  close: PropTypes.func,\n};\n\nexport default Notification;\n","import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nimport Notification from '../Notification';\n\nconst Root = styled.div`\n  position: absolute;\n  width: 100%;\n  max-height: 350px;\n  overflow-y: auto;\n  background-color: white;\n  right: 0;\n  top: 60px;\n  z-index: ${(p) => p.theme.zIndex.xl};\n  box-shadow: ${(p) => p.theme.shadows.sm};\n\n  @media (min-width: ${(p) => p.theme.screen.sm}) {\n    width: 500px;\n    right: ${(p) => p.theme.spacing.lg};\n  }\n`;\n\nconst Empty = styled.div`\n  padding: ${(p) => p.theme.spacing.xs};\n`;\n\n/**\n * Component that renders Header Notification's dropdown\n */\nconst HeaderNotificationDropDown = ({ notificationRef, dropdownData, closeDropDown }) => {\n  return (\n    <Root ref={notificationRef}>\n      {!dropdownData.length ? (\n        <Empty>No new notifications.</Empty>\n      ) : (\n        dropdownData.map((notification) => (\n          <Notification key={notification.id} notification={notification} close={closeDropDown} />\n        ))\n      )}\n    </Root>\n  );\n};\n\nHeaderNotificationDropDown.propTypes = {\n  notificationRef: PropTypes.object,\n  dropdownData: PropTypes.array,\n  closeDropDown: PropTypes.func,\n};\n\nexport default HeaderNotificationDropDown;\n","/**\n * Converts unix timestamp into a time ago string like 2 hours ago\n *\n * @param {string} date unix timestamp\n */\nexport const timeAgo = (unixTimestamp) => {\n  const date = new Date(parseInt(unixTimestamp));\n\n  const seconds = Math.floor((new Date() - date) / 1000);\n  let interval = Math.floor(seconds / 31536000);\n\n  if (interval > 1) {\n    return interval + ' years';\n  }\n\n  interval = Math.floor(seconds / 2592000);\n  if (interval > 1) {\n    return interval + ' months';\n  }\n\n  interval = Math.floor(seconds / 86400);\n  if (interval > 1) {\n    return interval + ' days';\n  }\n\n  interval = Math.floor(seconds / 3600);\n  if (interval > 1) {\n    return interval + ' hours';\n  }\n\n  interval = Math.floor(seconds / 60);\n  if (interval > 1) {\n    return interval + ' mins';\n  }\n\n  return Math.floor(seconds) + ' seconds';\n};\n\n/**\n * Converts unix timestamp to current date\n *\n * @param {string} date unix timestamp\n */\nexport const currentDate = (unixTimestamp) => {\n  const date = new Date(parseInt(unixTimestamp));\n  const months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n\n  const month = months[date.getMonth() + 1];\n  const day = date.getDay();\n  const year = date.getFullYear();\n  const time = date.toLocaleString('en-US', {\n    hour: 'numeric',\n    minute: 'numeric',\n    hour12: true,\n  });\n\n  return `${month} ${day}, ${year} ${time}`;\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { NavLink, generatePath } from 'react-router-dom';\n\nimport Avatar from 'components/Avatar';\nimport { A } from 'components/Text';\n\nimport { timeAgo } from 'utils/date';\n\nimport * as Routes from 'routes';\n\nconst Root = styled.div`\n  position: absolute;\n  width: 100%;\n  max-height: 350px;\n  overflow-y: auto;\n  background-color: white;\n  right: 0;\n  top: 60px;\n  z-index: ${(p) => p.theme.zIndex.xl};\n  box-shadow: ${(p) => p.theme.shadows.sm};\n\n  @media (min-width: ${(p) => p.theme.screen.sm}) {\n    width: 500px;\n    right: 90px;\n  }\n`;\n\nconst Heading = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-end;\n  align-items: center;\n  padding: ${(p) => p.theme.spacing.xs} ${(p) => p.theme.spacing.xs};\n`;\n\nconst Link = styled(A)`\n  color: ${(p) => p.theme.colors.primary.main};\n  font-size: ${(p) => p.theme.font.size.xs};\n\n  &:hover {\n    color: ${(p) => p.theme.colors.primary.main};\n    text-decoration: underline;\n  }\n`;\n\nconst User = styled(NavLink)`\n  width: 100%;\n  padding: ${(p) => p.theme.spacing.xs} ${(p) => p.theme.spacing.xxs};\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-start;\n  align-items: center;\n  text-decoration: none;\n  color: ${(p) => p.theme.colors.text.primary};\n  border-top: 1px solid ${(p) => p.theme.colors.border.main};\n\n  &:hover {\n    background-color: ${(p) => p.theme.colors.grey[100]};\n  }\n`;\n\nconst Info = styled.div`\n  width: 100%;\n  padding: 0 ${(p) => p.theme.spacing.xs};\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst FullName = styled.div`\n  text-overflow: ellipsis;\n  width: 100%;\n`;\n\nconst LastMessage = styled.div`\n  margin-top: ${(p) => p.theme.spacing.xxs};\n  font-size: ${(p) => p.theme.font.size.xxs};\n  color: ${(p) => p.theme.colors.grey[500]};\n  text-overflow: ellipsis;\n`;\n\nconst CreatedAt = styled.div`\n  font-size: ${(p) => p.theme.font.size.tiny};\n  color: ${(p) => p.theme.colors.text.secondary};\n`;\n\n/**\n * Component that renders Header Message's dropdown\n */\nconst HeaderMessageDropdown = ({ messageRef, dropdownData }) => {\n  return (\n    <Root ref={messageRef}>\n      <Heading>\n        <Link to={generatePath(Routes.MESSAGES, { userId: Routes.NEW_ID_VALUE })}>New Message</Link>\n      </Heading>\n\n      {dropdownData.map((user) => (\n        <User key={user.id} to={generatePath(Routes.MESSAGES, { userId: user.id })}>\n          <span>\n            <Avatar image={user.image} size={50} />\n          </span>\n\n          <Info>\n            <div>\n              <FullName>{user.fullName}</FullName>\n\n              <LastMessage>{user.lastMessage}</LastMessage>\n            </div>\n\n            <CreatedAt>{timeAgo(user.lastMessageCreatedAt)}</CreatedAt>\n          </Info>\n        </User>\n      ))}\n    </Root>\n  );\n};\n\nHeaderMessageDropdown.propTypes = {\n  messageRef: PropTypes.object,\n  dropdownData: PropTypes.array,\n};\n\nexport default HeaderMessageDropdown;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport HeaderUserDropDown from './HeaderUserDropDown';\nimport HeaderNotificationDropDown from './HeaderNotificationDropDown';\nimport HeaderMessageDropdown from './HeaderMessageDropdown';\n\n/**\n * Component that renders DropDown's of Header\n */\nconst HeaderDropDowns = ({ messageRef, notificationRef, userRef, dropdownOpen, dropdownData, closeDropDown }) => {\n  const DropDowns = {\n    USER: <HeaderUserDropDown userRef={userRef} />,\n    NOTIFICATION: (\n      <HeaderNotificationDropDown\n        notificationRef={notificationRef}\n        dropdownData={dropdownData}\n        closeDropDown={closeDropDown}\n      />\n    ),\n    MESSAGE: <HeaderMessageDropdown messageRef={messageRef} dropdownData={dropdownData} />,\n  };\n\n  return dropdownOpen ? DropDowns[dropdownOpen] : null;\n};\n\nHeaderDropDowns.propTypes = {\n  messageRef: PropTypes.object,\n  notificationRef: PropTypes.object,\n  userRef: PropTypes.object,\n  dropdownOpen: PropTypes.string,\n  dropdownData: PropTypes.array,\n  closeDropDown: PropTypes.func,\n};\n\nexport default HeaderDropDowns;\n","import React, { useState, useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport styled, { css } from 'styled-components';\nimport { withRouter } from 'react-router-dom';\n\nimport { NotificationIcon, MenuIcon, EnvelopeOpenIcon } from 'components/icons';\nimport { Container, Spacing } from 'components/Layout';\nimport { A } from 'components/Text';\nimport { Button } from 'components/Form';\nimport Avatar from 'components/Avatar';\nimport Search from 'components/Search';\nimport HeaderDropDowns from './HeaderDropDowns';\n\nimport { useClickOutside } from 'hooks/useClickOutside';\n\nimport { useStore } from 'store';\n\nimport { HEADER_HEIGHT } from 'constants/Layout';\nimport SiteInfo from 'constants/SiteInfo.json';\n\nimport * as Routes from 'routes';\n\nconst Root = styled(Container)`\n  position: sticky;\n  top: 0;\n  background-color: ${(p) => p.theme.colors.white};\n  z-index: ${(p) => p.theme.zIndex.md};\n  height: ${HEADER_HEIGHT}px;\n  border-bottom: 1px solid ${(p) => p.theme.colors.border.main};\n\n  @media (min-width: ${(p) => p.theme.screen.md}) {\n    z-index: ${(p) => p.theme.zIndex.md};\n  }\n`;\n\nconst Wrapper = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n  height: ${HEADER_HEIGHT}px;\n  margin: 0 auto;\n  width: 100%;\n\n  @media (min-width: ${(p) => parseInt(p.theme.screen.lg, 10) + 20 + 'px'}) {\n    width: ${(p) => p.theme.screen.lg};\n  }\n`;\n\nconst LeftSide = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`;\n\nconst Hamburger = styled.div`\n  cursor: pointer;\n\n  @media (min-width: ${(p) => p.theme.screen.md}) {\n    display: none;\n  }\n`;\n\nconst Logo = styled(A)`\n  display: none;\n  color: ${(p) => p.theme.colors.primary.main};\n  font-weight: ${(p) => p.theme.font.weight.bold};\n  font-size: ${(p) => p.theme.font.size.sm};\n\n  &:hover {\n    color: ${(p) => p.theme.colors.primary.main};\n  }\n\n  @media (min-width: ${(p) => p.theme.screen.md}) {\n    display: block;\n  }\n`;\n\nconst RightSide = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  position: relative;\n`;\n\nconst countCSS = css`\n  top: -6px;\n  position: absolute;\n  height: 22px;\n  width: 22px;\n  padding: 2px;\n  letter-spacing: -1px;\n  border-radius: 50%;\n  color: ${(p) => p.theme.colors.white};\n  background-color: ${(p) => p.theme.colors.error.main};\n  font-size: ${(p) => p.theme.font.size.xxs};\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst NotificationCount = styled.span`\n  ${countCSS};\n  right: 54px;\n`;\n\nconst MessageCount = styled.span`\n  ${countCSS};\n  right: 100px;\n`;\n\n/**\n * Header of the App when user is authenticated\n */\nconst Header = ({ location, toggleSideBar }) => {\n  const [{ auth }] = useStore();\n\n  const [dropdownOpen, setDropdownOpen] = useState(null);\n  const [dropdownData, setDropdownData] = useState([]);\n\n  const messageRef = useRef(null);\n  const notificationRef = useRef(null);\n  const userRef = useRef(null);\n\n  const closeOnClickOutside = () => {\n    if (dropdownOpen) {\n      closeDropDown();\n    }\n  };\n\n  useClickOutside(messageRef, closeOnClickOutside);\n  useClickOutside(notificationRef, closeOnClickOutside);\n  useClickOutside(userRef, closeOnClickOutside);\n\n  const closeDropDown = () => {\n    setDropdownOpen(null);\n    setDropdownData([]);\n  };\n\n  useEffect(() => {\n    return () => closeDropDown();\n  }, [location.pathname]);\n\n  const handleIconClick = (dropdownType) => {\n    if (dropdownOpen) {\n      closeDropDown();\n    } else {\n      if (dropdownType === 'NOTIFICATION') {\n        setDropdownData(auth.user.newNotifications);\n      } else if (dropdownType === 'MESSAGE') {\n        setDropdownData(auth.user.newConversations);\n      }\n\n      setDropdownOpen(dropdownType);\n    }\n  };\n\n  return (\n    <Root>\n      <Wrapper>\n        <LeftSide>\n          <Hamburger onClick={toggleSideBar}>\n            <MenuIcon />\n          </Hamburger>\n\n          <Logo to={Routes.HOME}>{SiteInfo.name}</Logo>\n\n          <Spacing left=\"sm\" right=\"md\">\n            <Search location={location} placeholder=\"Search\" />\n          </Spacing>\n        </LeftSide>\n\n        <RightSide>\n          <Spacing right=\"md\">\n            <Button ghost onClick={() => handleIconClick('MESSAGE')}>\n              {auth.user.newConversations.length > 0 && (\n                <MessageCount>{auth.user.newConversations.length}</MessageCount>\n              )}\n\n              <EnvelopeOpenIcon />\n            </Button>\n          </Spacing>\n\n          <Spacing right=\"md\">\n            <Button ghost onClick={() => handleIconClick('NOTIFICATION')}>\n              {auth.user.newNotifications.length > 0 && (\n                <NotificationCount>{auth.user.newNotifications.length}</NotificationCount>\n              )}\n              <NotificationIcon />\n            </Button>\n          </Spacing>\n\n          <Button ghost onClick={() => handleIconClick('USER')}>\n            <Avatar image={auth.user.image} />\n          </Button>\n        </RightSide>\n\n        <HeaderDropDowns\n          messageRef={messageRef}\n          notificationRef={notificationRef}\n          userRef={userRef}\n          dropdownOpen={dropdownOpen}\n          dropdownData={dropdownData}\n          closeDropDown={closeDropDown}\n        />\n      </Wrapper>\n    </Root>\n  );\n};\n\nHeader.propTypes = {\n  location: PropTypes.object.isRequired,\n  toggleSideBar: PropTypes.func.isRequired,\n};\n\nexport default withRouter(Header);\n","/**\n * Layout size constants\n */\n\nexport const SIDEBAR_DESKTOP_WIDTH = 180;\n\nexport const SIDEBAR_MOBILE_WIDTH = 240;\n\nexport const USER_SUGGESTIONS_WIDTH = 240;\n\nexport const HEADER_HEIGHT = 60;\n","import React from 'react';\nimport { NavLink, generatePath } from 'react-router-dom';\nimport styled from 'styled-components';\n\nimport * as Routes from 'routes';\n\nimport { ExploreIcon, NotificationIcon, HomeIcon, PeopleIcon, EnvelopeIcon, AlertIcon } from 'components/icons';\n\nconst Link = styled(NavLink)`\n  text-decoration: none;\n  transition: color 0.1s;\n  color: ${(p) => p.theme.colors.text.primary};\n  display: block;\n  padding-left: ${(p) => p.theme.spacing.xs};\n\n  &:hover,\n  &.selected {\n    color: ${(p) => p.theme.colors.button};\n    background-color: ${(p) => p.theme.colors.button};\n\n    svg path {\n      fill: ${(p) => p.theme.colors.button};\n    }\n\n    @media (min-width: ${(p) => p.theme.screen.md}) {\n      background-color: ${(p) => p.theme.colors.white};\n    }\n  }\n`;\n\nconst List = styled.ul`\n  list-style-type: none;\n  padding: 0;\n  line-height: 40px;\n  font-size: ${(p) => p.theme.font.size.xs};\n`;\n\nconst ListItem = styled.li`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`;\n\nconst Name = styled.div`\n  margin-left: ${(p) => p.theme.spacing.sm};\n`;\n\n/**\n * Navigation component used in SideBar\n */\nconst Navigation = () => {\n  return (\n    <List>\n      <Link exact activeClassName=\"selected\" to={Routes.HOME}>\n        <ListItem>\n          <HomeIcon />\n          <Name>Home</Name>\n        </ListItem>\n      </Link>\n\n      <Link exact activeClassName=\"selected\" to={Routes.DISCOUNTS}>\n        <ListItem>\n          <ExploreIcon width={20} />\n          <Name>Discounts</Name>\n        </ListItem>\n      </Link>\n\n      <Link exact activeClassName=\"selected\" to={Routes.PEOPLE}>\n        <ListItem>\n          <PeopleIcon />\n          <Name>Neighbours</Name>\n        </ListItem>\n      </Link>\n\n      {/* <Link exact activeClassName=\"selected\" to={Routes.EXPLORE}>\n        <ListItem>\n          <ExploreIcon width={20} />\n          <Name>Announcement</Name>\n        </ListItem>\n      </Link>\n      <Link exact activeClassName=\"selected\" to={Routes.EXPLORE}>\n        <ListItem>\n          <AlertIcon width={20} />\n          <Name>Alert</Name>\n        </ListItem>\n      </Link> */}\n      <Link exact activeClassName=\"selected\" to={Routes.NOTIFICATIONS}>\n        <ListItem>\n          <NotificationIcon width={18} />\n          <Name>Notifications</Name>\n        </ListItem>\n      </Link>\n\n      <Link exact activeClassName=\"selected\" to={generatePath(Routes.MESSAGES, { userId: Routes.NEW_ID_VALUE })}>\n        <ListItem>\n          <EnvelopeIcon width={18} />\n          <Name>Messages</Name>\n        </ListItem>\n      </Link>\n    </List>\n  );\n};\n\nexport default Navigation;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { generatePath, withRouter, NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nimport { Spacing } from 'components/Layout';\nimport Navigation from './Navigation';\nimport Avatar from 'components/Avatar';\n\nimport { SIDEBAR_DESKTOP_WIDTH, SIDEBAR_MOBILE_WIDTH, HEADER_HEIGHT } from 'constants/Layout';\n\nimport { useStore } from 'store';\n\nimport * as Routes from 'routes';\n\nconst Root = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  padding-top: ${HEADER_HEIGHT + 40}px;\n  height: 100%;\n  width: ${SIDEBAR_MOBILE_WIDTH}px;\n  transition: margin-left 0.2s ease-in-out;\n  font-size: ${(p) => p.theme.font.size.xxs};\n  z-index: ${(p) => p.theme.zIndex.sm};\n  background-color: ${(p) => p.theme.colors.white};\n  border-right: 1px solid ${(p) => p.theme.colors.border.main};\n\n  @media (min-width: ${(p) => p.theme.screen.md}) {\n    padding-top: 0;\n    position: sticky;\n    top: 100px;\n    margin-left: ${(p) => (p.isOpen ? 0 : `-${SIDEBAR_DESKTOP_WIDTH}px`)};\n    flex-basis: ${SIDEBAR_DESKTOP_WIDTH}px;\n    flex-grow: 0;\n    flex-shrink: 0;\n    border: 0;\n    background-color: transparent;\n  }\n\n  @media (max-width: ${(p) => p.theme.screen.md}) {\n    margin-left: ${(p) => (p.isOpen ? 0 : `-${SIDEBAR_MOBILE_WIDTH}px`)};\n  }\n`;\n\nconst User = styled(NavLink)`\n  text-decoration: none;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  padding: ${(p) => p.theme.spacing.xs};\n  border: 1px solid transparent;\n\n  &:hover,\n  &.selected {\n    background-color: ${(p) => p.theme.colors.grey[100]};\n\n    @media (min-width: ${(p) => p.theme.screen.md}) {\n      background-color: ${(p) => p.theme.colors.white};\n    }\n  }\n`;\n\nconst FullName = styled.div`\n  font-weight: ${(p) => p.theme.font.weight.bold};\n  color: ${(p) => (p.active ? p.theme.colors.primary.main : p.theme.colors.text.primary)};\n`;\n\n/**\n * Displays left side bar\n */\nconst SideBar = ({ location, isOpen, sideBarRef }) => {\n  const [{ auth }] = useStore();\n\n  const isAuthUsersProfilePage = auth.user.username === location.pathname.substring(1);\n\n  return (\n    <Root isOpen={isOpen} ref={sideBarRef}>\n      <User exact to={generatePath(Routes.USER_PROFILE, { username: auth.user.username })} activeClassName=\"selected\">\n        <Avatar image={auth.user.image} size={20} />\n\n        <Spacing left=\"xxs\">\n          <FullName active={isAuthUsersProfilePage}>{auth.user.fullName}</FullName>\n        </Spacing>\n      </User>\n\n      <Spacing top=\"sm\" />\n\n      <Navigation />\n    </Root>\n  );\n};\n\nSideBar.propTypes = {\n  location: PropTypes.object.isRequired,\n  isOpen: PropTypes.bool.isRequired,\n};\n\nexport default withRouter(SideBar);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { matchPath } from 'react-router';\nimport { generatePath } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\n\nimport { Loading } from 'components/Loading';\nimport { H3, A } from 'components/Text';\nimport { Spacing } from 'components/Layout';\nimport Avatar from 'components/Avatar';\n\nimport { useStore } from 'store';\n\nimport { USER_SUGGESTIONS } from 'graphql/user';\n\nimport { USER_SUGGESTIONS_WIDTH, HEADER_HEIGHT } from 'constants/Layout';\n\nimport * as Routes from 'routes';\n\nconst Root = styled.div`\n  display: none;\n  background-color: ${(p) => p.theme.colors.white};\n  border: 1px solid ${(p) => p.theme.colors.border.main};\n  position: sticky;\n  top: ${HEADER_HEIGHT + 40}px;\n  right: 0;\n  height: 100%;\n  width: ${USER_SUGGESTIONS_WIDTH}px;\n  padding: ${(p) => p.theme.spacing.sm};\n  border-radius: ${(p) => p.theme.radius.sm};\n\n  @media (min-width: ${(p) => p.theme.screen.md}) {\n    display: block;\n  }\n`;\n\nconst List = styled.ul`\n  padding: 0;\n  padding-top: ${(p) => p.theme.spacing.xs};\n`;\n\nconst ListItem = styled.li`\n  list-style-type: none;\n  display: flex;\n  flex-direction: row;\n  margin-bottom: ${(p) => p.theme.spacing.sm};\n\n  &:last-child {\n    margin-bottom: 0;\n  }\n`;\n\nconst FullName = styled.div`\n  font-weight: ${(p) => p.theme.font.weight.bold};\n  color: ${(p) => (p.active ? p.theme.colors.primary.main : p.theme.colors.text.primary)};\n`;\n\nconst UserName = styled.div`\n  color: ${(p) => p.theme.colors.text.hint};\n`;\n\n/**\n * Displays user suggestions\n */\nconst UserSuggestions = ({ pathname }) => {\n  const [{ auth }] = useStore();\n  const { data, loading } = useQuery(USER_SUGGESTIONS, {\n    variables: { userId: auth.user.id },\n  });\n\n  const hideUserSuggestions = matchPath(pathname, {\n    path: [Routes.MESSAGES, Routes.PEOPLE, Routes.DISCOUNTS, Routes.USER_PROFILE],\n  });\n\n  if (hideUserSuggestions) return null;\n\n  if (loading) {\n    return (\n      <Root>\n        <Loading />\n      </Root>\n    );\n  }\n\n  if (!data.suggestPeople.length > 0) {\n    return null;\n  }\n\n  return (\n    <Root>\n      <H3>Suggestions For You</H3>\n\n      <List>\n        {data.suggestPeople.map((user) => {\n          if (!user.username) return null;\n\n          return (\n            <ListItem key={user.id}>\n              <A\n                to={generatePath(Routes.USER_PROFILE, {\n                  username: user.username,\n                })}\n              >\n                <Avatar image={user.image} />\n              </A>\n\n              <Spacing left=\"xs\">\n                <A\n                  to={generatePath(Routes.USER_PROFILE, {\n                    username: user.username,\n                  })}\n                >\n                  <FullName>{user.fullName}</FullName>\n                  <UserName>@{user.username}</UserName>\n                </A>\n              </Spacing>\n            </ListItem>\n          );\n        })}\n      </List>\n    </Root>\n  );\n};\n\nUserSuggestions.propTypes = {\n  pathname: PropTypes.string.isRequired,\n};\n\nexport default UserSuggestions;\n","import { gql } from '@apollo/client';\n\n/**\n * Creates a comment\n */\nexport const CREATE_COMMENT = gql`\n  mutation($input: CreateCommentInput!) {\n    createComment(input: $input) {\n      id\n    }\n  }\n`;\n\n/**\n * Deletes a comment\n */\nexport const DELETE_COMMENT = gql`\n  mutation($input: DeleteCommentInput!) {\n    deleteComment(input: $input) {\n      id\n    }\n  }\n`;\n","/**\n * Available Notification types\n */\n\nexport const NotificationType = {\n  LIKE: 'LIKE',\n  FOLLOW: 'FOLLOW',\n  COMMENT: 'COMMENT',\n};\n","import { useApolloClient } from '@apollo/client';\nimport { CREATE_NOTIFICATION, DELETE_NOTIFICATION } from 'graphql/notification';\nimport { useStore } from 'store';\n\n/**\n * React hook that Creates or Deletes a notification after like, follow or comment\n */\nexport const useNotifications = () => {\n  const [{ auth }] = useStore();\n\n  const client = useApolloClient();\n\n  /**\n   * Helper function for mutation\n   */\n  const mutate = async (mutation, variables) => {\n    try {\n      return await client.mutate({\n        mutation,\n        variables: { input: { ...variables } },\n      });\n    } catch (error) {\n      console.error('Error while mutating a notification', error);\n    }\n  };\n\n  /**\n   * Creates a notification\n   */\n  const create = ({ user, postId, notificationType, notificationTypeId }) => {\n    return mutate(CREATE_NOTIFICATION, {\n      authorId: auth.user.id,\n      userId: user.id,\n      postId,\n      notificationType,\n      notificationTypeId,\n    });\n  };\n\n  /**\n   * Removes a notification\n   */\n  const remove = ({ notificationId }) => mutate(DELETE_NOTIFICATION, { id: notificationId });\n\n  /**\n   * Checks if user has already a notification and based on that Creates or Deletes a notification\n   */\n  const toggle = ({ user, postId, notificationType, notificationTypeId, hasDone }) => {\n    const type = notificationType.toLowerCase();\n    const isNotified = user.notifications.find((n) => n[type] && hasDone && n[type].id === hasDone.id);\n    const notificationId = isNotified ? isNotified.id : null;\n    const operation = notificationId ? 'delete' : 'create';\n    const options = {\n      create: {\n        mutation: CREATE_NOTIFICATION,\n        variables: {\n          authorId: auth.user.id,\n          userId: user.id,\n          postId,\n          notificationType,\n          notificationTypeId,\n        },\n      },\n      delete: {\n        mutation: DELETE_NOTIFICATION,\n        variables: { id: notificationId },\n      },\n    };\n\n    return mutate(options[operation].mutation, options[operation].variables);\n  };\n\n  return { create, remove, toggle };\n};\n","import React, { useState, useRef, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { useMutation } from '@apollo/client';\n\nimport { GET_AUTH_USER, GET_USER } from 'graphql/user';\nimport { GET_POST, GET_POSTS, GET_FOLLOWED_POSTS } from 'graphql/post';\nimport { CREATE_COMMENT } from 'graphql/comment';\n\nimport { Textarea, Button } from './Form';\n\nimport { NotificationType } from 'constants/NotificationType';\n\nimport { useNotifications } from 'hooks/useNotifications';\n\nimport { useStore } from 'store';\n\nconst Form = styled.form`\n  display: flex;\n  flex-direction: row;\n  align-items: flex-start;\n  justify-content: flex-start;\n`;\n\n/**\n * Creates a comment for a post\n */\nconst CreateComment = ({ post, focus }) => {\n  const [{ auth }] = useStore();\n  const notification = useNotifications();\n  const [comment, setComment] = useState('');\n  const buttonEl = useRef(null);\n  const TextareaEl = useRef(false);\n  const [createComment, { loading }] = useMutation(CREATE_COMMENT, {\n    refetchQueries: [\n      { query: GET_FOLLOWED_POSTS, variables: { userId: auth.user.id } },\n      { query: GET_USER, variables: { username: auth.user.username } },\n      { query: GET_AUTH_USER },\n      { query: GET_POSTS, variables: { authUserId: auth.user.id } },\n      { query: GET_POST, variables: { id: post.id } },\n    ],\n  });\n\n  useEffect(() => {\n    focus && TextareaEl.current.focus();\n  }, [focus]);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const { data } = await createComment({\n      variables: { input: { comment, author: auth.user.id, postId: post.id } },\n    });\n    setComment('');\n\n    // Create notification on comment\n    if (auth.user.id !== post.author.id) {\n      notification.create({\n        user: post.author,\n        postId: post.id,\n        notificationType: NotificationType.COMMENT,\n        notificationTypeId: data.createComment.id,\n      });\n    }\n  };\n\n  const onEnterPress = (e) => {\n    if (e.keyCode === 13) {\n      e.preventDefault();\n      buttonEl.current.click();\n    }\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Textarea\n        onChange={(e) => setComment(e.target.value)}\n        value={comment}\n        placeholder=\"Add a comment...\"\n        onKeyDown={onEnterPress}\n        ref={TextareaEl}\n      />\n\n      <Button\n        type=\"submit\"\n        color={comment ? 'primary.main' : 'grey[500]'}\n        weight=\"bold\"\n        text\n        ref={buttonEl}\n        disabled={!comment || loading}\n      >\n        Post\n      </Button>\n    </Form>\n  );\n};\n\nCreateComment.propTypes = {\n  post: PropTypes.object.isRequired,\n  focus: PropTypes.bool,\n};\n\nexport default CreateComment;\n","import { gql } from '@apollo/client';\n\n/**\n * Creates a following between two users\n */\nexport const CREATE_FOLLOW = gql`\n  mutation($input: CreateFollowInput!) {\n    createFollow(input: $input) {\n      id\n    }\n  }\n`;\n\n/**\n * deletes a following\n */\nexport const DELETE_FOLLOW = gql`\n  mutation($input: DeleteFollowInput!) {\n    deleteFollow(input: $input) {\n      id\n    }\n  }\n`;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useMutation } from '@apollo/client';\nimport styled from 'styled-components';\n\nimport { GET_FOLLOWED_POSTS, GET_POSTS } from 'graphql/post';\nimport { GET_AUTH_USER, GET_USER } from 'graphql/user';\nimport { CREATE_FOLLOW, DELETE_FOLLOW } from 'graphql/follow';\n\nimport { NotificationType } from 'constants/NotificationType';\nimport { HOME_PAGE_POSTS_LIMIT } from 'constants/DataLimit';\n\nimport { useStore } from 'store';\n\nimport { useNotifications } from 'hooks/useNotifications';\n\nconst Button = styled.button`\n  height: 27px;\n  cursor: pointer;\n  outline: none;\n  font-size: ${(p) => p.theme.font.size.xxs};\n  font-weight: ${(p) => p.theme.font.weight.bold};\n  transition: background-color 0.2s, border-color 0.1s;\n  border-radius: ${(p) => p.theme.radius.sm};\n  color: ${(p) => !p.isFollowing && p.theme.colors.white};\n  padding: ${(p) => p.theme.spacing.xxs} ${(p) => p.theme.spacing.xs};\n  border: ${(p) => (p.isFollowing ? `1px solid ${p.theme.colors.border.main}` : '0')};\n  background-color: ${(p) => (p.isFollowing ? 'transparent' : p.theme.colors.button)};\n\n  &:hover {\n    border-color: ${(p) => p.theme.colors.border.dark};\n  }\n`;\n\n/**\n * Component for rendering follow button\n */\nconst Follow = ({ user }) => {\n  const [loading, setLoading] = useState(false);\n  const [{ auth }] = useStore();\n  const notification = useNotifications();\n  const isFollowing = auth.user.following.find((f) => f.user === user.id);\n  // Detect which mutation to use\n  const operation = isFollowing ? 'delete' : 'create';\n  const options = {\n    create: {\n      mutation: CREATE_FOLLOW,\n      variables: { userId: user.id, followerId: auth.user.id },\n    },\n    delete: {\n      mutation: DELETE_FOLLOW,\n      variables: { id: isFollowing ? isFollowing.id : null },\n    },\n  };\n  const [mutate] = useMutation(options[operation].mutation, {\n    refetchQueries: [\n      { query: GET_AUTH_USER },\n      { query: GET_POSTS, variables: { authUserId: auth.user.id } },\n      {\n        query: GET_FOLLOWED_POSTS,\n        variables: {\n          userId: auth.user.id,\n          skip: 0,\n          limit: HOME_PAGE_POSTS_LIMIT,\n        },\n      },\n      { query: GET_USER, variables: { username: user.username } },\n    ],\n  });\n\n  const handleClickFollow = async () => {\n    setLoading(true);\n    const { data } = await mutate({\n      variables: { input: { ...options[operation].variables } },\n    });\n\n    // Create or Delete mutation for follow\n    if (auth.user.id === user.id) return setLoading(false);\n    await notification.toggle({\n      user,\n      hasDone: isFollowing,\n      notificationType: NotificationType.FOLLOW,\n      notificationTypeId: data.createFollow ? data.createFollow.id : null,\n    });\n    setLoading(false);\n  };\n\n  return (\n    <Button onClick={handleClickFollow} disabled={loading} isFollowing={isFollowing}>\n      {isFollowing ? 'Following' : 'Follow'}\n    </Button>\n  );\n};\n\nFollow.propTypes = {\n  user: PropTypes.object.isRequired,\n};\n\nexport default Follow;\n","/**\n * Data limit constants for infinite scroll\n */\n\nexport const HOME_PAGE_POSTS_LIMIT = 6;\n\nexport const EXPLORE_PAGE_POSTS_LIMIT = 15;\n\nexport const PEOPLE_PAGE_USERS_LIMIT = 15;\n\nexport const NOTIFICATIONS_PAGE_NOTIFICATION_LIMIT = 50;\n\nexport const PROFILE_PAGE_POSTS_LIMIT = 6;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { generatePath } from 'react-router-dom';\n\nimport { A } from 'components/Text';\nimport Follow from 'components/Follow';\nimport { Spacing } from 'components/Layout';\nimport Avatar from 'components/Avatar';\n\nimport * as Routes from 'routes';\n\nimport { useStore } from 'store';\n\nconst Root = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n  border-bottom: 1px solid ${(p) => p.theme.colors.border.main};\n  padding: ${(p) => p.theme.spacing.xs};\n  margin-bottom: ${(p) => p.theme.spacing.xxs};\n`;\n\nconst Author = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  margin-right: ${(p) => p.theme.spacing.sm};\n`;\n\nconst UserName = styled.div`\n  max-width: 100%;\n  font-size: ${(p) => p.theme.font.size.xs};\n  font-weight: ${(p) => p.theme.font.weight.bold};\n`;\n\n/**\n * Author info for PostPopup component\n */\nconst PostPopupInfo = ({ author }) => {\n  const [{ auth }] = useStore();\n\n  return (\n    <Root>\n      <Author>\n        <A to={generatePath(Routes.USER_PROFILE, { username: author.username })}>\n          <Avatar image={author.image} />\n        </A>\n\n        <Spacing left=\"xs\" inline>\n          <A\n            to={generatePath(Routes.USER_PROFILE, {\n              username: author.username,\n            })}\n          >\n            <UserName>{author.fullName}</UserName>\n          </A>\n        </Spacing>\n      </Author>\n\n      {auth.user.id !== author.id && <Follow user={author} />}\n    </Root>\n  );\n};\n\nPostPopupInfo.propTypes = {\n  author: PropTypes.object.isRequired,\n};\n\nexport default PostPopupInfo;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { generatePath } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\n\nimport { CloseIcon } from 'components/icons';\nimport { A } from './Text';\nimport { Spacing } from './Layout';\nimport Avatar from 'components/Avatar';\n\nimport { GET_AUTH_USER, GET_USER } from 'graphql/user';\nimport { DELETE_COMMENT } from 'graphql/comment';\nimport { GET_POST, GET_POSTS, GET_FOLLOWED_POSTS } from 'graphql/post';\n\nimport { useNotifications } from '../hooks/useNotifications';\n\nimport { useStore } from 'store';\n\nimport * as Routes from 'routes';\n\nconst DeleteButton = styled.button`\n  cursor: pointer;\n  display: none;\n  background-color: transparent;\n  border: 0;\n  outline: 0;\n  position: absolute;\n  right: 7px;\n  top: 6px;\n`;\n\nconst Root = styled.div`\n  display: flex;\n  flex-direction: row;\n  padding: ${(p) => p.theme.spacing.xxs} 0;\n  font-size: ${(p) => p.theme.font.size.xxs};\n\n  &:hover ${DeleteButton} {\n    display: block;\n  }\n`;\n\nconst UserName = styled.div`\n  color: ${(p) => p.theme.colors.primary.main};\n  font-weight: ${(p) => p.theme.font.weight.bold};\n`;\n\nconst CommentSection = styled.div`\n  position: relative;\n  word-wrap: break-word;\n  overflow: hidden;\n  padding: 0 ${(p) => p.theme.spacing.lg} ${(p) => p.theme.spacing.xxs} ${(p) => p.theme.spacing.xs};\n  background-color: ${(p) => p.theme.colors.grey[100]};\n  border-radius: ${(p) => p.theme.radius.lg};\n  margin-left: ${(p) => p.theme.spacing.xxs};\n  color: ${(p) => p.theme.colors.text.main};\n`;\n\n/**\n * Renders comments UI\n */\nconst Comment = ({ comment, postId, postAuthor }) => {\n  const [{ auth }] = useStore();\n  const notification = useNotifications();\n  const [deleteComment] = useMutation(DELETE_COMMENT, {\n    refetchQueries: [\n      { query: GET_FOLLOWED_POSTS, variables: { userId: auth.user.id } },\n      { query: GET_USER, variables: { username: comment.author.username } },\n      { query: GET_AUTH_USER },\n      { query: GET_POSTS, variables: { authUserId: auth.user.id } },\n      { query: GET_POST, variables: { id: postId } },\n    ],\n  });\n\n  const handleDeleteComment = async () => {\n    await deleteComment({ variables: { input: { id: comment.id } } });\n\n    // Delete notification after comment deletion\n    if (auth.user.id !== postAuthor.id) {\n      const isNotified = postAuthor.notifications.find((n) => n.comment && n.comment.id === comment.id);\n      notification.remove({\n        notificationId: isNotified.id,\n      });\n    }\n  };\n\n  return (\n    <Root>\n      <A\n        to={generatePath(Routes.USER_PROFILE, {\n          username: comment.author.username,\n        })}\n      >\n        <Avatar image={comment.author.image} />\n      </A>\n\n      <CommentSection>\n        {comment.author.id === auth.user.id && (\n          <DeleteButton onClick={handleDeleteComment}>\n            <CloseIcon width=\"10\" />\n          </DeleteButton>\n        )}\n\n        <Spacing top=\"xxs\" />\n\n        <Spacing inline right=\"xxs\">\n          <A\n            to={generatePath(Routes.USER_PROFILE, {\n              username: comment.author.username,\n            })}\n          >\n            <UserName>{comment.author.fullName}</UserName>\n          </A>\n        </Spacing>\n\n        {comment.comment}\n      </CommentSection>\n    </Root>\n  );\n};\n\nComment.propTypes = {\n  comment: PropTypes.object.isRequired,\n  postId: PropTypes.string.isRequired,\n  postAuthor: PropTypes.object.isRequired,\n};\n\nexport default Comment;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport Comment from 'components/Comment';\nimport { Spacing } from 'components/Layout';\n\nconst Root = styled.div`\n  height: 100%;\n  width: 100%;\n  overflow: hidden;\n  padding-bottom: ${(p) => p.theme.spacing.sm};\n\n  @media (min-width: ${(p) => p.theme.screen.md}) {\n    max-height: 400px;\n  }\n`;\n\nconst Comments = styled.div`\n  max-height: ${(p) => (p.usedInModal ? '100%' : '350px')};\n  width: 100%;\n  overflow-y: scroll;\n  box-sizing: content-box;\n  padding: 0 ${(p) => p.theme.spacing.xs};\n`;\n\n/**\n * Comments for PostPopup component\n */\nconst PostPopupComments = ({ comments, postId, postAuthor, usedInModal }) => (\n  <Root usedInModal={usedInModal}>\n    <Spacing top=\"xs\" />\n\n    <Comments usedInModal={usedInModal}>\n      {comments.map((comment) => (\n        <Comment key={comment.id} comment={comment} postId={postId} postAuthor={postAuthor} />\n      ))}\n    </Comments>\n  </Root>\n);\n\nPostPopupComments.propTypes = {\n  comments: PropTypes.array.isRequired,\n  postId: PropTypes.string.isRequired,\n  postAuthor: PropTypes.object.isRequired,\n};\n\nexport default PostPopupComments;\n","import { gql } from '@apollo/client';\n\n/**\n * Creates a like\n */\nexport const CREATE_LIKE = gql`\n  mutation($input: CreateLikeInput!) {\n    createLike(input: $input) {\n      id\n    }\n  }\n`;\n\n/**\n * Deletes a like\n */\nexport const DELETE_LIKE = gql`\n  mutation($input: DeleteLikeInput!) {\n    deleteLike(input: $input) {\n      id\n    }\n  }\n`;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { useMutation } from '@apollo/client';\n\nimport { LikeIcon } from 'components/icons';\nimport { Spacing } from './Layout';\nimport { Button } from './Form';\n\nimport { GET_FOLLOWED_POSTS, GET_POSTS } from 'graphql/post';\nimport { GET_AUTH_USER } from 'graphql/user';\nimport { CREATE_LIKE, DELETE_LIKE } from 'graphql/like';\n\nimport { NotificationType } from 'constants/NotificationType';\n\nimport { useNotifications } from 'hooks/useNotifications';\n\nimport { useStore } from 'store';\n\nconst StyledButton = styled(Button)`\n  padding: ${(p) => p.theme.spacing.xs} 0;\n`;\n\n/**\n * Component for rendering Like button\n */\nconst Like = ({ postId, user, likes, withText, fullWidth }) => {\n  const [loading, setLoading] = useState(false);\n  const [{ auth }] = useStore();\n  const notification = useNotifications();\n  // Detect which mutation to use\n  const hasLiked = likes.find((l) => l.user === auth.user.id && l.post === postId);\n  const operation = hasLiked ? 'delete' : 'create';\n  const options = {\n    create: {\n      mutation: CREATE_LIKE,\n      variables: { postId, userId: auth.user.id },\n    },\n    delete: {\n      mutation: DELETE_LIKE,\n      variables: { id: hasLiked ? hasLiked.id : null },\n    },\n  };\n  const [mutate] = useMutation(options[operation].mutation, {\n    refetchQueries: [\n      { query: GET_AUTH_USER },\n      { query: GET_POSTS, variables: { authUserId: auth.user.id } },\n      { query: GET_FOLLOWED_POSTS, variables: { userId: auth.user.id } },\n    ],\n  });\n\n  const handleButtonClick = async () => {\n    setLoading(true);\n    const { data } = await mutate({\n      variables: { input: { ...options[operation].variables } },\n    });\n\n    // Create or delete notification for like\n    if (auth.user.id === user.id) return setLoading(false);\n    await notification.toggle({\n      user,\n      postId,\n      hasDone: hasLiked,\n      notificationType: NotificationType.LIKE,\n      notificationTypeId: data.createLike ? data.createLike.id : null,\n    });\n    setLoading(false);\n  };\n\n  return (\n    <StyledButton\n      fullWidth={fullWidth && fullWidth}\n      disabled={loading}\n      text\n      onClick={() => handleButtonClick(mutate)}\n      color={hasLiked && 'primary.main'}\n    >\n      <LikeIcon color={hasLiked && 'primary.main'} />\n      <Spacing inline left=\"xxs\" />\n      {withText && <b>Like</b>}\n    </StyledButton>\n  );\n};\n\nLike.propTypes = {\n  postId: PropTypes.string.isRequired,\n  user: PropTypes.object.isRequired,\n  likes: PropTypes.array,\n  withText: PropTypes.bool,\n  fullWidth: PropTypes.bool,\n};\n\nexport default Like;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport { Spacing } from 'components/Layout';\nimport Like from 'components/Like';\nimport { PostCommentIcon } from 'components/icons';\n\nconst Root = styled.div`\n  border-top: 1px solid ${(p) => p.theme.colors.border.main};\n  border-bottom: 1px solid ${(p) => p.theme.colors.border.main};\n  padding-bottom: ${(p) => p.theme.spacing.xs};\n`;\n\nconst Icons = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  margin-left: ${(p) => p.theme.spacing.sm};\n`;\n\nconst Count = styled.div`\n  font-size: ${(p) => p.theme.font.size.xxs};\n  padding-left: ${(p) => p.theme.spacing.sm};\n`;\n\n/**\n * Options for PostPopup component\n */\nconst PostPopupOptions = ({ postId, postAuthor, postLikes }) => {\n  return (\n    <Root>\n      <Icons>\n        <Like postId={postId} user={postAuthor} likes={postLikes} />\n        <Spacing right=\"sm\" />\n        <PostCommentIcon />\n      </Icons>\n\n      <Count>{postLikes.length} likes</Count>\n    </Root>\n  );\n};\n\nPostPopupOptions.propTypes = {\n  postId: PropTypes.string.isRequired,\n  postAuthor: PropTypes.object.isRequired,\n  postLikes: PropTypes.array.isRequired,\n};\n\nexport default PostPopupOptions;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { useQuery } from '@apollo/client';\n\nimport { Loading } from 'components/Loading';\nimport { CloseIcon } from 'components/icons';\nimport CreateComment from 'components/CreateComment';\nimport { Spacing } from 'components/Layout';\nimport NotFound from 'components/NotFound';\nimport Head from 'components/Head';\nimport PostPopupInfo from './PostPopupInfo';\nimport PostPopupComments from './PostPopupComments';\nimport PostPopupOptions from './PostPopupOptions';\n\nimport { GET_POST } from 'graphql/post';\n\nconst Root = styled.div`\n  margin: 0 auto;\n  margin: ${(p) => !p.usedInModal && p.theme.spacing.lg} 0;\n  box-shadow: ${(p) => p.theme.shadows.sm};\n  border-radius: ${(p) => p.theme.radius.sm};\n  z-index: ${(p) => (p.usedInModal ? p.theme.zIndex.xl : 'inherit')};\n  overflow: hidden;\n  width: 100%;\n\n  @media (min-width: ${(p) => p.theme.screen.md}) {\n    width: auto;\n  }\n`;\n\nconst Container = styled.div`\n  max-height: ${(p) => (p.usedInModal ? '600px' : 'auto')};\n  overflow-y: ${(p) => (p.usedInModal ? 'auto' : 'inherit')};\n  max-width: 1300px;\n  background-color: ${(p) => p.theme.colors.white};\n  display: flex;\n  flex-direction: column;\n\n  @media (min-width: ${(p) => p.theme.screen.md}) {\n    flex-direction: ${(p) => (p.usedInModal ? 'row' : 'column')};\n    max-height: ${(p) => (p.usedInModal ? '600px' : 'auto')};\n    overflow-y: inherit;\n  }\n`;\n\nconst Left = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: ${(p) => (p.usedInModal ? 'center' : 'flex-start')};\n  justify-content: center;\n  background-color: ${(p) => p.theme.colors.black};\n  width: 100%;\n\n  @media (min-width: ${(p) => p.theme.screen.md}) {\n    max-width: 1000px;\n    min-width: 500px;\n    height: ${(p) => (p.usedInModal ? '600px' : 'auto')};\n  }\n`;\n\nconst Image = styled.img`\n  display: block;\n  max-width: 100%;\n  width: ${(p) => !p.usedInModal && '100%'};\n  max-height: ${(p) => (p.usedInModal ? '600px' : '100%')};\n`;\n\nconst Right = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  position: relative;\n  width: 100%;\n  background-color: ${(p) => p.theme.colors.white};\n\n  @media (min-width: ${(p) => p.theme.screen.md}) {\n    width: ${(p) => (p.usedInModal ? '360px' : '100%')};\n    min-width: 360px;\n  }\n`;\n\nconst CloseModal = styled.div`\n  display: block;\n  position: fixed;\n  right: 20px;\n  top: 15px;\n  cursor: pointer;\n`;\n\nconst Title = styled.div`\n  font-size: ${(p) => p.theme.font.size.xs};\n  border-bottom: 1px solid ${(p) => p.theme.colors.border.light};\n  padding: ${(p) => p.theme.spacing.xs};\n`;\n\n/**\n * Displays post with comments and options\n * Meant to be used in Modal or Page component\n */\nconst PostPopup = ({ id, closeModal, usedInModal }) => {\n  const { data, loading, error } = useQuery(GET_POST, {\n    variables: { id },\n  });\n\n  if (loading) return <Loading top=\"lg\" />;\n  if (error) return <NotFound />;\n\n  const post = data.getPost;\n\n  return (\n    <Root usedInModal={usedInModal}>\n      <Head title={post.title ? post.title : `${post.author.username}'s post`} />\n\n      {closeModal && (\n        <CloseModal onClick={closeModal}>\n          <CloseIcon width=\"16\" color=\"white\" />\n        </CloseModal>\n      )}\n\n      <Container usedInModal={usedInModal}>\n        <Left usedInModal={usedInModal}>\n          <Image src={post.image} usedInModal={usedInModal} />\n        </Left>\n\n        <Right usedInModal={usedInModal}>\n          <Spacing>\n            <PostPopupInfo author={post.author} />\n\n            {post.title && <Title>{post.title}</Title>}\n\n            <PostPopupComments\n              usedInModal={usedInModal}\n              comments={post.comments}\n              postId={post.id}\n              postAuthor={post.author}\n            />\n          </Spacing>\n\n          <Spacing>\n            <PostPopupOptions postId={post.id} postAuthor={post.author} postLikes={post.likes} />\n\n            <CreateComment post={post} />\n          </Spacing>\n        </Right>\n      </Container>\n    </Root>\n  );\n};\n\nPostPopup.propTypes = {\n  id: PropTypes.string.isRequired,\n  closeModal: PropTypes.func,\n  usedInModal: PropTypes.bool.isRequired,\n};\n\nPostPopup.defaultProps = {\n  usedInModal: true,\n};\n\nexport default withRouter(PostPopup);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { Button } from './Form';\nimport { Spacing } from './Layout';\n\nconst Root = styled.div`\n  margin: auto;\n  background-color: ${(p) => p.theme.colors.white};\n  padding: ${(p) => p.theme.spacing.sm};\n  border-radius: ${(p) => p.theme.radius.sm};\n  z-index: ${(p) => p.theme.zIndex.sm};\n`;\n\nconst ButtonContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-start;\n`;\n\n/**\n * Confirmation component, meant to be rendered inside Modal component\n */\nconst Confirm = ({ title, onCancel, onOk, cancelText, okText }) => (\n  <Root>\n    <div>{title}</div>\n\n    <Spacing top=\"md\" />\n\n    <ButtonContainer>\n      <Button onClick={onCancel}>{cancelText}</Button>\n\n      <Spacing left=\"xs\">\n        <Button color=\"red\" onClick={onOk}>\n          {okText}\n        </Button>\n      </Spacing>\n    </ButtonContainer>\n  </Root>\n);\n\nConfirm.propTypes = {\n  title: PropTypes.string.isRequired,\n  onCancel: PropTypes.func.isRequired,\n  onOk: PropTypes.func.isRequired,\n  cancelText: PropTypes.string.isRequired,\n  okText: PropTypes.string.isRequired,\n};\n\nConfirm.defaultProps = {\n  title: 'Do you really want to delete this item?',\n  cancelText: 'Cancel',\n  okText: 'Delete',\n};\n\nexport default Confirm;\n","import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nimport Confirm from './Confirm';\nimport { Overlay } from './Layout';\n\nconst Root = styled.div`\n  position: fixed;\n  top: ${(p) => p.theme.spacing.sm};\n  left: 0;\n  width: 100%;\n  height: 100%;\n  z-index: ${(p) => p.theme.zIndex.lg};\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n\n  @media (min-width: ${(p) => p.theme.screen.md}) {\n    align-items: center;\n    top: 0;\n  }\n`;\n\n/**\n * Main component for rendering Modals\n */\nconst Modal = ({ children, open, onClose, type, ...otherProps }) => {\n  if (!open) return null;\n\n  return (\n    <Root>\n      <Overlay onClick={onClose} />\n\n      {type === 'confirm' ? <Confirm {...otherProps} /> : children}\n    </Root>\n  );\n};\n\nModal.propTypes = {\n  children: PropTypes.node,\n  open: PropTypes.bool,\n  onClose: PropTypes.func.isRequired,\n  type: PropTypes.oneOf(['', 'confirm']),\n};\n\nexport default Modal;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { generatePath } from 'react-router-dom';\nimport styled from 'styled-components';\n\nimport { Button } from 'components/Form';\nimport Follow from 'components/Follow';\n\nimport { useStore } from 'store';\n\nimport * as Routes from 'routes';\n\nconst Root = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 400px;\n  background-color: ${(p) => p.theme.colors.white};\n  border-radius: ${(p) => p.theme.radius.sm};\n  z-index: ${(p) => p.theme.zIndex.lg};\n  box-shadow: ${(p) => p.theme.shadows.xl};\n`;\n\nconst FollowItem = styled.div`\n  padding: ${(p) => p.theme.spacing.sm} 0;\n  text-align: center;\n`;\n\nconst StyledButton = styled(Button)`\n  padding: ${(p) => p.theme.spacing.sm} 0;\n  text-align: center;\n  border-top: 1px solid ${(p) => p.theme.colors.border.main} !important;\n\n  &:first-child {\n    border-top: 0 !important ;\n  }\n\n  &:hover {\n    background-color: ${(p) => p.theme.colors.grey[100]};\n    color: ${(p) => p.theme.colors.text.primary};\n  }\n`;\n\n/**\n * Post Card options, meant to be used in PostCard components Modal\n */\nconst PostCardOption = ({ postId, author, closeOption, deletePost }) => {\n  const [{ auth }] = useStore();\n\n  const copyToClipboard = () => {\n    try {\n      navigator.clipboard.writeText(\n        `${process.env.REACT_APP_FRONTEND_URL}${generatePath(Routes.POST, {\n          id: postId,\n        })}`\n      );\n    } catch (error) {\n      console.error('Failed to read clipboard contents: ', error);\n    }\n\n    closeOption();\n  };\n\n  return (\n    <Root>\n      {auth.user.id !== author.id && (\n        <FollowItem>\n          <Follow user={author} />\n        </FollowItem>\n      )}\n\n      <StyledButton fullWidth text onClick={copyToClipboard}>\n        Copy link\n      </StyledButton>\n\n      {auth.user.id === author.id && (\n        <StyledButton fullWidth text onClick={deletePost}>\n          Delete post\n        </StyledButton>\n      )}\n\n      <StyledButton fullWidth onClick={closeOption} text>\n        Cancel\n      </StyledButton>\n    </Root>\n  );\n};\n\nPostCardOption.propTypes = {\n  postId: PropTypes.string.isRequired,\n  author: PropTypes.object.isRequired,\n  closeOption: PropTypes.func.isRequired,\n  deletePost: PropTypes.func.isRequired,\n};\n\nexport default PostCardOption;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { generatePath } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { useApolloClient } from '@apollo/client';\n\nimport Comment from 'components/Comment';\nimport CreateComment from 'components/CreateComment';\nimport Like from 'components/Like';\nimport { DotsIcon, PostCommentIcon } from 'components/icons';\nimport { Spacing } from 'components/Layout';\nimport { A, H3 } from 'components/Text';\nimport { Button } from 'components/Form';\nimport PostCardOption from 'components/PostCard/PostCardOption';\nimport Modal from 'components/Modal';\nimport Avatar from 'components/Avatar';\n\nimport { GET_FOLLOWED_POSTS, DELETE_POST } from 'graphql/post';\nimport { GET_AUTH_USER } from 'graphql/user';\nimport { GET_USER_POSTS } from 'graphql/user';\n\nimport { HOME_PAGE_POSTS_LIMIT, PROFILE_PAGE_POSTS_LIMIT } from 'constants/DataLimit';\n\nimport { useStore } from 'store';\n\nimport * as Routes from 'routes';\n\nimport { timeAgo } from 'utils/date';\n\nconst Root = styled.div`\n  width: 100%;\n  border-radius: ${(p) => p.theme.radius.sm};\n  padding-bottom: ${(p) => p.theme.spacing.xs};\n  background-color: ${(p) => p.theme.colors.white};\n  border: 1px solid ${(p) => p.theme.colors.border.main};\n`;\n\nconst TopRow = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: flex-start;\n  padding: ${(p) => p.theme.spacing.xs} ${(p) => p.theme.spacing.sm};\n`;\n\nconst CreatedAt = styled.div`\n  font-size: ${(p) => p.theme.font.size.xxs};\n  color: ${(p) => p.theme.colors.text.hint};\n  border-bottom: 1px solid ${(p) => p.theme.colors.text.secondary};\n  border: 0;\n  margin-top: 2px;\n`;\n\nconst Author = styled(A)`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`;\n\nconst Name = styled.span`\n  font-size: ${(p) => p.theme.font.size.xs};\n  font-weight: ${(p) => p.theme.font.weight.bold};\n  color: ${(p) => p.theme.colors.primary.main};\n`;\n\nconst Poster = styled.img`\n  display: block;\n  width: 100%;\n  max-height: 700px;\n  object-fit: cover;\n  cursor: pointer;\n  margin-bottom: ${(p) => p.theme.spacing.sm};\n`;\n\nconst Title = styled.div`\n  word-break: break-word;\n  white-space: pre-line;\n`;\n\nconst BottomRow = styled.div`\n  overflow: hidden;\n`;\n\nconst CountAndIcons = styled.div`\n  padding: 0 ${(p) => p.theme.spacing.sm};\n`;\n\nconst Count = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n  padding-bottom: ${(p) => p.theme.spacing.xs};\n  font-size: ${(p) => p.theme.font.size.xs};\n  color: ${(p) => p.theme.colors.text.secondary};\n`;\n\nconst Icons = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n  border-top: 1px solid ${(p) => p.theme.colors.border.main};\n`;\n\nconst Comments = styled.div`\n  padding: 0 ${(p) => p.theme.spacing.sm};\n`;\n\nconst StyledButton = styled(Button)`\n  padding: 0;\n  padding-left: 4px;\n  font-size: ${(p) => p.theme.font.size.xxs};\n`;\n\nconst CommentLine = styled.div`\n  margin-bottom: 5px;\n  border-top: 1px solid ${(p) => p.theme.colors.border.main};\n`;\n\n/**\n * Component for rendering user post\n */\nconst PostCard = ({ author, imagePublicId, comments, title, createdAt, image, likes, postId, openModal }) => {\n  const [{ auth }] = useStore();\n  const client = useApolloClient();\n  const [isCommentOpen, setIsCommentOpen] = useState(false);\n  const [isOptionOpen, setIsOptionOpen] = useState(false);\n\n  const toggleCreateComment = () => {\n    setIsCommentOpen(true);\n  };\n\n  const toggleComment = () => {\n    setIsCommentOpen(!isCommentOpen);\n  };\n\n  const closeOption = () => setIsOptionOpen(false);\n\n  const openOption = () => setIsOptionOpen(true);\n\n  const deletePost = async () => {\n    try {\n      await client.mutate({\n        mutation: DELETE_POST,\n        variables: { input: { id: postId, imagePublicId } },\n        refetchQueries: () => [\n          {\n            query: GET_FOLLOWED_POSTS,\n            variables: {\n              userId: auth.user.id,\n              skip: 0,\n              limit: HOME_PAGE_POSTS_LIMIT,\n            },\n          },\n          { query: GET_AUTH_USER },\n          {\n            query: GET_USER_POSTS,\n            variables: {\n              username: auth.user.username,\n              skip: 0,\n              limit: PROFILE_PAGE_POSTS_LIMIT,\n            },\n          },\n        ],\n      });\n    } catch (err) {}\n\n    setIsOptionOpen(false);\n  };\n\n  return (\n    <>\n      <Root>\n        <Modal onClose={closeOption} open={isOptionOpen}>\n          <PostCardOption postId={postId} closeOption={closeOption} author={author} deletePost={deletePost} />\n        </Modal>\n\n        <TopRow>\n          <Author\n            to={generatePath(Routes.USER_PROFILE, {\n              username: author.username,\n            })}\n          >\n            <Avatar image={author.image} />\n\n            <Spacing left=\"xs\">\n              <Name>{author.fullName}</Name>\n              <CreatedAt>{timeAgo(createdAt)}</CreatedAt>\n            </Spacing>\n          </Author>\n\n          <Button ghost onClick={openOption}>\n            <DotsIcon />\n          </Button>\n        </TopRow>\n\n        <Spacing left=\"sm\" bottom=\"sm\" top=\"xs\" right=\"sm\">\n          <Title>\n            <H3>{title}</H3>\n          </Title>\n        </Spacing>\n\n        {image && <Poster src={image} onClick={openModal} />}\n\n        <BottomRow>\n          <CountAndIcons>\n            <Count>\n              {likes.length} likes\n              <Spacing />\n              <StyledButton onClick={toggleComment} text>\n                {comments.length} comments\n              </StyledButton>\n            </Count>\n\n            <Icons>\n              <Like fullWidth withText user={author} postId={postId} likes={likes} />\n\n              <Button fullWidth text onClick={toggleCreateComment}>\n                <PostCommentIcon /> <Spacing inline left=\"xxs\" /> <b>Comment</b>\n              </Button>\n            </Icons>\n          </CountAndIcons>\n\n          {isCommentOpen && (\n            <>\n              <Spacing top=\"xs\">\n                <CommentLine />\n                <CreateComment post={{ id: postId, author }} focus={isCommentOpen} />\n              </Spacing>\n\n              {comments.length > 0 && <CommentLine />}\n\n              <Comments>\n                {comments.map((comment) => (\n                  <Comment key={comment.id} comment={comment} postId={postId} postAuthor={author} />\n                ))}\n              </Comments>\n            </>\n          )}\n        </BottomRow>\n      </Root>\n    </>\n  );\n};\n\nPostCard.propTypes = {\n  author: PropTypes.object.isRequired,\n  imagePublicId: PropTypes.string,\n  title: PropTypes.string.isRequired,\n  image: PropTypes.string,\n  likes: PropTypes.array.isRequired,\n  comments: PropTypes.array,\n  createdAt: PropTypes.string.isRequired,\n  postId: PropTypes.string.isRequired,\n  openModal: PropTypes.func.isRequired,\n};\n\nexport default PostCard;\n","import { useEffect, useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport { get, uniqBy, setWith, clone } from 'lodash';\n\n/**\n * Component that adds Infinite scroll functionality to UI\n */\nconst InfiniteScroll = ({ data, dataKey, fetchMore, variables, count, children }) => {\n  const handleScroll = useMemo(\n    () => async () => {\n      const loadMore = () => {\n        return fetchMore({\n          variables: { ...variables, skip: data.length },\n          updateQuery: (prev, { fetchMoreResult }) => {\n            const previousData = get(prev, dataKey);\n            const fetchMoreData = get(fetchMoreResult, dataKey);\n            return setWith(clone(prev), dataKey, uniqBy([...previousData, ...fetchMoreData], 'id'), clone);\n          },\n        });\n      };\n\n      const windowHeight = window.innerHeight;\n      const scrollTop = document.documentElement.scrollTop;\n      const offsetHeight = document.documentElement.offsetHeight;\n      const scrolled = windowHeight + scrollTop > offsetHeight - offsetHeight / 3;\n\n      // Stop event listener if all the data has been loaded\n      if (data.length >= count) {\n        window.removeEventListener('scroll', handleScroll);\n        return;\n      }\n\n      // Load more data if user has scrolled to bottom and if there's still data in db to display\n      if (scrolled) {\n        window.removeEventListener('scroll', handleScroll);\n        loadMore();\n      }\n    },\n    [count, data.length, dataKey, fetchMore, variables]\n  );\n\n  useEffect(() => {\n    window.addEventListener('scroll', handleScroll);\n\n    return () => window.removeEventListener('scroll', handleScroll);\n  }, [handleScroll]);\n\n  return children(data);\n};\n\nInfiniteScroll.propTypes = {\n  data: PropTypes.array.isRequired,\n  dataKey: PropTypes.string.isRequired,\n  count: PropTypes.number.isRequired,\n  fetchMore: PropTypes.func.isRequired,\n  variables: PropTypes.object.isRequired,\n  children: PropTypes.func.isRequired,\n};\n\nexport default InfiniteScroll;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  width: ${(p) => p.width && `${p.width}px`};\n  height: ${(p) => p.height && `${p.height}px`};\n  display: ${(p) => p.inline && `inline-block`};\n  margin-top: ${(p) => p.theme.spacing[p.top]};\n  margin-left: ${(p) => p.theme.spacing[p.left]};\n  margin-right: ${(p) => p.theme.spacing[p.right]};\n  margin-bottom: ${(p) => p.theme.spacing[p.bottom]};\n  background-color: ${(p) => p.theme.colors.grey[200]};\n  border-radius: ${(p) => (p.radius ? p.theme.radius[p.radius] : p.theme.radius.sm)};\n`;\n\n/**\n * Renders an UI block to inform a user, that content will be shown here after loading\n */\nconst Skeleton = ({ count, width, height, inline, top, right, bottom, left, radius }) => {\n  const loopSkeleton = () => {\n    let skeleton = [];\n    for (let i = 0; i < count; i++) {\n      skeleton.push(\n        <Container\n          key={i}\n          top={top}\n          left={left}\n          right={right}\n          width={width}\n          height={height}\n          inline={inline}\n          bottom={bottom}\n          radius={radius}\n        />\n      );\n    }\n    return skeleton;\n  };\n\n  return loopSkeleton();\n};\n\nSkeleton.propTypes = {\n  inline: PropTypes.bool,\n  count: PropTypes.number,\n  width: PropTypes.number,\n  left: PropTypes.string,\n  top: PropTypes.string,\n  right: PropTypes.string,\n  bottom: PropTypes.string,\n  height: PropTypes.number,\n};\n\nSkeleton.defaultProps = {\n  count: 1,\n};\n\nexport default Skeleton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport { Spacing } from 'components/Layout';\nimport { UploadImageIcon } from 'components/icons';\n\nconst Input = styled.input`\n  display: none;\n`;\n\nconst Label = styled.label`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  padding: 9px 14px;\n  cursor: pointer;\n  transition: background-color 0.1s;\n  font-weight: ${(p) => p.theme.font.weight.bold};\n  border-radius: ${(p) => p.theme.radius.lg};\n  background-color: ${(p) => p.theme.colors.grey[100]};\n  font-size: ${(p) => p.theme.font.size.xxs};\n\n  &:hover {\n    background-color: ${(p) => p.theme.colors.grey[300]};\n  }\n`;\n\n/**\n * Component for uploading post image\n */\nconst PostImageUpload = ({ handleChange, label }) => (\n  <>\n    <Input name=\"image\" onChange={handleChange} type=\"file\" id=\"post-image\" accept=\"image/x-png,image/jpeg\" />\n\n    <Label htmlFor=\"post-image\">\n      <UploadImageIcon />\n\n      {label && <Spacing left=\"xs\">{label}</Spacing>}\n    </Label>\n  </>\n);\n\nPostImageUpload.propTypes = {\n  handleChange: PropTypes.func.isRequired,\n  label: PropTypes.string,\n};\n\nexport default PostImageUpload;\n","import { useStore } from 'store';\nimport { SET_MESSAGE } from 'store/message';\nimport { MessageType } from 'constants/MessageType';\n\n/**\n * React hook for dispatching global messages\n */\nexport const useGlobalMessage = () => {\n  const [, dispatch] = useStore();\n\n  const dispatchAction = (text, messageType, autoClose) => {\n    dispatch({\n      type: SET_MESSAGE,\n      payload: {\n        type: messageType,\n        text: text,\n        autoClose,\n      },\n    });\n  };\n\n  const success = (text, autoClose) => dispatchAction(text, MessageType.SUCCESS, autoClose);\n\n  const info = (text, autoClose) => dispatchAction(text, MessageType.INFO, autoClose);\n\n  const warning = (text, autoClose) => dispatchAction(text, MessageType.WARNING, autoClose);\n\n  const error = (text, autoClose) => dispatchAction(text, MessageType.ERROR, autoClose);\n\n  return { success, info, warning, error };\n};\n","import React, { useState } from 'react';\nimport { useMutation } from '@apollo/client';\nimport styled from 'styled-components';\n\nimport { Spacing, Overlay, Container } from 'components/Layout';\nimport { Error } from 'components/Text';\nimport { Button } from 'components/Form';\nimport Avatar from 'components/Avatar';\n\nimport PostImageUpload from 'pages/Home/PostImageUpload';\n\nimport { GET_FOLLOWED_POSTS, CREATE_POST } from 'graphql/post';\nimport { GET_AUTH_USER, GET_USER_POSTS } from 'graphql/user';\n\nimport { useStore } from 'store';\n\nimport { PROFILE_PAGE_POSTS_LIMIT } from 'constants/DataLimit';\nimport { HOME_PAGE_POSTS_LIMIT } from 'constants/DataLimit';\nimport { MAX_POST_IMAGE_SIZE } from 'constants/ImageSize';\n\nimport { useGlobalMessage } from 'hooks/useGlobalMessage';\n\nconst Root = styled(Container)`\n  border: 0;\n  border: 1px solid ${(p) => p.theme.colors.border.main};\n`;\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  padding: ${(p) => p.theme.spacing.sm} 0;\n`;\n\nconst Textarea = styled.textarea`\n  width: 100%;\n  margin: 0 ${(p) => p.theme.spacing.xs};\n  padding-left: ${(p) => p.theme.spacing.sm};\n  padding-top: ${(p) => p.theme.spacing.xs};\n  border: 0;\n  outline: none;\n  resize: none;\n  transition: 0.1s ease-out;\n  height: ${(p) => (p.focus ? '80px' : '40px')};\n  font-size: ${(p) => p.theme.font.size.xs};\n  background-color: ${(p) => p.theme.colors.grey[100]};\n  border-radius: ${(p) => p.theme.radius.md};\n`;\n\nconst ImagePreviewContainer = styled.div`\n  width: 150px;\n  height: 150px;\n  overflow: hidden;\n  flex-shrink: 0;\n  box-shadow: ${(p) => p.theme.shadows.sm};\n`;\n\nconst ImagePreview = styled.img`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n`;\n\nconst Options = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  border-top: 1px solid ${(p) => p.theme.colors.border.main};\n  padding: ${(p) => p.theme.spacing.sm} 0;\n`;\n\nconst Buttons = styled.div`\n  display: flex;\n  flex-direction: row;\n`;\n\n/**\n * Component for creating a post\n */\nconst CreatePost = () => {\n  const [{ auth }] = useStore();\n  const [title, setTitle] = useState('');\n  const [image, setImage] = useState('');\n  const [isFocused, setIsFocused] = useState(false);\n  const [error, setError] = useState('');\n  const [apiError, setApiError] = useState(false);\n  const message = useGlobalMessage();\n  const [createPost, { loading }] = useMutation(CREATE_POST, {\n    refetchQueries: [\n      {\n        query: GET_FOLLOWED_POSTS,\n        variables: {\n          userId: auth.user.id,\n          skip: 0,\n          limit: HOME_PAGE_POSTS_LIMIT,\n        },\n      },\n      { query: GET_AUTH_USER },\n      {\n        query: GET_USER_POSTS,\n        variables: {\n          username: auth.user.username,\n          skip: 0,\n          limit: PROFILE_PAGE_POSTS_LIMIT,\n        },\n      },\n    ],\n  });\n\n  const handleReset = () => {\n    setTitle('');\n    setImage('');\n    setIsFocused(false);\n    setError('');\n    setApiError(false);\n  };\n\n  const handleOnFocus = () => setIsFocused(true);\n\n  const handlePostImageUpload = (e) => {\n    const file = e.target.files[0];\n\n    if (!file) return;\n\n    if (file.size >= MAX_POST_IMAGE_SIZE) {\n      message.error(`File size should be less then ${MAX_POST_IMAGE_SIZE / 1000000}MB`);\n      return;\n    }\n\n    setImage(file);\n\n    setIsFocused(true);\n    e.target.value = null;\n  };\n\n  const handleTitleChange = (e) => setTitle(e.target.value);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      await createPost({\n        variables: { input: { title, image, authorId: auth.user.id } },\n      });\n      handleReset();\n    } catch (error) {\n      setApiError(true);\n    }\n  };\n\n  const isShareDisabled = loading || (!loading && !image && !title);\n\n  return (\n    <>\n      {isFocused && <Overlay onClick={handleReset} />}\n\n      <Root zIndex={isFocused ? 'md' : 'xs'} color=\"white\" radius=\"sm\" padding=\"sm\">\n        <form onSubmit={handleSubmit}>\n          <Wrapper>\n            <Avatar image={auth.user.image} size={40} />\n\n            <Textarea\n              type=\"textarea\"\n              name=\"title\"\n              focus={isFocused}\n              value={title}\n              onFocus={handleOnFocus}\n              onChange={handleTitleChange}\n              placeholder=\"Add a post\"\n            />\n\n            {!isFocused && <PostImageUpload handleChange={handlePostImageUpload} />}\n          </Wrapper>\n\n          {image && (\n            <Spacing bottom=\"sm\">\n              <ImagePreviewContainer>\n                <ImagePreview src={URL.createObjectURL(image)} />\n              </ImagePreviewContainer>\n            </Spacing>\n          )}\n\n          {isFocused && (\n            <Options>\n              <PostImageUpload label=\"Photo\" handleChange={handlePostImageUpload} />\n\n              <Buttons>\n                <Button text type=\"button\" onClick={handleReset}>\n                  Cancel\n                </Button>\n                <Button disabled={isShareDisabled} type=\"submit\">\n                  Share\n                </Button>\n              </Buttons>\n            </Options>\n          )}\n\n          {apiError ||\n            (error && (\n              <Spacing top=\"xs\" bottom=\"sm\">\n                <Error size=\"xs\">{apiError ? 'Something went wrong, please try again.' : error}</Error>\n              </Spacing>\n            ))}\n        </form>\n      </Root>\n    </>\n  );\n};\n\nexport default CreatePost;\n","/**\n * Maximum image size constants when uploading\n */\n\nexport const MAX_POST_IMAGE_SIZE = 3000000;\n\nexport const MAX_USER_COVER_IMAGE_SIZE = 5000000;\n\nexport const MAX_USER_PROFILE_IMAGE_SIZE = 2000000;\n","import React, { useState, Fragment } from 'react';\nimport styled from 'styled-components';\nimport { generatePath } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\n\nimport { A } from 'components/Text';\nimport PostPopup from 'components/PostPopup';\nimport Modal from 'components/Modal';\nimport PostCard from 'components/PostCard';\nimport { Spacing, Container } from 'components/Layout';\nimport { Loading } from 'components/Loading';\nimport InfiniteScroll from 'components/InfiniteScroll';\nimport Skeleton from 'components/Skeleton';\nimport CreatePost from 'components/CreatePost';\nimport Head from 'components/Head';\n\nimport { GET_FOLLOWED_POSTS } from 'graphql/post';\n\nimport { useStore } from 'store';\n\nimport { HOME_PAGE_POSTS_LIMIT } from 'constants/DataLimit';\n\nimport * as Routes from 'routes';\n\nconst Empty = styled.div`\n  padding: ${(p) => p.theme.spacing.sm};\n  border: 1px solid ${(p) => p.theme.colors.border.main};\n  border-radius: ${(p) => p.theme.radius.sm};\n  margin-top: ${(p) => p.theme.spacing.lg};\n  background-color: ${(p) => p.theme.colors.white};\n`;\n\nconst StyledA = styled(A)`\n  text-decoration: underline;\n  font-weight: ${(p) => p.theme.font.weight.bold};\n`;\n\n/**\n * Home page of the app\n */\nconst Home = () => {\n  const [{ auth }] = useStore();\n  const [modalPostId, setModalPostId] = useState(null);\n  const variables = {\n    userId: auth.user.id,\n    skip: 0,\n    limit: HOME_PAGE_POSTS_LIMIT,\n  };\n  const { data, loading, fetchMore, networkStatus } = useQuery(GET_FOLLOWED_POSTS, {\n    variables,\n    notifyOnNetworkStatusChange: true,\n  });\n\n  const closeModal = () => {\n    window.history.pushState('', '', '/');\n    setModalPostId(null);\n  };\n\n  const openModal = (postId) => {\n    window.history.pushState('', '', generatePath(Routes.POST, { id: postId }));\n    setModalPostId(postId);\n  };\n\n  const renderContent = () => {\n    if (loading && networkStatus === 1) {\n      return <Skeleton height={500} bottom=\"lg\" top=\"lg\" count={HOME_PAGE_POSTS_LIMIT} />;\n    }\n\n    const { posts, count } = data.getFollowedPosts;\n    if (!posts.length) {\n      return (\n        <Empty>\n          <StyledA to={generatePath(Routes.DISCOUNTS)}>Explore new disocunts</StyledA> or{' '}\n          <StyledA to={generatePath(Routes.ANNOUNCEMENTS)}>Explore new disocunts</StyledA> or{' '}\n          <StyledA to={generatePath(Routes.ALERTS)}>Explore new disocunts</StyledA> or{' '}\n          <StyledA to={generatePath(Routes.PEOPLE)}>Find new people</StyledA>\n        </Empty>\n      );\n    }\n\n    return (\n      <InfiniteScroll\n        data={posts}\n        dataKey=\"getFollowedPosts.posts\"\n        count={parseInt(count)}\n        variables={variables}\n        fetchMore={fetchMore}\n      >\n        {(data) => {\n          const showNextLoading = loading && networkStatus === 3 && count !== data.length;\n\n          return (\n            <Fragment>\n              {data.map((post) => (\n                <Fragment key={post.id}>\n                  <Modal open={modalPostId === post.id} onClose={closeModal}>\n                    <PostPopup id={post.id} closeModal={closeModal} />\n                  </Modal>\n\n                  <Spacing bottom=\"lg\" top=\"lg\">\n                    <PostCard\n                      author={post.author}\n                      imagePublicId={post.imagePublicId}\n                      postId={post.id}\n                      comments={post.comments}\n                      createdAt={post.createdAt}\n                      title={post.title}\n                      image={post.image}\n                      likes={post.likes}\n                      openModal={() => openModal(post.id)}\n                    />\n                  </Spacing>\n                </Fragment>\n              ))}\n\n              {showNextLoading && <Loading top=\"lg\" />}\n            </Fragment>\n          );\n        }}\n      </InfiniteScroll>\n    );\n  };\n\n  return (\n    <Container maxWidth=\"sm\">\n      <Head />\n\n      <Spacing top=\"lg\" />\n\n      <CreatePost />\n\n      {renderContent()}\n    </Container>\n  );\n};\n\nexport default Home;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { useApolloClient } from '@apollo/client';\n\nimport { Loading } from 'components/Loading';\nimport { UserIcon } from 'components/icons';\n\nimport { GET_AUTH_USER, GET_USER, UPLOAD_PHOTO } from 'graphql/user';\nimport { GET_FOLLOWED_POSTS } from 'graphql/post';\n\nimport { MAX_USER_PROFILE_IMAGE_SIZE } from 'constants/ImageSize';\n\nimport { useGlobalMessage } from 'hooks/useGlobalMessage';\n\nimport { useStore } from 'store';\n\nconst Input = styled.input`\n  display: none;\n`;\n\nconst Overlay = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: absolute;\n  width: 100%;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  visibility: hidden;\n  border-radius: 50%;\n  background-color: rgba(0, 0, 0, 0.6);\n  color: ${(p) => p.theme.colors.white};\n  opacity: 0;\n  transition: visibility 0.2s linear, opacity 0.2s linear;\n`;\n\nconst Label = styled.label`\n  position: relative;\n  width: 180px;\n  height: 180px;\n  display: block;\n  overflow: hidden;\n  cursor: ${(p) => p.authUser && 'pointer'};\n  border-radius: 50%;\n  border: 4px solid ${(p) => p.theme.colors.border.main};\n  background-color: ${(p) => p.theme.colors.white};\n\n  &:hover ${Overlay} {\n    opacity: 1;\n    visibility: visible;\n  }\n`;\n\nconst Image = styled.img`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n`;\n\n/**\n * Displays and Updates user profile image\n */\nconst ProfileImageUpload = ({ userId, image, imagePublicId, username }) => {\n  const [{ auth }] = useStore();\n  const client = useApolloClient();\n  const [loading, setLoading] = useState(false);\n\n  const message = useGlobalMessage();\n\n  const handleImageChange = async (e) => {\n    setLoading(true);\n\n    const file = e.target.files[0];\n    e.target.value = '';\n\n    if (!file) return;\n\n    if (file.size >= MAX_USER_PROFILE_IMAGE_SIZE) {\n      setLoading(false);\n      message.error(`File size should be less then ${MAX_USER_PROFILE_IMAGE_SIZE / 1000000}MB`);\n      return;\n    }\n\n    try {\n      await client.mutate({\n        mutation: UPLOAD_PHOTO,\n        variables: { input: { id: auth.user.id, image: file, imagePublicId } },\n        refetchQueries: () => [\n          { query: GET_FOLLOWED_POSTS, variables: { userId: auth.user.id } },\n          { query: GET_AUTH_USER },\n          { query: GET_USER, variables: { username: auth.user.username } },\n        ],\n      });\n    } catch (err) {\n      message.error(err.graphQLErrors[0].message);\n    }\n\n    setLoading(false);\n  };\n\n  const renderProfileImage = () => {\n    if (loading) {\n      return <Loading top=\"xl\" />;\n    }\n\n    return image ? <Image src={image} alt=\"profile\" accept=\"image/x-png,image/jpeg\" /> : <UserIcon width=\"172\" />;\n  };\n\n  const authUser = auth.user.id === userId;\n\n  return (\n    <>\n      {authUser && (\n        <Input name=\"image\" type=\"file\" id=\"image\" accept=\"image/x-png,image/jpeg\" onChange={handleImageChange} />\n      )}\n\n      <Label authUser={authUser} htmlFor=\"image\">\n        {authUser && <Overlay>{image ? 'Update' : 'Upload'}</Overlay>}\n\n        {renderProfileImage()}\n      </Label>\n    </>\n  );\n};\n\nProfileImageUpload.propTypes = {\n  image: PropTypes.string,\n  imagePublicId: PropTypes.string,\n  userId: PropTypes.string.isRequired,\n};\n\nexport default ProfileImageUpload;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { useApolloClient } from '@apollo/client';\n\nimport { UploadImageIcon } from 'components/icons';\nimport { Loading } from 'components/Loading';\n\nimport { MAX_USER_COVER_IMAGE_SIZE } from 'constants/ImageSize';\n\nimport { GET_AUTH_USER, GET_USER, UPLOAD_PHOTO } from 'graphql/user';\nimport { GET_FOLLOWED_POSTS } from 'graphql/post';\n\nimport defaultBackgroundImage from './background.jpg';\n\nimport { useStore } from 'store';\n\nimport { useGlobalMessage } from 'hooks/useGlobalMessage';\n\nconst Root = styled.div`\n  width: 100%;\n  height: 350px;\n  position: relative;\n  background-image: url(${(p) => (p.image ? p.image : defaultBackgroundImage)});\n  background-size: cover;\n  background-position: center;\n  border-bottom-left-radius: ${(p) => p.theme.radius.md};\n  border-bottom-right-radius: ${(p) => p.theme.radius.md};\n  box-shadow: ${(p) => p.theme.shadows.sm};\n`;\n\nconst Input = styled.input`\n  display: none;\n`;\n\nconst Label = styled.label`\n  position: absolute;\n  overflow: hidden;\n  cursor: pointer;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  left: ${(p) => p.theme.spacing.sm};\n  top: ${(p) => p.theme.spacing.sm};\n  padding: ${(p) => p.theme.spacing.xxs} ${(p) => p.theme.spacing.xs};\n  border-radius: ${(p) => p.theme.radius.sm};\n  transition: background-color 0.4s;\n  background-color: rgba(0, 0, 0, 0.6);\n\n  &:hover {\n    background-color: rgba(0, 0, 0, 0.8);\n  }\n`;\n\n/**\n * Displays and Updates user Cover image\n */\nconst ProfileCoverUpload = ({ coverImagePublicId, coverImage, userId }) => {\n  const [{ auth }] = useStore();\n  const client = useApolloClient();\n  const [loading, setLoading] = useState(false);\n\n  const message = useGlobalMessage();\n\n  const handleImageChange = async (e) => {\n    setLoading(true);\n\n    const file = e.target.files[0];\n    e.target.value = '';\n\n    if (!file) return;\n\n    if (file.size >= MAX_USER_COVER_IMAGE_SIZE) {\n      message.error(`File size should be less then ${MAX_USER_COVER_IMAGE_SIZE / 1000000}MB`);\n      setLoading(false);\n      return;\n    }\n\n    try {\n      await client.mutate({\n        mutation: UPLOAD_PHOTO,\n        variables: {\n          input: {\n            id: auth.user.id,\n            image: file,\n            imagePublicId: coverImagePublicId,\n            isCover: true,\n          },\n        },\n        refetchQueries: () => [\n          { query: GET_FOLLOWED_POSTS, variables: { userId: auth.user.id } },\n          { query: GET_AUTH_USER },\n          { query: GET_USER, variables: { username: auth.user.username } },\n        ],\n      });\n    } catch (err) {\n      message.error(err.graphQLErrors[0].message);\n    }\n\n    setLoading(false);\n  };\n\n  return (\n    <Root image={coverImage}>\n      <Input\n        name=\"coverImage\"\n        type=\"file\"\n        id=\"coverImage\"\n        onChange={handleImageChange}\n        accept=\"image/x-png,image/jpeg\"\n      />\n\n      {loading && <Loading top=\"xl\" size=\"xl\" />}\n\n      {auth.user.id === userId && (\n        <Label htmlFor=\"coverImage\">\n          <UploadImageIcon width=\"14\" color=\"white\" />\n        </Label>\n      )}\n    </Root>\n  );\n};\n\nProfileCoverUpload.propTypes = {\n  userId: PropTypes.string.isRequired,\n  coverImagePublicId: PropTypes.string,\n  coverImage: PropTypes.string,\n};\n\nexport default ProfileCoverUpload;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { Link, generatePath } from 'react-router-dom';\nimport { useSubscription } from '@apollo/client';\n\nimport { IS_USER_ONLINE_SUBSCRIPTION } from 'graphql/user';\n\nimport { H1 } from 'components/Text';\nimport { Spacing } from 'components/Layout';\nimport Follow from 'components/Follow';\nimport ProfileImageUpload from './ProfileImageUpload';\nimport ProfileCoverUpload from './ProfileCoverUpload';\n\nimport { useStore } from 'store';\n\nimport * as Routes from 'routes';\n\nconst Root = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst ProfileImage = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-top: -140px;\n`;\n\nconst FullName = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  margin-top: ${(p) => p.theme.spacing.sm};\n  position: relative;\n\n  ${H1} {\n    font-size: ${(p) => p.theme.font.size.lg};\n  }\n\n  @media (min-width: ${(p) => p.theme.screen.md}) {\n    ${H1} {\n      font-size: ${(p) => p.theme.font.size.xl};\n    }\n  }\n`;\n\nconst FollowAndMessage = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  margin-left: ${(p) => p.theme.spacing.sm};\n`;\n\nconst Message = styled(Link)`\n  text-decoration: none;\n  font-size: ${(p) => p.theme.font.size.xs};\n`;\n\nconst Online = styled.div`\n  width: 8px;\n  height: 8px;\n  background-color: ${(p) => p.theme.colors.success};\n  margin-left: ${(p) => p.theme.spacing.sm};\n  border-radius: 50%;\n`;\n\nconst Info = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  font-size: ${(p) => p.theme.font.size.xs};\n  margin-top: ${(p) => p.theme.spacing.sm};\n`;\n\nconst List = styled.div`\n  padding: 0 ${(p) => p.theme.spacing.xs};\n  color: ${(p) => p.theme.colors.grey[800]};\n  white-space: nowrap;\n\n  @media (min-width: ${(p) => p.theme.screen.md}) {\n    padding: 0 ${(p) => p.theme.spacing.lg};\n  }\n`;\n\n/**\n * Renders user information in profile page\n */\nconst ProfileInfo = ({ user }) => {\n  const [{ auth }] = useStore();\n\n  const { data, loading } = useSubscription(IS_USER_ONLINE_SUBSCRIPTION, {\n    variables: { authUserId: auth.user.id, userId: user.id },\n  });\n\n  let isUserOnline = user.isOnline;\n  if (!loading && data) {\n    isUserOnline = data.isUserOnline.isOnline;\n  }\n\n  return (\n    <Root>\n      <ProfileCoverUpload userId={user.id} coverImage={user.coverImage} coverImagePublicId={user.coverImagePublicId} />\n\n      <ProfileImage>\n        <ProfileImageUpload\n          userId={user.id}\n          image={user.image}\n          imagePublicId={user.imagePublicId}\n          username={user.username}\n        />\n\n        <FullName>\n          <H1>{user.fullName}</H1>\n\n          {isUserOnline && auth.user.id !== user.id && <Online />}\n\n          {auth.user.id !== user.id && (\n            <FollowAndMessage>\n              <Follow user={user} />\n\n              <Spacing left=\"sm\" />\n              <Message to={generatePath(Routes.MESSAGES, { userId: user.id })}>Message</Message>\n            </FollowAndMessage>\n          )}\n        </FullName>\n      </ProfileImage>\n\n      <Info>\n        <List>\n          <b>{user.posts.length} </b> posts\n        </List>\n        <List>\n          <b>{user.followers.length} </b> followers\n        </List>\n        <List>\n          <b>{user.following.length} </b> following\n        </List>\n      </Info>\n    </Root>\n  );\n};\n\nProfileInfo.propTypes = {\n  user: PropTypes.object.isRequired,\n};\n\nexport default ProfileInfo;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { EmptyIcon } from 'components/icons';\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\n/**\n * Component for displaying when there is no data provided\n */\nconst Empty = ({ text }) => (\n  <Container>\n    <EmptyIcon />\n\n    {text}\n  </Container>\n);\n\nEmpty.propTypes = {\n  text: PropTypes.string.isRequired,\n};\n\nexport default Empty;\n","import React, { Fragment, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useQuery } from '@apollo/client';\nimport { generatePath } from 'react-router-dom';\n\nimport Skeleton from 'components/Skeleton';\nimport Modal from 'components/Modal';\nimport PostPopup from 'components/PostPopup';\nimport PostCard from 'components/PostCard';\nimport { Spacing } from 'components/Layout';\nimport InfiniteScroll from 'components/InfiniteScroll';\nimport { Loading } from 'components/Loading';\nimport Empty from 'components/Empty';\n\nimport { PROFILE_PAGE_POSTS_LIMIT } from 'constants/DataLimit';\n\nimport { GET_USER_POSTS } from 'graphql/user';\n\nimport * as Routes from 'routes';\n\n/**\n * Renders posts in profile page\n */\nconst ProfilePosts = ({ username }) => {\n  const [isPostPopupOpen, setIsPostPopupOpen] = useState(false);\n  const [modalPostId, setModalPostId] = useState('');\n  const variables = { username, skip: 0, limit: PROFILE_PAGE_POSTS_LIMIT };\n  const { data, loading, fetchMore, networkStatus } = useQuery(GET_USER_POSTS, {\n    variables,\n    notifyOnNetworkStatusChange: true,\n  });\n\n  const openModal = (postId) => {\n    window.history.pushState('', '', generatePath(Routes.POST, { id: postId }));\n    setModalPostId(postId);\n    setIsPostPopupOpen(true);\n  };\n\n  const closeModal = () => {\n    window.history.pushState('', '', generatePath(Routes.USER_PROFILE, { username }));\n    setIsPostPopupOpen(false);\n  };\n\n  if (loading && networkStatus === 1) {\n    return <Skeleton height={500} bottom=\"lg\" top=\"lg\" count={PROFILE_PAGE_POSTS_LIMIT} />;\n  }\n\n  const { posts, count } = data.getUserPosts;\n  if (!posts.length > 0) {\n    return (\n      <Spacing bottom=\"lg\">\n        <Empty text=\"No posts yet.\" />\n      </Spacing>\n    );\n  }\n\n  return (\n    <InfiniteScroll\n      data={posts}\n      dataKey=\"getUserPosts.posts\"\n      count={parseInt(count)}\n      variables={variables}\n      fetchMore={fetchMore}\n    >\n      {(data) => {\n        return data.map((post, i) => {\n          const showNextLoading = loading && networkStatus === 3 && data.length - 1 === i;\n\n          return (\n            <Fragment key={post.id}>\n              {modalPostId === post.id && (\n                <Modal open={isPostPopupOpen} onClose={closeModal}>\n                  <PostPopup id={post.id} closeModal={closeModal} />\n                </Modal>\n              )}\n\n              <Spacing bottom=\"lg\">\n                <PostCard\n                  author={post.author}\n                  postId={post.id}\n                  imagePublicId={post.imagePublicId}\n                  comments={post.comments}\n                  title={post.title}\n                  image={post.image}\n                  likes={post.likes}\n                  createdAt={post.createdAt}\n                  openModal={() => openModal(post.id)}\n                />\n              </Spacing>\n\n              {showNextLoading && <Loading top=\"lg\" />}\n            </Fragment>\n          );\n        });\n      }}\n    </InfiniteScroll>\n  );\n};\n\nProfilePosts.propTypes = {\n  username: PropTypes.string.isRequired,\n};\n\nexport default ProfilePosts;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\nimport styled from 'styled-components';\n\nimport Skeleton from 'components/Skeleton';\nimport { Container, Spacing } from 'components/Layout';\nimport ProfileInfo from './ProfileInfo';\nimport CreatePost from 'components/CreatePost';\nimport ProfilePosts from './ProfilePosts';\nimport NotFound from 'components/NotFound';\nimport Head from 'components/Head';\n\nimport { GET_USER } from 'graphql/user';\n\nimport { useStore } from 'store';\n\nconst Root = styled.div`\n  width: 100%;\n\n  @media (min-width: ${(p) => p.theme.screen.lg}) {\n    margin-left: ${(p) => p.theme.spacing.lg};\n    padding: 0;\n  }\n`;\n\n/**\n * User Profile Page\n */\nconst Profile = ({ match }) => {\n  const [{ auth }] = useStore();\n  const { username } = match.params;\n  const { data, loading, error } = useQuery(GET_USER, {\n    variables: { username },\n  });\n\n  const renderContent = () => {\n    if (loading) {\n      return (\n        <Container padding=\"xxs\">\n          <Skeleton height={350} />\n          <Container maxWidth=\"sm\">\n            <Spacing top=\"lg\" bottom=\"lg\">\n              <Skeleton height={82} />\n            </Spacing>\n          </Container>\n        </Container>\n      );\n    }\n\n    if (error || !data.getUser) return <NotFound />;\n\n    return (\n      <Container padding=\"xxs\">\n        <ProfileInfo user={data.getUser} />\n\n        <Container maxWidth=\"sm\">\n          <Spacing top=\"lg\" bottom=\"lg\">\n            {username === auth.user.username && <CreatePost />}\n          </Spacing>\n\n          <ProfilePosts username={username} />\n        </Container>\n      </Container>\n    );\n  };\n\n  return (\n    <Root>\n      <Head title={username} />\n\n      {renderContent()}\n    </Root>\n  );\n};\n\nProfile.propTypes = {\n  match: PropTypes.object.isRequired,\n};\n\nexport default withRouter(Profile);\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport { Spacing } from 'components/Layout';\nimport { LikeIcon, PostCommentIcon } from 'components/icons';\n\nconst Overlay = styled.div`\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  top: 0;\n  bottom: 0;\n  opacity: 0;\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  transition: opacity 0.3s, visibility 0.3s;\n  background-color: rgba(0, 0, 0, 0.3);\n  color: ${(p) => p.theme.colors.white};\n`;\n\nconst Root = styled.div`\n  width: 100%;\n  position: relative;\n  cursor: pointer;\n  border-radius: ${(p) => p.theme.radius.sm};\n  overflow: hidden;\n\n  &:hover ${Overlay} {\n    opacity: 1;\n  }\n`;\n\nconst Photo = styled.div`\n  width: 100%;\n  height: 300px;\n  background-repeat: no-repeat;\n  background-size: cover;\n  background-position: center;\n  background-color: ${(p) => p.theme.colors.grey[300]};\n`;\n\n/**\n * Card component, meant to be used in Explore page\n */\nconst ExploreCard = ({ openPostPopup, image, countLikes, countComments }) => {\n  const [imageLoaded, setImageLoaded] = useState(false);\n\n  useEffect(() => {\n    const img = new Image();\n    img.src = image;\n\n    img.onload = () => {\n      setImageLoaded(true);\n    };\n\n    return () => {\n      img.onload = null;\n    };\n  }, [image]);\n\n  return (\n    <Root>\n      <Photo style={imageLoaded ? { backgroundImage: `url(${image})` } : {}} />\n\n      <Overlay onClick={openPostPopup}>\n        <LikeIcon color=\"white\" />\n\n        <Spacing left=\"xs\" right=\"lg\">\n          {countLikes}\n        </Spacing>\n\n        <PostCommentIcon color=\"white\" />\n\n        <Spacing left=\"xs\">{countComments}</Spacing>\n      </Overlay>\n    </Root>\n  );\n};\n\nExploreCard.propTypes = {\n  openPostPopup: PropTypes.func.isRequired,\n  image: PropTypes.string.isRequired,\n  countLikes: PropTypes.number.isRequired,\n  countComments: PropTypes.number.isRequired,\n};\n\nexport default ExploreCard;\n","import React, { useState, Fragment } from 'react';\nimport styled from 'styled-components';\nimport { generatePath } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\n\nimport { Container } from 'components/Layout';\nimport ExploreCard from './ExploreCard';\nimport Skeleton from 'components/Skeleton';\nimport PostPopup from 'components/PostPopup';\nimport Modal from 'components/Modal';\nimport InfiniteScroll from 'components/InfiniteScroll';\nimport Empty from 'components/Empty';\nimport { Loading } from 'components/Loading';\nimport Head from 'components/Head';\n\nimport { GET_POSTS } from 'graphql/post';\n\nimport { EXPLORE_PAGE_POSTS_LIMIT } from 'constants/DataLimit';\n\nimport { useStore } from 'store';\n\nimport * as Routes from 'routes';\n\nconst Root = styled(Container)`\n  margin-top: ${(p) => p.theme.spacing.lg};\n  margin-bottom: ${(p) => p.theme.spacing.sm};\n\n  @media (min-width: ${(p) => p.theme.screen.lg}) {\n    margin-left: ${(p) => p.theme.spacing.lg};\n    padding: 0;\n  }\n`;\n\nconst PostsContainer = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(260px, 3fr));\n  grid-auto-rows: auto;\n  grid-gap: 20px;\n`;\n\n/**\n * Explore page\n */\nconst Explore = () => {\n  const [{ auth }] = useStore();\n  const [modalPostId, setModalPostId] = useState(null);\n  const variables = {\n    authUserId: auth.user.id,\n    skip: 0,\n    limit: EXPLORE_PAGE_POSTS_LIMIT,\n  };\n  const { data, loading, fetchMore, networkStatus } = useQuery(GET_POSTS, {\n    variables,\n  });\n\n  const closeModal = () => {\n    window.history.pushState('', '', '/explore');\n    setModalPostId(null);\n  };\n\n  const openModal = (postId) => {\n    window.history.pushState('', '', generatePath(Routes.POST, { id: postId }));\n    setModalPostId(postId);\n  };\n\n  const renderContent = () => {\n    if (loading && networkStatus === 1) {\n      return (\n        <PostsContainer>\n          <Skeleton height={300} count={EXPLORE_PAGE_POSTS_LIMIT} />\n        </PostsContainer>\n      );\n    }\n\n    const { posts, count } = data.getPosts;\n    if (!posts.length > 0) return <Empty text=\"No posts yet.\" />;\n\n    return (\n      <InfiniteScroll\n        data={posts}\n        dataKey=\"getPosts.posts\"\n        count={parseInt(count)}\n        variables={variables}\n        fetchMore={fetchMore}\n      >\n        {(data) => {\n          const showNextLoading = loading && networkStatus === 3 && count !== data.length;\n\n          return (\n            <Fragment>\n              <PostsContainer>\n                {data.map((post) => (\n                  <Fragment key={post.id}>\n                    <Modal open={modalPostId === post.id} onClose={closeModal}>\n                      <PostPopup id={post.id} closeModal={closeModal} />\n                    </Modal>\n\n                    <ExploreCard\n                      image={post.image}\n                      countLikes={post.likes.length}\n                      countComments={post.comments.length}\n                      openPostPopup={() => openModal(post.id)}\n                    />\n                  </Fragment>\n                ))}\n              </PostsContainer>\n\n              {showNextLoading && <Loading top=\"lg\" />}\n            </Fragment>\n          );\n        }}\n      </InfiniteScroll>\n    );\n  };\n\n  return (\n    <Root maxWidth=\"md\">\n      <Head title=\"Explore New Posts and Users\" />\n\n      {renderContent()}\n    </Root>\n  );\n};\n\nexport default Explore;\n","import { gql } from '@apollo/client';\n\n/**\n * Records to select from post comments\n */\nexport const postCommentsPayload = `\n  comments {\n    id\n    comment\n    author {\n      id\n      username\n      fullName\n      image\n    }\n  }\n`;\n\n/**\n * Records to select from post author\n */\nexport const postAuthorPayload = `\n  author {\n    id\n    username\n    fullName\n    image\n    following {\n      id\n      user\n    }\n    followers {\n      id\n      user\n    }\n    notifications {\n      id\n      author {\n        id\n        username\n      }\n      follow {\n        id\n      }\n      like {\n        id\n      }\n      comment {\n        id\n      }\n    }\n  }\n`;\n\n/**\n * Records to select from post likes\n */\nexport const postLikesPayload = `\n  likes {\n    id\n    user\n    post\n  }\n`;\n\n/**\n * Creates a post\n */\nexport const CREATE_POST = gql`\n  mutation($input: CreatePostInput!) {\n    createPost(input: $input) {\n      id\n    }\n  }\n`;\n\n/**\n * Gets all posts from followed users\n */\nexport const GET_FOLLOWED_POSTS = gql`\n  query($userId: String!, $skip: Int, $limit: Int) {\n    getFollowedPosts(userId: $userId, skip: $skip, limit: $limit) {\n      count\n      posts {\n        id\n        title\n        image\n        imagePublicId\n        createdAt\n        ${postAuthorPayload}\n        ${postCommentsPayload}\n        ${postLikesPayload}\n      }\n    }\n  }\n`;\n\n/**\n * Gets all available discounts\n */\n\nexport const GET_DISCOUNTS = gql`\nquery($skip: Int, $limit: Int) {\n  getDiscounts(skip: $skip, limit: $limit) {\n    count\n    discounts {\n      id\n      title\n      image\n      ${postAuthorPayload}\n      ${postCommentsPayload}\n      ${postLikesPayload}\n    }\n  }\n}\n`;\n\nexport const GET_POSTS = gql`\n  query($authUserId: ID!, $skip: Int, $limit: Int) {\n    getPosts(authUserId: $authUserId, skip: $skip, limit: $limit) {\n      count\n      posts {\n        id\n        title\n        image\n        ${postAuthorPayload}\n        ${postCommentsPayload}\n        ${postLikesPayload}\n      }\n    }\n  }\n`;\n\n/**\n * Gets specific post by id\n */\nexport const GET_POST = gql`\n  query($id: ID!) {\n    getPost(id: $id) {\n      id\n      title\n      image\n      createdAt\n      ${postAuthorPayload}\n      ${postCommentsPayload}\n      ${postLikesPayload}\n    }\n  }\n`;\n\n/**\n * Deletes a post\n */\nexport const DELETE_POST = gql`\n  mutation($input: DeletePostInput!) {\n    deletePost(input: $input) {\n      id\n    }\n  }\n`;\n","import React, { useState, Fragment } from 'react';\nimport styled from 'styled-components';\nimport { generatePath } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\n\nimport { Container } from 'components/Layout';\n// import ExploreCard from '../Explore/ExploreCard';\nimport Skeleton from 'components/Skeleton';\nimport PostPopup from 'components/PostPopup';\nimport PostCard from 'components/PostCard';\nimport Modal from 'components/Modal';\nimport InfiniteScroll from 'components/InfiniteScroll';\nimport Empty from 'components/Empty';\nimport { Loading } from 'components/Loading';\nimport Head from 'components/Head';\n\nimport { GET_DISCOUNTS } from 'graphql/discount';\n\nimport { EXPLORE_PAGE_POSTS_LIMIT } from 'constants/DataLimit';\n\nimport { useStore } from 'store';\n\nimport * as Routes from 'routes';\n\nconst Root = styled(Container)`\n  margin-top: ${(p) => p.theme.spacing.lg};\n  margin-bottom: ${(p) => p.theme.spacing.sm};\n\n  @media (min-width: ${(p) => p.theme.screen.lg}) {\n    margin-left: ${(p) => p.theme.spacing.lg};\n    padding: 0;\n  }\n`;\n\nconst PostsContainer = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(260px, 3fr));\n  grid-auto-rows: auto;\n  grid-gap: 20px;\n`;\n\n/**\n * Explore page\n */\nconst Explore = () => {\n  // const [{ auth }] = useStore();\n  const [modalPostId, setModalPostId] = useState(null);\n  const variables = {\n    skip: 0,\n    limit: EXPLORE_PAGE_POSTS_LIMIT,\n  };\n  const { data, loading, fetchMore, networkStatus } = useQuery(GET_DISCOUNTS, {\n    variables,\n  });\n\n  const closeModal = () => {\n    window.history.pushState('', '', '/discounts');\n    setModalPostId(null);\n  };\n\n  const openModal = (postId) => {\n    window.history.pushState('', '', generatePath(Routes.POST, { id: postId }));\n    setModalPostId(postId);\n  };\n\n  const renderContent = () => {\n    if (loading && networkStatus === 1) {\n      return (\n        <PostsContainer>\n          <Skeleton height={300} count={EXPLORE_PAGE_POSTS_LIMIT} />\n        </PostsContainer>\n      );\n    }\n\n    const { discounts, count } = data.getDiscounts;\n    console.log(discounts)\n    if (!discounts.length > 0) return <Empty text=\"No discounts yet.\" />;\n\n    return (\n      <InfiniteScroll\n        data={discounts}\n        dataKey=\"getDiscounts.discounts\"\n        count={parseInt(count)}\n        variables={variables}\n        fetchMore={fetchMore}\n      >\n        {(data) => {\n          const showNextLoading = loading && networkStatus === 3 && count !== data.length;\n\n          return (\n            <Fragment>\n                {console.log(data)}\n                {data.map((discount) => (\n                  <Fragment key={discount.id}>\n                    <Modal open={modalPostId === discount.id} onClose={closeModal}>\n                      <PostPopup id={discount.id} closeModal={closeModal} />\n                    </Modal>\n                    <PostCard\n                      author={discount.author}\n                      imagePublicId={discount.imagePublicId}\n                      postId={discount.id}\n                      comments={discount.comments}\n                      createdAt={discount.createdAt}\n                      title={discount.title}\n                      image={discount.image}\n                      likes={discount.likes}\n                      openModal={() => openModal(discount.id)}\n                    />\n                  </Fragment>\n                ))}\n\n              {showNextLoading && <Loading top=\"lg\" />}\n            </Fragment>\n          );\n        }}\n      </InfiniteScroll>\n    );\n  };\n\n  return (\n    <Root maxWidth=\"md\">\n      <Head title=\"Explore New Discounts\" />\n\n      {renderContent()}\n    </Root>\n  );\n};\n\nexport default Explore;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { generatePath } from 'react-router-dom';\n\nimport { A } from 'components/Text';\nimport { Spacing } from 'components/Layout';\nimport Follow from 'components/Follow';\nimport theme from 'theme';\n\nimport * as Routes from 'routes';\n\nconst Root = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  height: 280px;\n  background-color: white;\n  padding: ${(p) => p.theme.spacing.sm};\n  border-radius: ${(p) => p.theme.radius.sm};\n  border: 1px solid ${(p) => p.theme.colors.border.main};\n  transition: border-color 0.1s;\n`;\n\nconst ImageContainer = styled.div`\n  width: 100px;\n  height: 100px;\n  border-radius: 50%;\n  overflow: hidden;\n  flex-shrink: 0;\n`;\n\nconst Image = styled.img`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n`;\n\nconst InitialLetters = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  height: 100%;\n  text-transform: uppercase;\n  color: ${(p) => p.theme.colors.white};\n  font-size: ${(p) => p.theme.font.size.lg};\n  background-color: ${(p) => p.color};\n`;\n\nconst FullName = styled.span`\n  max-width: 200px;\n  font-weight: ${(p) => p.theme.font.weight.bold};\n`;\n\nconst UserName = styled.span`\n  font-size: ${(p) => p.theme.font.size.xs};\n`;\n\n/**\n * Card component for rendering user info, meant to be used in Peoples page\n */\nconst PeopleCard = ({ user }) => {\n  const [color, setColor] = useState('');\n\n  const { fullName, username, image } = user;\n\n  useEffect(() => {\n    const { primary, secondary, success, error } = theme.colors;\n    const colors = [primary.main, secondary.main, success, error.main];\n    const randomColor = Math.floor(Math.random() * colors.length);\n    setColor(colors[randomColor]);\n  }, []);\n\n  const splitFullName = () => {\n    // If a fullName contains more word than two, take first two word\n    const splitWords = fullName.split(' ').slice(0, 2).join(' ');\n\n    // Take only first letters from split words\n    const firstLetters = splitWords\n      .split(' ')\n      .map((a) => a.charAt(0))\n      .join(' ');\n\n    return firstLetters;\n  };\n\n  return (\n    <Root>\n      <A to={generatePath(Routes.USER_PROFILE, { username })}>\n        <ImageContainer>\n          {image ? <Image src={image} /> : <InitialLetters color={color}>{splitFullName()}</InitialLetters>}\n        </ImageContainer>\n      </A>\n\n      <Spacing top=\"sm\" bottom=\"xs\">\n        <A to={generatePath(Routes.USER_PROFILE, { username })}>\n          <FullName>{fullName}</FullName>\n        </A>\n      </Spacing>\n\n      <UserName>@{username}</UserName>\n\n      <Spacing top=\"lg\" />\n\n      <Follow user={user} />\n    </Root>\n  );\n};\n\nPeopleCard.propTypes = {\n  user: PropTypes.object.isRequired,\n};\n\nexport default PeopleCard;\n","import React, { Fragment } from 'react';\nimport styled from 'styled-components';\n\nimport { Container } from 'components/Layout';\nimport Skeleton from 'components/Skeleton';\nimport { Loading } from 'components/Loading';\nimport Empty from 'components/Empty';\nimport InfiniteScroll from 'components/InfiniteScroll';\nimport Head from 'components/Head';\nimport PeopleCard from './PeopleCard';\n\nimport { GET_USERS } from 'graphql/user';\n\nimport { PEOPLE_PAGE_USERS_LIMIT } from 'constants/DataLimit';\n\nimport { useStore } from 'store';\n\nimport { useQuery } from '@apollo/client';\n\nconst Root = styled(Container)`\n  margin-top: ${(p) => p.theme.spacing.lg};\n\n  @media (min-width: ${(p) => p.theme.screen.lg}) {\n    margin-left: ${(p) => p.theme.spacing.lg};\n    padding: 0;\n  }\n`;\n\nconst PeopleContainer = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(180px, 3fr));\n  grid-auto-rows: auto;\n  grid-gap: 20px;\n  margin-bottom: ${(p) => p.theme.spacing.lg};\n`;\n\n/**\n * People page\n */\nconst People = () => {\n  const [{ auth }] = useStore();\n  const variables = {\n    userId: auth.user.id,\n    skip: 0,\n    limit: PEOPLE_PAGE_USERS_LIMIT,\n  };\n  const { data, loading, fetchMore, networkStatus } = useQuery(GET_USERS, {\n    variables,\n    notifyOnNetworkStatusChange: true,\n  });\n\n  const renderContent = () => {\n    if (loading && networkStatus === 1) {\n      return (\n        <PeopleContainer>\n          <Skeleton height={280} count={PEOPLE_PAGE_USERS_LIMIT} />\n        </PeopleContainer>\n      );\n    }\n\n    const { users, count } = data.getUsers;\n    if (!users.length > 0) return <Empty text=\"No people yet.\" />;\n\n    return (\n      <InfiniteScroll\n        data={users}\n        dataKey=\"getUsers.users\"\n        count={parseInt(count)}\n        variables={variables}\n        fetchMore={fetchMore}\n      >\n        {(data) => {\n          const showNextLoading = loading && networkStatus === 3 && count !== data.length;\n\n          return (\n            <Fragment>\n              <PeopleContainer>\n                {data.map((user) => (\n                  <PeopleCard key={user.id} user={user} />\n                ))}\n              </PeopleContainer>\n\n              {showNextLoading && <Loading top=\"lg\" />}\n            </Fragment>\n          );\n        }}\n      </InfiniteScroll>\n    );\n  };\n\n  return (\n    <Root maxWidth=\"md\">\n      <Head title=\"Find new People\" />\n\n      {renderContent()}\n    </Root>\n  );\n};\n\nexport default People;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { useQuery } from '@apollo/client';\n\nimport { Container, Content } from 'components/Layout';\nimport { Loading } from 'components/Loading';\nimport Skeleton from 'components/Skeleton';\nimport Notification from 'components/App/Notification';\nimport InfiniteScroll from 'components/InfiniteScroll';\nimport Empty from 'components/Empty';\nimport Head from 'components/Head';\n\nimport { useStore } from 'store';\n\nimport { GET_USER_NOTIFICATION } from 'graphql/notification';\n\nimport { NOTIFICATIONS_PAGE_NOTIFICATION_LIMIT } from 'constants/DataLimit';\n\nconst Root = styled(Container)`\n  margin-top: ${(p) => p.theme.spacing.lg};\n`;\n\nconst List = styled.div`\n  overflow: hidden;\n  border-radius: ${(p) => p.theme.radius.sm};\n  border: 1px solid ${(p) => p.theme.colors.border.main};\n`;\n\n/**\n * Notifications page\n */\nconst Notifications = () => {\n  const [{ auth }] = useStore();\n  const variables = {\n    userId: auth.user.id,\n    skip: 0,\n    limit: NOTIFICATIONS_PAGE_NOTIFICATION_LIMIT,\n  };\n  const { data, loading, fetchMore, networkStatus } = useQuery(GET_USER_NOTIFICATION, {\n    variables,\n    notifyOnNetworkStatusChange: true,\n  });\n\n  const renderContent = () => {\n    if (loading && networkStatus === 1) {\n      return <Skeleton height={56} bottom=\"xxs\" count={NOTIFICATIONS_PAGE_NOTIFICATION_LIMIT} />;\n    }\n\n    const { notifications, count } = data.getUserNotifications;\n    if (!notifications.length) {\n      return <Empty text=\"No notifications yet.\" />;\n    }\n\n    return (\n      <InfiniteScroll\n        data={notifications}\n        dataKey=\"getUserNotifications.notifications\"\n        count={parseInt(count)}\n        variables={variables}\n        fetchMore={fetchMore}\n      >\n        {(data) => {\n          const showNextLoading = loading && networkStatus === 3 && count !== data.length;\n\n          return (\n            <>\n              <List>\n                {data.map((notification) => (\n                  <Notification key={notification.id} notification={notification} close={() => false} />\n                ))}\n              </List>\n\n              {showNextLoading && <Loading top=\"lg\" />}\n            </>\n          );\n        }}\n      </InfiniteScroll>\n    );\n  };\n\n  return (\n    <Content>\n      <Root maxWidth=\"md\">\n        <Head title={`${auth.user.username}'s Notifications`} />\n\n        {renderContent()}\n      </Root>\n    </Content>\n  );\n};\n\nexport default Notifications;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\n\nimport { Content } from 'components/Layout';\nimport PostPopup from 'components/PostPopup';\n\n/**\n * Post detail page\n */\nconst Post = ({ match }) => {\n  return (\n    <Content>\n      <PostPopup usedInModal={false} id={match.params.id} />\n    </Content>\n  );\n};\n\nPost.propTypes = {\n  match: PropTypes.object.isRequired,\n};\n\nexport default withRouter(Post);\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { NavLink, generatePath, withRouter } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\n\nimport { GET_CONVERSATIONS } from 'graphql/user';\nimport { GET_NEW_CONVERSATIONS_SUBSCRIPTION } from 'graphql/messages';\n\nimport Search from 'components/Search';\nimport { PencilIcon } from 'components/icons';\nimport { LoadingDots } from 'components/Loading';\nimport Avatar from 'components/Avatar';\n\nimport * as Routes from 'routes';\n\nconst Root = styled.div`\n  width: 80px;\n  height: 100%;\n  border-right: 1px solid ${(p) => p.theme.colors.border.main};\n\n  @media (min-width: ${(p) => p.theme.screen.lg}) {\n    width: 330px;\n  }\n`;\n\nconst HeadingContainer = styled.div`\n  border-bottom: 1px solid ${(p) => p.theme.colors.border.main};\n  height: 60px;\n  padding: 0 ${(p) => p.theme.spacing.xs};\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n\n  @media (min-width: ${(p) => p.theme.screen.lg}) {\n    justify-content: space-between;\n  }\n`;\n\nconst Heading = styled.h3`\n  display: none;\n  color: ${(p) => p.theme.colors.text.primary};\n  margin: 0;\n\n  @media (min-width: ${(p) => p.theme.screen.lg}) {\n    display: block;\n  }\n`;\n\nconst NewMessage = styled(NavLink)`\n  width: 40px;\n  height: 40px;\n  background-color: ${(p) => p.theme.colors.grey[200]};\n  border-radius: 50%;\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst SearchContainer = styled.div`\n  display: none;\n  border-bottom: 1px solid ${(p) => p.theme.colors.border.main};\n\n  @media (min-width: ${(p) => p.theme.screen.lg}) {\n    display: block;\n  }\n`;\n\nconst UserContainer = styled.div`\n  margin-top: ${(p) => p.theme.spacing.sm};\n  padding: 0 ${(p) => p.theme.spacing.xxs};\n`;\n\nconst User = styled(NavLink)`\n  width: 100%;\n  padding: ${(p) => p.theme.spacing.xxs} ${(p) => p.theme.spacing.xxs};\n  margin-bottom: ${(p) => p.theme.spacing.xxs};\n  border-radius: ${(p) => p.theme.radius.md};\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-start;\n  align-items: center;\n  text-decoration: none;\n  color: ${(p) => p.theme.colors.text.primary};\n\n  @media (max-width: ${(p) => p.theme.screen.lg}) {\n    ${(p) =>\n      !p.seen &&\n      `\n        background-color: ${p.theme.colors.primary.light};\n      `};\n  }\n\n  &.selected {\n    background-color: ${(p) => p.theme.colors.grey[100]};\n  }\n`;\n\nconst Info = styled.div`\n  width: 100%;\n  display: none;\n  padding: 0 ${(p) => p.theme.spacing.xs};\n\n  @media (min-width: ${(p) => p.theme.screen.lg}) {\n    display: block;\n  }\n`;\n\nconst FullNameUnSeen = styled.div`\n  width: 100%;\n  font-size: ${(p) => p.theme.font.size.sm};\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst FullName = styled.div`\n  text-overflow: ellipsis;\n  width: 100%;\n`;\n\nconst UnSeen = styled.div`\n  width: 8px;\n  height: 8px;\n  background-color: ${(p) => p.theme.colors.primary.light};\n  border-radius: 50%;\n`;\n\nconst LastMessage = styled.div`\n  margin-top: ${(p) => p.theme.spacing.xxs};\n  font-size: ${(p) => p.theme.font.size.xxs};\n  color: ${(p) => p.theme.colors.grey[500]};\n  text-overflow: ellipsis;\n`;\n\n/**\n * Component that renders users, with whom auth user had a chat\n */\nconst MessagesUsers = ({ location, authUser }) => {\n  const { subscribeToMore, data, loading } = useQuery(GET_CONVERSATIONS, {\n    variables: { authUserId: authUser.id },\n  });\n\n  useEffect(() => {\n    const unsubscribe = subscribeToMore({\n      document: GET_NEW_CONVERSATIONS_SUBSCRIPTION,\n      updateQuery: (prev, { subscriptionData }) => {\n        if (!subscriptionData.data) return prev;\n\n        const { newConversation } = subscriptionData.data;\n        const oldConversations = prev.getConversations;\n\n        if (oldConversations.some((u) => u.id === newConversation.id)) {\n          return prev;\n        }\n\n        // Merge conversations\n        const conversations = newConversation;\n        delete conversations['receiverId'];\n        const mergedConversations = [newConversation, ...oldConversations];\n\n        return { getConversations: mergedConversations };\n      },\n    });\n\n    return () => {\n      unsubscribe();\n    };\n  }, [subscribeToMore]);\n\n  return (\n    <Root>\n      <HeadingContainer>\n        <Heading>Chats</Heading>\n\n        <NewMessage\n          exact\n          activeClassName=\"selected\"\n          to={generatePath(Routes.MESSAGES, { userId: Routes.NEW_ID_VALUE })}\n        >\n          <PencilIcon />\n        </NewMessage>\n      </HeadingContainer>\n\n      <SearchContainer>\n        <Search location={location} backgroundColor=\"white\" forMessage placeholder=\"Search message\" />\n      </SearchContainer>\n\n      {loading && <LoadingDots top=\"xl\" />}\n\n      {!loading && (\n        <UserContainer>\n          {data.getConversations.map((user) => {\n            const unseen = !user.lastMessageSender && !user.seen;\n\n            return (\n              <User key={user.id} activeClassName=\"selected\" to={`/messages/${user.id}`} seen={unseen ? 0 : 1}>\n                <span>\n                  <Avatar image={user.image} size={50} />\n                </span>\n\n                <Info>\n                  <FullNameUnSeen>\n                    <FullName>{user.fullName}</FullName>\n\n                    {unseen && <UnSeen />}\n                  </FullNameUnSeen>\n\n                  <LastMessage>\n                    {user.lastMessageSender && 'You:'} {user.lastMessage}\n                  </LastMessage>\n                </Info>\n              </User>\n            );\n          })}\n        </UserContainer>\n      )}\n    </Root>\n  );\n};\n\nMessagesUsers.propTypes = {\n  location: PropTypes.object.isRequired,\n  authUser: PropTypes.object.isRequired,\n};\n\nexport default withRouter(MessagesUsers);\n","import React, { useState, useRef, useEffect } from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport { useMutation } from '@apollo/client';\n\nimport { Button, Textarea } from 'components/Form';\nimport { SendIcon } from 'components/icons';\nimport Avatar from 'components/Avatar';\nimport { Spacing } from 'components/Layout';\n\nimport { CREATE_MESSAGE } from 'graphql/messages';\nimport { GET_CONVERSATIONS } from 'graphql/user';\n\nimport { currentDate } from 'utils/date';\n\nimport * as Routes from 'routes';\n\nconst Root = styled.div`\n  padding: 0 ${(p) => p.theme.spacing.sm};\n  overflow-y: auto;\n  height: 100vh;\n  margin-top: -120px;\n  padding-top: 120px;\n  display: flex;\n  flex-direction: column;\n\n  ::-webkit-scrollbar {\n    width: 8px;\n  }\n\n  ::-webkit-scrollbar-thumb {\n    background-color: ${(p) => p.theme.colors.grey[500]};\n    border-radius: ${(p) => p.theme.radius.lg};\n    visibility: hidden;\n\n    &:hover {\n      background-color: ${(p) => p.theme.colors.grey[600]};\n    }\n  }\n\n  &:hover {\n    ::-webkit-scrollbar-thumb {\n      visibility: visible;\n    }\n  }\n`;\n\nconst Conversation = styled.div`\n  flex: 1;\n`;\n\nconst MessageDate = styled.span`\n  position: absolute;\n  bottom: -${(p) => p.theme.spacing.sm};\n  left: ${(p) => !p.userMessage && p.theme.spacing.lg};\n  right: -${(p) => p.userMessage && 0};\n  display: none;\n  font-size: ${(p) => p.theme.font.size.tiny};\n  color: ${(p) => p.theme.colors.text.secondary};\n`;\n\nconst MessageWrapper = styled.div`\n  display: flex;\n  position: relative;\n  justify-content: ${(p) => p.userMessage && 'flex-end'};\n  margin: ${(p) => p.theme.spacing.md} 0;\n\n  &:hover ${MessageDate} {\n    display: block;\n  }\n`;\n\nconst Message = styled.div`\n  display: flex;\n  flex-direction: row;\n  position: relative;\n  max-width: 300px;\n  line-height: 21px;\n  font-size: ${(p) => p.theme.font.size.xs};\n  padding: ${(p) => p.theme.spacing.xxs} ${(p) => p.theme.spacing.xs};\n  border-radius: ${(p) => p.theme.radius.lg};\n  color: ${(p) => p.userMessage && p.theme.colors.white};\n  background-color: ${(p) => (p.userMessage ? p.theme.colors.primary.light : p.theme.colors.grey[200])};\n`;\n\nconst Form = styled.form`\n  background-color: ${(p) => p.theme.colors.white};\n  position: sticky;\n  bottom: 0;\n  width: 100%;\n  display: flex;\n  padding: ${(p) => p.theme.spacing.xxs};\n`;\n\nconst StyledTextarea = styled(Textarea)`\n  height: 38px;\n  border-radius: ${(p) => p.theme.radius.lg};\n  background-color: ${(p) => p.theme.colors.grey[200]};\n`;\n\nconst SendButton = styled(Button)`\n  margin-left: ${(p) => p.theme.spacing.sm};\n  align-self: center;\n`;\n\n/**\n * Component that renders messages conversations UI\n */\nconst MessagesChatConversation = ({ messages, authUser, chatUser, data, match }) => {\n  const bottomRef = useRef(null);\n\n  const [messageText, setMessageText] = useState('');\n\n  const [createMessage] = useMutation(CREATE_MESSAGE);\n\n  useEffect(() => {\n    if (bottomRef.current) {\n      bottomRef.current.scrollIntoView();\n    }\n  }, [bottomRef, data]);\n\n  const sendMessage = (e) => {\n    e.preventDefault();\n\n    if (!messageText) return;\n\n    setMessageText('');\n    createMessage({\n      variables: {\n        input: {\n          sender: authUser.id,\n          receiver: chatUser ? chatUser.id : null,\n          message: messageText,\n        },\n      },\n      refetchQueries: ({ data }) => {\n        if (data && data.createMessage && data.createMessage.isFirstMessage) {\n          return [\n            {\n              query: GET_CONVERSATIONS,\n              variables: { authUserId: authUser.id },\n            },\n          ];\n        }\n      },\n    });\n  };\n\n  const onEnterPress = (e) => {\n    if (e.keyCode === 13 && e.shiftKey === false) {\n      sendMessage(e);\n    }\n  };\n\n  return (\n    <Root>\n      <Conversation>\n        {messages.map((message) => {\n          const isAuthUserReceiver = authUser.id === message.sender.id;\n\n          return (\n            <MessageWrapper userMessage={isAuthUserReceiver} key={message.id}>\n              {!isAuthUserReceiver && (\n                <Spacing right=\"xs\">\n                  <Avatar image={message.sender.image} />\n                </Spacing>\n              )}\n\n              <Message userMessage={isAuthUserReceiver}>{message.message}</Message>\n\n              <MessageDate userMessage={isAuthUserReceiver}>{currentDate(message.createdAt)}</MessageDate>\n            </MessageWrapper>\n          );\n        })}\n        <div ref={bottomRef} />\n      </Conversation>\n\n      {match.params.userId !== Routes.NEW_ID_VALUE && chatUser && (\n        <Form onSubmit={sendMessage}>\n          <StyledTextarea\n            placeholder=\"Type a message\"\n            value={messageText}\n            onChange={(e) => setMessageText(e.target.value)}\n            onKeyDown={onEnterPress}\n          />\n\n          <SendButton type=\"submit\" ghost>\n            <SendIcon width=\"28\" />\n          </SendButton>\n        </Form>\n      )}\n    </Root>\n  );\n};\n\nMessagesChatConversation.propTypes = {\n  messages: PropTypes.array.isRequired,\n  authUser: PropTypes.object.isRequired,\n  chatUser: PropTypes.object,\n  data: PropTypes.any,\n  match: PropTypes.object.isRequired,\n};\n\nexport default MessagesChatConversation;\n","import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport { generatePath, withRouter, Link } from 'react-router-dom';\nimport { useSubscription } from '@apollo/client';\n\nimport Search from 'components/Search';\nimport Avatar from 'components/Avatar';\n\nimport { IS_USER_ONLINE_SUBSCRIPTION } from 'graphql/user';\n\nimport * as Routes from 'routes';\n\nimport { useStore } from 'store';\n\nconst Root = styled.div`\n  position: relative;\n  background-color: ${(p) => p.theme.colors.white};\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  height: 60px;\n  border-bottom: 1px solid ${(p) => p.theme.colors.border.main};\n  z-index: 1;\n`;\n\nconst InputContainer = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  padding: 0 ${(p) => p.theme.spacing.sm};\n  color: ${(p) => p.theme.colors.text.secondary};\n  font-size: ${(p) => p.theme.font.size.xs};\n`;\n\nconst To = styled.div`\n  margin-top: 1px;\n`;\n\nconst User = styled(Link)`\n  margin: 0 ${(p) => p.theme.spacing.xxs};\n  padding: ${(p) => p.theme.spacing.xxs} ${(p) => p.theme.spacing.xxs};\n  border-radius: ${(p) => p.theme.radius.md};\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  text-decoration: none;\n`;\n\nconst Info = styled.div`\n  padding-left: ${(p) => p.theme.spacing.xs};\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-start;\n  align-items: center;\n`;\n\nconst FullName = styled.div`\n  font-size: ${(p) => p.theme.font.size.sm};\n  color: ${(p) => p.theme.colors.text.primary};\n  font-weight: ${(p) => p.theme.font.weight.bold};\n`;\n\nconst Online = styled.div`\n  display: inline-block;\n  width: 8px;\n  height: 8px;\n  background-color: ${(p) => p.theme.colors.success};\n  margin-left: ${(p) => p.theme.spacing.xs};\n  border-radius: 50%;\n`;\n\n/**\n * Heading component for messages chat\n */\nconst MessagesChatHeading = ({ location, match, chatUser }) => {\n  const [{ auth }] = useStore();\n\n  const { data, loading } = useSubscription(IS_USER_ONLINE_SUBSCRIPTION, {\n    variables: {\n      authUserId: auth.user.id,\n      userId: chatUser ? chatUser.id : null,\n    },\n    skip: !chatUser,\n  });\n\n  // Update user's isOnline field in real time\n  if (!loading && data && chatUser) {\n    chatUser.isOnline = data.isUserOnline.isOnline\n    console.log(chatUser.isOnline);\n  }\n\n  if (match.params.userId === Routes.NEW_ID_VALUE || !chatUser) {\n    return (\n      <Root>\n        <InputContainer>\n          <To>To:</To>\n          <Search\n            location={location}\n            backgroundColor=\"white\"\n            hideIcon\n            forMessage\n            placeholder=\"Type the name of a person\"\n            autoFocus\n          />\n        </InputContainer>\n      </Root>\n    );\n  }\n\n  if (chatUser) {\n    return (\n      <Root>\n        <User\n          to={generatePath(Routes.USER_PROFILE, {\n            username: chatUser.username,\n          })}\n        >\n          <Avatar image={chatUser.image} size={40} />\n\n          <Info>\n            <FullName>{chatUser.fullName}</FullName>\n\n            {chatUser.isOnline && <Online />}\n          </Info>\n        </User>\n      </Root>\n    );\n  }\n\n  return null;\n};\n\nMessagesChatHeading.propTypes = {\n  match: PropTypes.object.isRequired,\n  chatUser: PropTypes.object,\n};\n\nexport default withRouter(MessagesChatHeading);\n","import React, { useEffect, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { useQuery, useApolloClient } from '@apollo/client';\n\nimport { LoadingDots } from 'components/Loading';\nimport MessagesChatConversation from './MessagesChatConversation';\nimport MessagesChatHeading from './MessagesChatHeading';\n\nimport { GET_MESSAGES, GET_MESSAGES_SUBSCRIPTION, UPDATE_MESSAGE_SEEN } from 'graphql/messages';\nimport { GET_USER, GET_CONVERSATIONS, GET_AUTH_USER } from 'graphql/user';\n\nimport * as Routes from 'routes';\n\nconst Root = styled.div`\n  width: 100%;\n  height: 100%;\n`;\n\n/**\n * Messages chat wrapper\n */\nconst MessagesChat = ({ match, authUser }) => {\n  const { userId } = match.params;\n\n  const client = useApolloClient();\n\n  const { data, loading } = useQuery(GET_USER, {\n    variables: { id: userId },\n    skip: userId === Routes.NEW_ID_VALUE,\n  });\n\n  const { subscribeToMore, data: messages, loading: messagesLoading } = useQuery(GET_MESSAGES, {\n    variables: { authUserId: authUser.id, userId },\n    skip: userId === Routes.NEW_ID_VALUE,\n    fetchPolicy: 'network-only',\n  });\n\n  const updateMessageSeen = useCallback(async () => {\n    try {\n      await client.mutate({\n        mutation: UPDATE_MESSAGE_SEEN,\n        variables: {\n          input: {\n            receiver: authUser.id,\n            sender: userId,\n          },\n        },\n        refetchQueries: () => [\n          {\n            query: GET_CONVERSATIONS,\n            variables: { authUserId: authUser.id },\n          },\n          { query: GET_AUTH_USER },\n        ],\n      });\n    } catch (err) {}\n  }, [authUser.id, client, userId]);\n\n  useEffect(() => {\n    const unsubscribe = subscribeToMore({\n      document: GET_MESSAGES_SUBSCRIPTION,\n      variables: { authUserId: authUser.id, userId },\n      updateQuery: (prev, { subscriptionData }) => {\n        if (!subscriptionData.data) return prev;\n\n        updateMessageSeen();\n\n        const newMessage = subscriptionData.data.messageCreated;\n        const mergedMessages = [...prev.getMessages, newMessage];\n\n        return { getMessages: mergedMessages };\n      },\n    });\n\n    return () => {\n      unsubscribe();\n    };\n  }, [authUser.id, userId, subscribeToMore, updateMessageSeen]);\n\n  useEffect(() => {\n    if (userId !== Routes.NEW_ID_VALUE) {\n      updateMessageSeen();\n    }\n  }, [userId, updateMessageSeen]);\n\n  if (loading || messagesLoading) {\n    return (\n      <Root>\n        <LoadingDots />\n      </Root>\n    );\n  }\n\n  let chatUser = null;\n  if (data && data.getUser) {\n    chatUser = data.getUser;\n  }\n\n  return (\n    <Root>\n      <MessagesChatHeading match={match} chatUser={chatUser} />\n\n      <MessagesChatConversation\n        authUser={authUser}\n        messages={messages ? messages.getMessages : []}\n        chatUser={chatUser}\n        data={messages}\n        match={match}\n      />\n    </Root>\n  );\n};\n\nMessagesChat.propTypes = {\n  match: PropTypes.object.isRequired,\n  authUser: PropTypes.object.isRequired,\n};\n\nexport default MessagesChat;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport { useStore } from 'store';\n\nimport { HEADER_HEIGHT } from 'constants/Layout';\n\nimport MessagesUsers from './MessagesUsers';\nimport MessagesChat from './MessagesChat';\n\nconst Root = styled.div`\n  background-color: ${(p) => p.theme.colors.white};\n  position: relative;\n  margin-top: -${HEADER_HEIGHT}px;\n  padding-top: ${HEADER_HEIGHT}px;\n  width: 100%;\n  height: 100vh;\n  display: flex;\n  flex-direction: row;\n\n  @media (min-width: ${(p) => p.theme.screen.md}) {\n    margin-left: ${(p) => p.theme.spacing.lg};\n    border-left: 1px solid ${(p) => p.theme.colors.border.main};\n    border-right: 1px solid ${(p) => p.theme.colors.border.main};\n  }\n`;\n\n/**\n * Messages page\n */\nconst Messages = ({ match }) => {\n  const [{ auth }] = useStore();\n\n  return (\n    <Root>\n      <MessagesUsers authUser={auth.user} match={match} />\n\n      <MessagesChat match={match} authUser={auth.user} />\n    </Root>\n  );\n};\n\nMessages.propTypes = {\n  match: PropTypes.object.isRequired,\n};\n\nexport default Messages;\n","import React, { useEffect, useState, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { Switch, Route } from 'react-router-dom';\nimport styled from 'styled-components';\n\nimport Header from 'components/App/Header';\nimport NotFound from 'components/NotFound';\nimport SideBar from './SideBar';\nimport UserSuggestions from './UserSuggestions';\n\nimport Home from 'pages/Home';\nimport Profile from 'pages/Profile';\nimport Explore from 'pages/Explore';\nimport Discount from 'pages/Discounts';\nimport People from 'pages/People';\nimport Notifications from 'pages/Notifications';\nimport Post from 'pages/Post';\nimport Messages from 'pages/Messages';\n\nimport { useWindowSize } from 'hooks/useWindowSize';\nimport { useClickOutside } from 'hooks/useClickOutside';\n\nimport * as Routes from 'routes';\n\nimport theme from 'theme';\n\nimport { useStore } from 'store';\nimport { SET_AUTH_USER } from 'store/auth';\n\nconst Root = styled.div`\n  display: flex;\n  flex-direction: row;\n  margin: 0 auto;\n  width: 100%;\n  position: relative;\n\n  @media (min-width: ${(p) => p.theme.screen.md}) {\n    width: ${(p) => p.theme.screen.md};\n  }\n\n  @media (min-width: ${(p) => parseInt(p.theme.screen.lg, 10) + 20 + 'px'}) {\n    width: ${(p) => p.theme.screen.lg};\n  }\n`;\n\n/**\n * Main layout of the app, when user is authenticated\n */\nconst AppLayout = ({ location, authUser }) => {\n  const [{ auth }, dispatch] = useStore();\n\n  const windowSize = useWindowSize();\n  const isDesktop = windowSize.width >= parseInt(theme.screen.md, 10);\n  const [isSideBarOpen, setIsSidebarOpen] = useState(isDesktop);\n\n  const sideBarRef = useRef('');\n\n  useEffect(() => {\n    dispatch({ type: SET_AUTH_USER, payload: authUser });\n  }, [dispatch, authUser]);\n\n  useClickOutside(sideBarRef, () => {\n    if (!isDesktop && isSideBarOpen) {\n      setIsSidebarOpen(false);\n    }\n  });\n\n  useEffect(() => {\n    setIsSidebarOpen(isDesktop);\n  }, [isDesktop]);\n\n  useEffect(() => {\n    return () => {\n      if (!isDesktop) {\n        setIsSidebarOpen(false);\n      }\n    };\n  }, [location.pathname, isDesktop]);\n\n  if (!auth.user) return null;\n\n  return (\n    <>\n      <Header toggleSideBar={() => setIsSidebarOpen(!isSideBarOpen)} />\n\n      <Root>\n        <SideBar isOpen={isSideBarOpen} sideBarRef={sideBarRef} />\n\n        <Switch>\n          <Route exact path={Routes.HOME} component={Home} />\n\n          <Route exact path={Routes.DISCOUNTS} component={Discount} />\n\n          <Route exact path={Routes.PEOPLE} component={People} />\n\n          <Route exact path={Routes.NOTIFICATIONS} component={Notifications} />\n\n          <Route exact path={Routes.MESSAGES} component={Messages} />\n\n          <Route exact path={Routes.USER_PROFILE} component={Profile} />\n\n          <Route exact path={Routes.POST} component={Post} />\n\n          <Route component={NotFound} />\n        </Switch>\n\n        <UserSuggestions pathname={location.pathname} />\n      </Root>\n    </>\n  );\n};\n\nAppLayout.propTypes = {\n  location: PropTypes.object.isRequired,\n  authUser: PropTypes.object.isRequired,\n};\n\nexport default withRouter(AppLayout);\n","import { useState, useEffect, useCallback } from 'react';\n\n/**\n * React hook for detecting window resizing\n */\nexport const useWindowSize = () => {\n  const isClient = typeof window === 'object';\n\n  const getSize = useCallback(() => {\n    return {\n      width: isClient ? window.innerWidth : undefined,\n      height: isClient ? window.innerHeight : undefined,\n    };\n  }, [isClient]);\n\n  const [windowSize, setWindowSize] = useState(getSize);\n\n  useEffect(() => {\n    if (!isClient) {\n      return false;\n    }\n\n    function handleResize() {\n      setWindowSize(getSize());\n    }\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, [getSize, isClient]);\n\n  return windowSize;\n};\n","import { useEffect } from 'react';\nimport { withRouter } from 'react-router-dom';\n\n/**\n * Scrolls to top on route change\n */\nconst ScrollToTop = ({ children, location: { pathname } }) => {\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return children || null;\n};\n\nexport default withRouter(ScrollToTop);\n","import React, { useEffect } from 'react';\nimport { useQuery } from '@apollo/client';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nimport { GlobalStyle } from './GlobalStyles';\n\nimport { GET_AUTH_USER } from 'graphql/user';\nimport { GET_NEW_CONVERSATIONS_SUBSCRIPTION } from 'graphql/messages';\nimport { NOTIFICATION_CREATED_OR_DELETED } from 'graphql/notification';\n\nimport Message from 'components/Message';\nimport { Loading } from 'components/Loading';\nimport AuthLayout from 'pages/Auth/AuthLayout';\nimport NotFound from 'components/NotFound';\nimport AppLayout from './AppLayout';\nimport ScrollToTop from './ScrollToTop';\n\nimport { useStore } from 'store';\n\n/**\n * Root component of the app\n */\nconst App = () => {\n  const [{ message }] = useStore();\n\n  const { loading, subscribeToMore, data, error, refetch } = useQuery(GET_AUTH_USER);\n\n  useEffect(() => {\n    const unsubscribe = subscribeToMore({\n      document: NOTIFICATION_CREATED_OR_DELETED,\n      updateQuery: async (prev, { subscriptionData }) => {\n        if (!subscriptionData.data) return prev;\n\n        const oldNotifications = prev.getAuthUser.newNotifications;\n        const { operation, notification } = subscriptionData.data.notificationCreatedOrDeleted;\n\n        let newNotifications;\n\n        if (operation === 'CREATE') {\n          // Don't show message notification in Header if user already is on notifications page\n          if (window.location.href.split('/')[3] === 'notifications') {\n            return prev;\n          }\n\n          // Add new notification\n          newNotifications = [notification, ...oldNotifications];\n        } else {\n          // Remove from notifications\n          const notifications = oldNotifications;\n          const index = notifications.findIndex((n) => n.id === notification.id);\n          if (index > -1) {\n            notifications.splice(index, 1);\n          }\n\n          newNotifications = notifications;\n        }\n\n        // Attach new notifications to authUser\n        const authUser = prev.getAuthUser;\n        authUser.newNotifications = newNotifications;\n\n        return { getAuthUser: authUser };\n      },\n    });\n\n    return () => {\n      unsubscribe();\n    };\n  }, [subscribeToMore]);\n\n  useEffect(() => {\n    const unsubscribe = subscribeToMore({\n      document: GET_NEW_CONVERSATIONS_SUBSCRIPTION,\n      updateQuery: (prev, { subscriptionData }) => {\n        if (!subscriptionData.data) return prev;\n\n        const oldConversations = prev.getAuthUser.newConversations;\n        const { newConversation } = subscriptionData.data;\n\n        // Don't show message notification in Header if user already is on messages page\n        if (window.location.href.split('/')[3] === 'messages') {\n          return prev;\n        }\n\n        // If authUser already has unseen message from that user,\n        // remove old message, so we can show the new one\n        const index = oldConversations.findIndex((u) => u.id === newConversation.id);\n        if (index > -1) {\n          oldConversations.splice(index, 1);\n        }\n\n        // Merge conversations\n        const mergeConversations = [newConversation, ...oldConversations];\n\n        // Attach new conversation to authUser\n        const authUser = prev.getAuthUser;\n        authUser.newConversations = mergeConversations;\n\n        return { getAuthUser: authUser };\n      },\n    });\n\n    return () => {\n      unsubscribe();\n    };\n  }, [subscribeToMore]);\n\n  if (loading) return <Loading top=\"xl\" />;\n  if (error) {\n    const isDevelopment = !process.env.NODE_ENV || process.env.NODE_ENV === 'development';\n    if (isDevelopment) {\n      console.error(error);\n    }\n    const devErrorMessage =\n      'Sorry, something went wrong. Please open the browser console to view the detailed error message.';\n    const prodErrorMessage = \"Sorry, something went wrong. We're working on getting this fixed as soon as we can.\";\n    return <NotFound message={isDevelopment ? devErrorMessage : prodErrorMessage} showHomePageLink={false} />;\n  }\n\n  return (\n    <Router>\n      <GlobalStyle />\n\n      <ScrollToTop>\n        <Switch>\n          {data.getAuthUser ? (\n            <Route exact render={() => <AppLayout authUser={data.getAuthUser} />} />\n          ) : (\n            <Route exact render={() => <AuthLayout refetch={refetch} />} />\n          )}\n        </Switch>\n      </ScrollToTop>\n\n      {message.content.text && (\n        <Message type={message.content.type} autoClose={message.content.autoClose}>\n          {message.content.text}\n        </Message>\n      )}\n    </Router>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport { render } from 'react-dom';\nimport { ApolloProvider } from '@apollo/client';\nimport { ThemeProvider } from 'styled-components';\nimport { createApolloClient } from 'utils/apollo-client';\nimport { StoreProvider } from 'store';\n\nimport 'normalize.css';\nimport theme from 'theme';\n\nimport App from 'components/App/App';\n\n// GraphQL HTTP URL\nconst API_URL = process.env.REACT_APP_API_URL;\n\n// GraphQL WebSocket (subscriptions) URL.\n// If its url is not set in .env then it has same url, host and pathname\nconst WEBSOCKET_API_URL = process.env.REACT_APP_WEBSOCKET_API_URL;\nconst websocketApiUrl = WEBSOCKET_API_URL\n  ? WEBSOCKET_API_URL\n  : API_URL.replace('https://', 'ws://').replace('http://', 'ws://');\n\n// Create a Apollo client\nconst apolloClient = createApolloClient(API_URL, websocketApiUrl);\n\nrender(\n  <ApolloProvider client={apolloClient}>\n    <ThemeProvider theme={theme}>\n      <StoreProvider>\n        <App />\n      </StoreProvider>\n    </ThemeProvider>\n  </ApolloProvider>,\n  document.getElementById('root')\n);\n","module.exports = __webpack_public_path__ + \"static/media/background.d60d852e.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/background.79b4d48d.jpg\";"],"sourceRoot":""}